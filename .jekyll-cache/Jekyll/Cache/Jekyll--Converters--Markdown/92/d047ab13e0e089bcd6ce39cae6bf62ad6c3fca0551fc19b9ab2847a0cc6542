I"3<h1 id="개발환경">개발환경</h1>
<ul>
  <li>MacBook Air (M1, 2020)</li>
  <li>OpenJDK 8</li>
  <li>Eclipse 2021-12</li>
  <li>tomcat 8.5<br /><br /><br /></li>
</ul>

<h1 id="시작">시작</h1>
<ul>
  <li>2022.3.4 ~ <br /><br /><br /></li>
</ul>

<h1 id="주제">주제</h1>
<ul>
  <li>웹 백엔드 수업 중 중간 과제로 개인 프로젝트를 진행하게 되었다.</li>
  <li>회원가입/로그인/탈퇴 등 기본적인 회원관리 시스템을 가진 웹 사이트를 만드는 것이다. 주어진 기한은 <code class="language-plaintext highlighter-rouge">한 달</code></li>
  <li>나는 <code class="language-plaintext highlighter-rouge">다음 카페</code>를 소규모로 만들어 보기로 했다. 평소 자주 이용하기도 했고 과제의 평가 기준에서 요구하는 기능들을 다 담고 있기도 했기 때문에 이번 기회에 구현해 보면 그동안 배운 것들을 활용하기에 좋을 거 같았다.</li>
  <li>평가 기준에 사이트의 디자인 구현(HTML/CSS 등 프론트엔드)은 포함되지 않기 때문에 본인이 쓰고 싶은 HTML/CSS 템플릿을 구한 뒤 회원 관리 기능을 구현하면 된다.<br /><br /><br /></li>
</ul>

<h1 id="진행상황">진행상황</h1>
<ul>
  <li><code class="language-plaintext highlighter-rouge">openAPI</code> 사용법을 익히고 싶어서 휴대폰 번호 인증하기 기능을 만들어 보았다.</li>
  <li>그동안 <code class="language-plaintext highlighter-rouge">openAPI</code> 쓰면 쉽게 만들 수 있다, 개발이 편해진다 하는 말을 참 많이 들었는데 직접 해 보니까 쉽지 않아서 많이 헤멨다… 😔 처음 해 보는 것이라 그런걸까?</li>
  <li>그리고 아직 <code class="language-plaintext highlighter-rouge">Spring framework</code>는 배우지 않은 상태라서 <code class="language-plaintext highlighter-rouge">Java</code>와 <code class="language-plaintext highlighter-rouge">Servlet</code>을 이용해 <code class="language-plaintext highlighter-rouge">MVC Model2</code> 패턴으로 구현해야 하는데 대부분의 자료는 <code class="language-plaintext highlighter-rouge">Spring framework</code>를 이용한 것이라 더 어렵게 느껴졌던 것 같다. 하지만 지금까지는 코드로 일일이 구현해 왔던 것을 <code class="language-plaintext highlighter-rouge">Spring</code>에서는 어노테이션으로 처리할 수 있는 것을 보니까 빨리 <code class="language-plaintext highlighter-rouge">Spring</code>을 배워 보고 싶어졌다.</li>
  <li>그래도 이번 구현을 통해 휴대폰 번호 인증 로직이 어떻게 돌아가는 지 알게 되었고 <code class="language-plaintext highlighter-rouge">openAPI</code>도 어떤 방식으로 사용하는지 어느 정도 알게 되어서 좋은 경험이었다고 생각한다.</li>
</ul>

<h2 id="1-네이버-클라우드-회원가입-하기">1. 네이버 클라우드 회원가입 하기</h2>
<ul>
  <li>
    <p>대부분의 휴대폰 번호 인증 API는 유료였는데 네이버 클라우드의 API는 한 달에 50건까지 무료라서 사용했다.<br /></p>
  </li>
  <li><a href="https://giron.tistory.com/75">NAVER CLOUD PlATFORM[SENS API] - 네이버 문자 인증</a></li>
  <li>기본적인 프로젝트 생성 방법은 이 블로그 글을 참고했다.</li>
  <li>처음엔 <code class="language-plaintext highlighter-rouge">Products &amp; Services</code> 탭에서 활성화 된 메뉴가 아주 적을 수 있는데 결제 수단을 등록해 주면 모든 메뉴를 볼 수 있다.</li>
</ul>

<h2 id="2-joinjsp에-휴대폰-번호-인증란-추가">2. join.jsp에 휴대폰 번호 인증란 추가</h2>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!-- join.jsp --&gt;</span>

...
생략

<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"formRow"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;label</span> <span class="na">for=</span><span class="s">"MOD_TEXTFORM_TelField"</span><span class="nt">&gt;</span>휴대폰 번호 <span class="nt">&lt;/label&gt;</span>
    <span class="nt">&lt;label</span> <span class="na">class=</span><span class="s">"phone"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;input</span> <span class="na">id=</span><span class="s">"phone1"</span> <span class="na">type=</span><span class="s">"tel"</span> <span class="na">name=</span><span class="s">"phone1"</span> <span class="na">size=</span><span class="s">"1"</span> <span class="na">maxlength=</span><span class="s">"3"</span> <span class="na">oninput=</span><span class="s">"tabCursor(1)"</span><span class="nt">&gt;</span> - 
    <span class="nt">&lt;input</span> <span class="na">id=</span><span class="s">"phone2"</span> <span class="na">type=</span><span class="s">"tel"</span> <span class="na">name=</span><span class="s">"phone2"</span> <span class="na">size=</span><span class="s">"3"</span> <span class="na">maxlength=</span><span class="s">"4"</span> <span class="na">oninput=</span><span class="s">"tabCursor(2)"</span><span class="nt">&gt;</span> - 
    <span class="nt">&lt;input</span> <span class="na">id=</span><span class="s">"phone3"</span> <span class="na">type=</span><span class="s">"tel"</span> <span class="na">name=</span><span class="s">"phone3"</span> <span class="na">size=</span><span class="s">"3"</span> <span class="na">maxlength=</span><span class="s">"4"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;button</span> <span class="na">id=</span><span class="s">"requestBtn"</span> <span class="na">class=</span><span class="s">"btn"</span> <span class="na">type=</span><span class="s">"submit"</span> <span class="na">name=</span><span class="s">"requestBtn"</span><span class="nt">&gt;</span>휴대폰인증<span class="nt">&lt;/button&gt;</span>
    <span class="nt">&lt;/label&gt;</span>
<span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">"phoneMsg"</span><span class="nt">&gt;&lt;/div&gt;</span>
<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"formRow"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;label</span> <span class="na">for=</span><span class="s">"MOD_TEXTFORM_EmailField"</span><span class="nt">&gt;</span>인증번호 <span class="nt">&lt;/label&gt;</span>
    <span class="nt">&lt;label</span> <span class="na">class=</span><span class="s">"phone"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"text"</span> <span class="na">name=</span><span class="s">"validateNum"</span> <span class="na">id=</span><span class="s">"validateNum"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;button</span> <span class="na">id=</span><span class="s">"validateBtn"</span> <span class="na">class=</span><span class="s">"btn"</span> <span class="na">type=</span><span class="s">"submit"</span> <span class="na">name=</span><span class="s">"validateBtn"</span><span class="nt">&gt;</span>인증번호 확인<span class="nt">&lt;/button&gt;</span>
    <span class="nt">&lt;/label&gt;</span>
<span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">"validateMsg"</span><span class="nt">&gt;&lt;/div&gt;</span>

...
생략
</code></pre></div></div>

<h2 id="3-휴대폰-번호-인증을-처리하는-클래스-만들기">3. 휴대폰 번호 인증을 처리하는 클래스 만들기</h2>
<ul>
  <li><a href="https://bemind.tistory.com/66"></a>
```java
// SmsService.java</li>
</ul>

<p>import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.net.HttpURLConnection;
import java.net.URL;
import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;
import java.util.ArrayList;
import java.util.Base64;
import java.util.Random;</p>

<p>import javax.crypto.Mac;
import javax.crypto.spec.SecretKeySpec;</p>

<p>import org.json.simple.JSONArray;
import org.json.simple.JSONObject;</p>

<p>public class SmsService 
{
	private String makeSignature(String method, String url, String timestamp, String accessKey, String secretKey) throws UnsupportedEncodingException, NoSuchAlgorithmException, InvalidKeyException
	{
		String space = “ “;					// one space
		String newLine = “\n”;					// new line</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	String message = new StringBuilder()
			.append(method)
			.append(space)
			.append(url)
			.append(newLine)
			.append(timestamp)
			.append(newLine)
			.append(accessKey)
			.toString();
	


	SecretKeySpec signingKey;
	String encodeBase64String;
	try {
		signingKey = new SecretKeySpec(secretKey.getBytes("UTF-8"), "HmacSHA256");
		Mac mac = Mac.getInstance("HmacSHA256");
		mac.init(signingKey);
		byte[] rawHmac = mac.doFinal(message.getBytes("UTF-8"));
		encodeBase64String = Base64.getEncoder().encodeToString(rawHmac);
	} 
	catch (Exception e) {
		encodeBase64String = e.toString();
	}
	
  return encodeBase64String;
}
</code></pre></div></div>

<p>//	{
//    “type”:”(SMS | LMS | MMS)”, // sms 타입
//    “contentType”:”(COMM | AD)”, // 메세지 타입
//    “countryCode”:”string”, // 국가번호
//    “from”:”string”,		// 발신번호
//    “subject”:”string”,		// 기본 메시지 제목
//    “content”:”string”,		// 기본 메시지 내용
//    “messages”:[			// 메시지 정보(Object) - 최대 1000개
//        {
//            “to”:”string”,	// 수신번호(String)
//            “subject”:”string”, // 개별 메시지 제목(String)
//            “content”:”string”  // 개별 메시지 내용(String)
//        }
//    ]
//}</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>@SuppressWarnings("unchecked")
public int sendSms(String dstPhoneNumber)
{
	System.out.println("sendSms() 호출");
	
	String method = "POST";					// method
	String smsUrl = "https://sens.apigw.ntruss.com";	// url (include query string)
	String requestUrl = "/sms/v2/services/";
	String requestUrlType = "/messages";
	String accessKey = "G5DvGW59hLwnFpWannwz";			// access key id (from portal or Sub Account)
	String secretKey = "BqwH3p2H8cNeGtDwHfFoebDFFdtOHjFYE70YPoPG";
	String serviceId = "ncp:sms:kr:275504224302:join-sms";
	String timestamp = Long.toString(System.currentTimeMillis());			// current timestamp (epoch)
	
	requestUrl += serviceId + requestUrlType;
	String apiUrl = smsUrl + requestUrl;
	
	// 요청 바디 생성
	JSONObject bodyJson = new JSONObject();
	JSONObject toJson = new JSONObject();
	JSONArray toArr = new JSONArray();
	
	toJson.put("content", "test sms");
	toJson.put("to", dstPhoneNumber);
	toArr.add(toJson);
	
	bodyJson.put("type", "SMS");
	bodyJson.put("contentType", "COMM");
	bodyJson.put("countryCode", "82");
	bodyJson.put("from", "01029775074");
	bodyJson.put("subject", "[Web 발신]");
	
	// 난수 생성
	int min = 1000;
	int max = 9999;
	int validateNum = (int) (Math.random() * (max - min + 1)) + min;
	bodyJson.put("content", Integer.toString(validateNum));
	System.out.println("validateNum : " + validateNum);
	
	bodyJson.put("messages", toArr);
	
	String body = bodyJson.toString();
	
	System.out.println("body : " + body);
	
	try {
		URL url = new URL(apiUrl);
		
		HttpURLConnection con = (HttpURLConnection) url.openConnection();
		con.setUseCaches(false);
		con.setDoOutput(true);
		con.setDoInput(true);
		con.setRequestProperty("Content-Type", "application/json");
		con.setRequestProperty("x-ncp-apigw-timestamp", timestamp);
		con.setRequestProperty("x-ncp-iam-access-key", accessKey);
		con.setRequestProperty("x-ncp-apigw-signature-v2", makeSignature(method, requestUrl, timestamp, accessKey, secretKey));
		con.setRequestMethod(method);
		con.setDoOutput(true);
		DataOutputStream dos = new DataOutputStream(con.getOutputStream());
		
		dos.write(body.getBytes());
		dos.flush();
		dos.close();
		
		int responseCode = con.getResponseCode();
		BufferedReader br;
		System.out.println("responseCode : " + responseCode);
		if (202 == responseCode)
		{
			// 정상호출
			br = new BufferedReader(new InputStreamReader(con.getInputStream()));
		}
		else 
		{
			// 에러발생
			br = new BufferedReader(new InputStreamReader(con.getErrorStream()));
		}
		
		String inputLine;
		StringBuffer response = new StringBuffer();
		while (null != (inputLine = br.readLine()))
			response.append(inputLine);
		
		br.close();
		
		System.out.println(response.toString());
	}
	catch (Exception e) {
		System.out.println(e);
	}
	
	System.out.println("sendSms() 끝");
	
	return validateNum;
} } ```
</code></pre></div></div>

<h1 id="마감까지">마감까지</h1>
<ul>
  <li><code class="language-plaintext highlighter-rouge">D-25</code></li>
</ul>
:ET