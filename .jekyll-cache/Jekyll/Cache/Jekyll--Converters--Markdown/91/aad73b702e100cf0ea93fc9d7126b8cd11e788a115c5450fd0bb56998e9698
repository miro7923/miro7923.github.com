I"<h1 id="-커넥션-풀-connection-pool이란">👀 커넥션 풀 (Connection Pool)이란?</h1>
<ul>
  <li><code class="language-plaintext highlighter-rouge">JDBC</code>를 연동하기 위해서는 드라이버를 로드하고 <code class="language-plaintext highlighter-rouge">JDBC URL</code>로 접속하여 <code class="language-plaintext highlighter-rouge">Connection</code> 객체를 얻어오는 단계를 거쳐야 한다.</li>
  <li>커넥션 풀은 데이터베이스와 연결된 <code class="language-plaintext highlighter-rouge">Connection</code> 객체를 미리 생성하여 풀(Pool)에 저장해 두고 필요할 때마다 풀에 접근하여 <code class="language-plaintext highlighter-rouge">Connection</code> 객체를 사용하고 사용이 끝나면 다시 반환하는 것을 말한다.</li>
  <li>사용자가 웹 사이트에 <code class="language-plaintext highlighter-rouge">Connection</code> 객체를 생성하게 되면 메모리 소모가 많고 시간도 오래 걸린다.</li>
  <li>하지만 풀에 저장해서 사용한다면 미리 생성된 객체를 쓰기 때문에 생성에 시간이 걸리지도 않고 또 쓰지 않는 객체는 다시 풀 속에 넣어뒀다가 필요할 때 꺼내 쓰면 되기 때문에 불필요한 메모리 낭비가 없어 프로그램 효율과 성능이 전체적으로 증가하게 된다.</li>
</ul>

<h2 id="커넥션풀의-연결전략">커넥션풀의 연결전략</h2>
<p>1) DB연결이 필요한 JSP 페이지 (service()) 실행시 DB연결 요청당 1개씩 할당<br />
2) 커넥션의 개수를 제한<br />
3) 커넥션의 사용을 다 한 경우 (객체관리자가 자원을 모두 다 쓰면) 자원 회수<br /></p>

<h2 id="실제-동작-구현">실제 동작 구현</h2>
<ol>
  <li>웹브라우저 요청<br /></li>
  <li>할당될 커넥션 객체가 있는지 없는지 체크<br />
2-1. 있을 때<br />
    <ol>
      <li>커넥션 객체 할당 (pool에 저장된 정보 전달)<br /></li>
      <li>객체 사용<br /></li>
      <li>객체 사용 반환 (자원해제 X, pool에 저장)<br />
2-2. 없을 때<br /></li>
      <li>커넥션 객체를 기다림 (커넥션이 반환될 때 까지)<br /></li>
      <li>임시 커넥션 객체 생성 -&gt; 사용 -&gt; 반환 (사라짐)<br /><br /><br /></li>
    </ol>
  </li>
</ol>

<h1 id="jndi-java-namming-and-directory-interface">JNDI (Java Namming and Directory Interface)</h1>
<ul>
  <li>명명 서비스 및 디렉토리 서비스에 접근하기 위한 API. 즉 특정 자원에 접근하기 위한 이름으로 사용된다.</li>
  <li><a href="https://commons.apache.org/">아파치 홈페이지</a>에 가서 collections, DBCP, Pool 다운받기
    <ul>
      <li>압축 풀어서 commons-collections4-4.4.jar 처럼 옆에 잡다한 이름 안 붙은걸로 복사해서 WEB-INF/lib에 붙여넣기</li>
    </ul>
  </li>
  <li><code class="language-plaintext highlighter-rouge">API</code>를 설치했으면 <code class="language-plaintext highlighter-rouge">xml</code> 파일을 만들어야 한다.</li>
</ul>

<h2 id="xml">XML</h2>
<ul>
  <li>태그 형태로 데이터를 저장하는 페이지로 <code class="language-plaintext highlighter-rouge">HTML</code> 태그 형태는 아니지만 지정된 태그를 통해서 데이터를 저장하고 사용한다.</li>
  <li><code class="language-plaintext highlighter-rouge">src/main/webapp/META-INF</code>에 <code class="language-plaintext highlighter-rouge">content.xml</code> 파일을 생성하고 서버에 공유할 리소스를 정의한다.</li>
</ul>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span>

<span class="nt">&lt;Context&gt;</span>
  <span class="nt">&lt;Resource</span> 
    <span class="na">name=</span><span class="s">"jdbc/mysql"</span> 
    <span class="na">auth=</span><span class="s">"Container"</span> 
    <span class="na">type=</span><span class="s">"javax.sql.DataSource"</span> 
    <span class="na">username=</span><span class="s">"root"</span> 
    <span class="na">password=</span><span class="s">"1234"</span> 
    <span class="na">driverClassName=</span><span class="s">"com.mysql.cj.jdbc.Driver"</span> 
    <span class="na">url=</span><span class="s">"jdbc:mysql://localhost:3306/jspdb"</span> 
    <span class="na">maxActive=</span><span class="s">"500"</span>
  <span class="nt">/&gt;</span>
<span class="nt">&lt;/Context&gt;</span>
</code></pre></div></div>

<ul>
  <li>이렇게 작성하면 되는데 각 코드 라인의 의미는 다음과 같다.</li>
</ul>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;Context&gt;</span>
  <span class="c">&lt;!-- Context : 프로젝트 --&gt;</span>
  <span class="nt">&lt;Resource</span> 
    <span class="na">name=</span><span class="s">"디비에 접근하기 위한 이름"</span> 
    <span class="na">auth=</span><span class="s">"컨테이너 자원 관리자 설정 - Application or Container"</span> 
    <span class="na">type=</span><span class="s">"리소스를 사용할 때 실제로 사용되는 클래스 타입"</span> 
    <span class="na">username=</span><span class="s">"디비 아이디"</span> 
    <span class="na">password=</span><span class="s">"디비 비밀번호"</span> 
    <span class="na">driverClassName=</span><span class="s">"드라이버 주소"</span> 
    <span class="na">url=</span><span class="s">"디비 연결 주소"</span> 
    <span class="na">maxActive=</span><span class="s">"커넥션 회수 대기시간"</span>
  <span class="nt">/&gt;</span>
<span class="nt">&lt;/Context&gt;</span>
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">xml</code> 파일에서도 주석문 사용이 가능하지만 사용하지 않는 것이 좋다.</li>
  <li>왜냐면 주석 처리한 코드가 실행되는 경우가 있는데 이 때 에러가 나도 컴파일 에러가 표시되지 않고 단순 서버 에러라고만 나오기 때문에 원인 찾기가 매우매우 힘들다.</li>
</ul>
:ET