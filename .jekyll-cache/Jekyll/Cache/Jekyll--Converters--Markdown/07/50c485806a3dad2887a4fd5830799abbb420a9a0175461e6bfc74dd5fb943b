I"@k<h1 id="-jdbcjava-database-connectivity란">👀 JDBC(Java Database Connectivity)란?</h1>
<ul>
  <li><code class="language-plaintext highlighter-rouge">Java</code>랑 <code class="language-plaintext highlighter-rouge">DBMS</code>를 연결시켜주는 <code class="language-plaintext highlighter-rouge">API</code></li>
  <li>즉 자바랑 DB를 연결시켜서 사용할 수 있게 해주는 기능들이 모여있는 라이브러리라 할 수 있다.</li>
  <li>데이터베이스에 데이터를 삽입, 수정, 삭제할 때 <code class="language-plaintext highlighter-rouge">SQL</code> 프롬프트에서 <code class="language-plaintext highlighter-rouge">SQL</code>문을 사용하지 않아도 자바 프로그램에서 <code class="language-plaintext highlighter-rouge">SQL</code>문을 사용하여 데이터베이스에 데이터를 추가하고 삭제하는 작업을 할 수 있게 하는 <code class="language-plaintext highlighter-rouge">API</code>이다.</li>
  <li><code class="language-plaintext highlighter-rouge">JDBC</code>는 <code class="language-plaintext highlighter-rouge">DBMS</code> 종류에 상관없이 독립적으로 사용 가능하다.
    <ul>
      <li>여러 언어에서 작동하는 방법이 전반적으로 같다고 할 수 있다.
<br /><br /></li>
    </ul>
  </li>
</ul>

<h2 id="jdbc-드라이버-설치">JDBC 드라이버 설치</h2>
<ul>
  <li><code class="language-plaintext highlighter-rouge">mysql</code> 홈페이지에서 <code class="language-plaintext highlighter-rouge">Connect J</code>를 다운받는다.(현재 최신버전인 8.0.28)</li>
  <li>윈도우라면 <code class="language-plaintext highlighter-rouge">.zip</code> 파일을 받으면 되고 맥이라면 <code class="language-plaintext highlighter-rouge">.tar</code> 파일을 받는다.</li>
  <li>압축을 풀면 <code class="language-plaintext highlighter-rouge">mysql-connector-java-8.0.28.jar</code>란 파일이 있다.</li>
  <li>저걸 <code class="language-plaintext highlighter-rouge">JDBC</code>를 사용하고자 하는 (이클립스)프로젝트의 <code class="language-plaintext highlighter-rouge">WEB-INF/lib</code> 폴더에 넣는다.(경로 다르면 안 됨!! 무조건 저기에 넣어야 함)</li>
  <li>그러면 설치 끝!
<br /><br /></li>
</ul>

<h2 id="jdbc-연동">JDBC 연동</h2>
<h3 id="1-드라이버-로드하드디스크에-있는-프로그램을-메모리로-불러오기">1. 드라이버 로드(하드디스크에 있는 프로그램을 메모리로 불러오기)</h3>
<ul>
  <li>아까 설치한 <code class="language-plaintext highlighter-rouge">JDBC</code> 드라이버를 불러올 것이다.
    <div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Class.forName("com.mysql.cj.jdbc.Driver"); // static method라서 객체 생성 없이 바로 호출할 수 있음
</code></pre></div>    </div>
  </li>
  <li>이렇게 입력하면 드라이버를 로드할 수 있다.</li>
  <li>MySQL 홈페이지 가서 Documentation 페이지 - Connector/J 8.0 Developer Guide - 6. ConnectJ reference - 6.1 Driver/Datasource Class Name 가면 드라이버를 로드할 때 무슨 클래스명을 입력해야 하는지 찾을 수 있다.
    <ul>
      <li>그 외에도 레퍼런스가 필요하면 참고하자.</li>
    </ul>
  </li>
  <li>만약 설치를 안 했다면 실행시 참고할 드라이버가 없어서 <code class="language-plaintext highlighter-rouge">HTTP500</code> 에러가 뜬다.<br /><br /></li>
</ul>

<h3 id="2-db-연결">2. DB 연결</h3>
<ul>
  <li><code class="language-plaintext highlighter-rouge">DriverManager.getConnection("디비주소", "디비아이디", "디비비밀번호");</code></li>
  <li><code class="language-plaintext highlighter-rouge">DriverManager</code> 객체를 이용해 <code class="language-plaintext highlighter-rouge">DB</code>와 드라이버를 연결한다.</li>
</ul>

<div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/jspdb", "root", "1234");
</code></pre></div></div>

<ul>
  <li>이런 식으로 <code class="language-plaintext highlighter-rouge">DB</code>의 주소와 아이디, 비밀번호를 입력한 뒤 연결 객체 정보를 <code class="language-plaintext highlighter-rouge">Connection</code>에 저장한다.</li>
  <li>이러면 <code class="language-plaintext highlighter-rouge">mysql</code>과 연결된 것이다. 이제 <code class="language-plaintext highlighter-rouge">jsp</code> 파일에서 <code class="language-plaintext highlighter-rouge">SQL</code>문을 작성해 데이터베이스를 관리할 수 있다.</li>
</ul>

<h2 id="jdbc-사용-예제-1-사용자가-홈페이지에-회원가입-하는-상황">JDBC 사용 예제 1) 사용자가 홈페이지에 회원가입 하는 상황</h2>

<h3 id="1-insertformjsp라는-이름으로-간단한-회원가입-페이지를-만든다">1. <code class="language-plaintext highlighter-rouge">insertForm.jsp</code>라는 이름으로 간단한 회원가입 페이지를 만든다.</h3>
<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;form</span> <span class="na">action=</span><span class="s">"insertPro.jsp"</span> <span class="na">method=</span><span class="s">"post"</span><span class="nt">&gt;</span>
    아이디 : <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"text"</span> <span class="na">name=</span><span class="s">"id"</span><span class="nt">&gt;&lt;br&gt;</span>
    비밀번호 : <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"password"</span> <span class="na">name=</span><span class="s">"pass"</span><span class="nt">&gt;&lt;br&gt;</span>
    이름 : <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"text"</span> <span class="na">name=</span><span class="s">"name"</span><span class="nt">&gt;&lt;br&gt;</span>
    <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"submit"</span> <span class="na">value=</span><span class="s">"전송하기"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;/form&gt;</span>
</code></pre></div></div>

<ul>
  <li>여기서 사용자가 정보를 입력하고 <code class="language-plaintext highlighter-rouge">submit</code>버튼을 클릭하면 <code class="language-plaintext highlighter-rouge">insertPro.jsp</code> 페이지로 전달된다.<br /><br /></li>
</ul>

<h3 id="2-insertprojsp라는-이름으로-회원가입-정보를-받아서-db에-사용자-정보를-추가하는-페이지를-만든다">2. <code class="language-plaintext highlighter-rouge">insertPro.jsp</code>라는 이름으로 회원가입 정보를 받아서 <code class="language-plaintext highlighter-rouge">DB</code>에 사용자 정보를 추가하는 페이지를 만든다.</h3>
<div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="nt">&lt;%</span> <span class="c1">// 스크립틀릿 사용</span>
    <span class="c1">// 0단계 : 드라이버 설치 - 완료됐으니 로드 단계로 넘어간다.</span>
    <span class="c1">// 1단계 : 드라이버 로드</span>
    <span class="nc">Class</span><span class="o">.</span><span class="na">forName</span><span class="o">(</span><span class="s">"com.mysql.cj.jdbc.Driver"</span><span class="o">);</span>
  
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"드라이버 로드 성공!"</span><span class="o">);</span>
    
    <span class="c1">// 2단계 : 디비 연결 (디비 바꾸려면 jdbc:mysql://localhost:3306/뒤에 디비 이름만 바꿔주면 됨)</span>
    <span class="nc">Connection</span> <span class="n">con</span> <span class="o">=</span> <span class="nc">DriverManager</span><span class="o">.</span><span class="na">getConnection</span><span class="o">(</span><span class="s">"jdbc:mysql://localhost:3306/jspdb"</span><span class="o">,</span> <span class="s">"root"</span><span class="o">,</span> <span class="s">"1234"</span><span class="o">);</span>
    
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"디비 연결 성공!"</span><span class="o">);</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"연결정보 : "</span> <span class="o">+</span> <span class="n">con</span><span class="o">);</span>
    
    <span class="c1">// 3단계 : SQL 구문 생성 &amp; stmt(statement) 객체 생성</span>
    <span class="c1">// String sql = "insert into itwill_member (id, pass, name) values('id', 'pw', 'name')";</span>
    
    <span class="c1">// secure 코딩 예시) values에 담을 데이터의 개수만큼 ?를 넣는다.</span>
    <span class="nc">String</span> <span class="n">sql</span> <span class="o">=</span> <span class="s">"insert into itwill_member (id, pass, name) values(?, ?, ?)"</span><span class="o">;</span>
    
    <span class="c1">// stmt 객체 만들기 : sql 구문을 실행하는 객체 	   </span>
    <span class="c1">// Statement stmt = con.createStatement(); // 하지만 이렇게 쓰려면 valuse 괄호 안에 따옴표를 넘 많이 써야해서 안 쓸 예정</span>
                            <span class="c1">// 그리고 따옴표 안에 정보를 노출해서 써야해서 보안적으로 좋지 않다.</span>
    <span class="c1">// Statement랑 PreparedStatement 객체 둘 중 하나만 쓸 수 있음</span>
    
    <span class="c1">// pstmt 객체 : sql 구문을 실행하는 객체</span>
    <span class="nc">PreparedStatement</span> <span class="n">pstmt</span> <span class="o">=</span> <span class="n">con</span><span class="o">.</span><span class="na">prepareStatement</span><span class="o">(</span><span class="n">sql</span><span class="o">);</span> <span class="c1">// 객체를 만들 때 쿼리 정보를 가져가서 사전준비함</span>
    
    <span class="c1">// ??? 값 sql 구문에 채워넣기</span>
    <span class="c1">// pstmt.setXXXXXX(물음표의 위치, 실제 들어갈 값);</span>
    <span class="c1">// =</span><span class="err">&gt;</span> <span class="no">XXXXX</span> <span class="o">:</span> <span class="n">컬럼의</span> <span class="n">데이터타입</span><span class="o">(</span><span class="kt">int</span><span class="o">,</span> <span class="kt">double</span><span class="o">,</span> <span class="n">string</span><span class="o">,</span> <span class="o">...)</span><span class="n">에</span> <span class="n">따라</span> <span class="n">변경</span>
    <span class="c1">// * ? 개수와 동일한 구문을 수행해야 함 - ?가 3개면 채우는 구문 3개 있어야 함</span>
    <span class="c1">// null 넣고 싶으면 쿼리문(String sql) 안에 직접 넣으면 됨</span>
    <span class="n">pstmt</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="n">id</span><span class="o">);</span> <span class="c1">// 뜻 : 1번 물음표에 id에 해당하는 값을 넣는다.</span>
    <span class="n">pstmt</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="mi">2</span><span class="o">,</span> <span class="n">pass</span><span class="o">);</span>
    <span class="n">pstmt</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="mi">3</span><span class="o">,</span> <span class="n">name</span><span class="o">);</span>
    
    <span class="c1">// 4단계 : SQL 구문 실행</span>
    <span class="c1">// stmt.executeUpdate(sql); // 얘는 미리 준비 안해서 파라미터로 넣어줌</span>
    <span class="n">pstmt</span><span class="o">.</span><span class="na">executeUpdate</span><span class="o">();</span> <span class="c1">// 그리고 바로 실행</span>
    
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"insert 동작 완료!"</span><span class="o">);</span>
  <span class="nt">%&gt;</span>
</code></pre></div></div>

<ul>
  <li>위 과정을 완료하면 터미널이나 워크벤치에서 직접 <code class="language-plaintext highlighter-rouge">SQL</code>문을 작성하지 않았는데도 <code class="language-plaintext highlighter-rouge">DB</code>에 데이터가 삽입된다!<br /><br /></li>
</ul>

<h3 id="️-페이지를-실행할-땐-formjsp-페이지에서-한다">❗️ 페이지를 실행할 땐 <code class="language-plaintext highlighter-rouge">~Form.jsp</code> 페이지에서 한다.</h3>
<ul>
  <li>사용자가 보는 페이지는 <code class="language-plaintext highlighter-rouge">Form</code> 페이지이지 처리를 하는 <code class="language-plaintext highlighter-rouge">Pro</code> 페이지를 사용자가 볼 수 없고 그럴 필요도 없기 때문이다.</li>
  <li><code class="language-plaintext highlighter-rouge">Pro</code> 페이지는 개발과정에서 개발자만 보는 페이지이다.</li>
</ul>

<h2 id="jdbc-사용-예제-2-회원-정보를-수정하는-상황">JDBC 사용 예제 2) 회원 정보를 수정하는 상황</h2>
<h3 id="1-updateformjsp라는-이름으로-수정할-정보를-입력받을-간단한-페이지를-하나-만든다">1. <code class="language-plaintext highlighter-rouge">updateForm.jsp</code>라는 이름으로 수정할 정보를 입력받을 간단한 페이지를 하나 만든다.</h3>
<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="nt">&lt;form</span> <span class="na">action=</span><span class="s">"updatePro.jsp"</span> <span class="na">method=</span><span class="s">"post"</span><span class="nt">&gt;</span>
    아이디 : <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"text"</span> <span class="na">name=</span><span class="s">"id"</span><span class="nt">&gt;&lt;br&gt;</span>
    비밀번호 : <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"password"</span> <span class="na">name=</span><span class="s">"pass"</span><span class="nt">&gt;&lt;br&gt;</span>
    수정할 이름 : <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"text"</span> <span class="na">name=</span><span class="s">"update_name"</span><span class="nt">&gt;&lt;br&gt;</span>
    <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"submit"</span> <span class="na">value=</span><span class="s">"전송하기"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;/form&gt;</span>
</code></pre></div></div>

<h3 id="2-updateprojsp라는-이름으로-전송받은-정보를-db에-삽입할-페이지를-만든다">2. <code class="language-plaintext highlighter-rouge">updatePro.jsp</code>라는 이름으로 전송받은 정보를 <code class="language-plaintext highlighter-rouge">DB</code>에 삽입할 페이지를 만든다.</h3>
<div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="nt">&lt;%</span>
    <span class="c1">// 그냥 받으면 한글이 깨지기 때문에 꼭 한글처리 후 데이터 받기를 시작한다.</span>
    <span class="n">request</span><span class="o">.</span><span class="na">setCharacterEncoding</span><span class="o">(</span><span class="s">"UTF-8"</span><span class="o">);</span>
    
    <span class="c1">// 전달된 파라미터 저장</span>
    <span class="nc">String</span> <span class="n">id</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"id"</span><span class="o">);</span>
    <span class="nc">String</span> <span class="n">pass</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"pass"</span><span class="o">);</span>
    <span class="nc">String</span> <span class="n">uName</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"update_name"</span><span class="o">);</span>
  <span class="nt">%&gt;</span>
  
  아이디 : <span class="nt">&lt;%=</span><span class="n">id</span> <span class="nt">%&gt;&lt;br&gt;</span>
  비밀번호 : <span class="nt">&lt;%=</span><span class="n">pass</span> <span class="nt">%&gt;&lt;br&gt;</span>
  수정할 이름 : <span class="nt">&lt;%=</span><span class="n">uName</span> <span class="nt">%&gt;&lt;br&gt;</span>
  <span class="nt">&lt;hr&gt;</span>
  
  <span class="nt">&lt;%</span>
    <span class="kd">final</span> <span class="nc">String</span> <span class="no">DRIVER</span> <span class="o">=</span> <span class="s">"com.mysql.cj.jdbc.Driver"</span><span class="o">;</span>
    <span class="kd">final</span> <span class="nc">String</span> <span class="no">DBURL</span> <span class="o">=</span> <span class="s">"jdbc:mysql://localhost:3306/jspdb"</span><span class="o">;</span>
    <span class="kd">final</span> <span class="nc">String</span> <span class="no">DBID</span> <span class="o">=</span> <span class="s">"root"</span><span class="o">;</span>
    <span class="kd">final</span> <span class="nc">String</span> <span class="no">DBPASS</span> <span class="o">=</span> <span class="s">"1234"</span><span class="o">;</span>
  <span class="nt">%&gt;</span>
  
  <span class="nt">&lt;h2&gt;</span> 1. 드라이버 로드 <span class="nt">&lt;/h2&gt;</span>
  <span class="nt">&lt;%</span>
    <span class="nc">Class</span><span class="o">.</span><span class="na">forName</span><span class="o">(</span><span class="no">DRIVER</span><span class="o">);</span> <span class="c1">// Class는 java.lang 패키지에 들어서 임포트 없이 쓸 수 있음.</span>
    
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"드라이버 로드 성공!"</span><span class="o">);</span>
  <span class="nt">%&gt;</span>
  
  <span class="nt">&lt;h2&gt;</span> 2. 디비 연결 <span class="nt">&lt;/h2&gt;</span>
  <span class="nt">&lt;%</span>
    <span class="nc">Connection</span> <span class="n">con</span> <span class="o">=</span> <span class="nc">DriverManager</span><span class="o">.</span><span class="na">getConnection</span><span class="o">(</span><span class="no">DBURL</span><span class="o">,</span> <span class="no">DBID</span><span class="o">,</span> <span class="no">DBPASS</span><span class="o">);</span>
    
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"디비연결 성공!"</span><span class="o">);</span>
  <span class="nt">%&gt;</span>
  
  <span class="nt">&lt;h2&gt;</span> 3. sql 작성 <span class="err">&amp;</span> pstmt 생성 <span class="nt">&lt;/h2&gt;</span>
  <span class="nt">&lt;%</span>
    <span class="nc">String</span> <span class="n">sql</span> <span class="o">=</span> <span class="s">"update itwill_member set name=? where id=? and pass=?"</span><span class="o">;</span> <span class="c1">// ?는 mysql 문법이 아니고 jsp 코드에서만 쓸 수 있는 문법</span>
    
    <span class="nc">PreparedStatement</span> <span class="n">pstmt</span> <span class="o">=</span> <span class="n">con</span><span class="o">.</span><span class="na">prepareStatement</span><span class="o">(</span><span class="n">sql</span><span class="o">);</span> <span class="c1">// 인터페이스를 통해 객체를 생성하지 않고 만들어진 정보를 전달</span>
    
    <span class="c1">// ? 채우기</span>
    <span class="n">pstmt</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="n">uName</span><span class="o">);</span>
    <span class="n">pstmt</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="mi">2</span><span class="o">,</span> <span class="n">id</span><span class="o">);</span>
    <span class="n">pstmt</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="mi">3</span><span class="o">,</span> <span class="n">pass</span><span class="o">);</span>
  <span class="nt">%&gt;</span>
  
  <span class="nt">&lt;h2&gt;</span> 4. sql 실행 <span class="nt">&lt;/h2&gt;</span>
  <span class="nt">&lt;%</span>
    <span class="n">pstmt</span><span class="o">.</span><span class="na">executeUpdate</span><span class="o">();</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"회원정보 수정 완료!"</span><span class="o">);</span>
  <span class="nt">%&gt;</span>
</code></pre></div></div>

<h2 id="jdbc-사용-예제-3-사용자-정보를-삭제하는-상황">JDBC 사용 예제 3) 사용자 정보를 삭제하는 상황</h2>
<h3 id="1-deleteformjsp라는-이름으로-삭제할-사용자의-정보를-입력받는-페이지를-만든다">1. <code class="language-plaintext highlighter-rouge">deleteForm.jsp</code>라는 이름으로 삭제할 사용자의 정보를 입력받는 페이지를 만든다.</h3>
<div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="nt">&lt;form</span> <span class="na">action=</span><span class="s">"deletePro.jsp"</span> <span class="na">method=</span><span class="s">"post"</span><span class="nt">&gt;</span>
    아이디 : <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"text"</span> <span class="na">name=</span><span class="s">"id"</span><span class="nt">&gt;&lt;br&gt;</span>
    비밀번호 : <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"password"</span> <span class="na">name=</span><span class="s">"pass"</span><span class="nt">&gt;&lt;br&gt;</span>
    <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"submit"</span> <span class="na">value=</span><span class="s">"전송하기"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;/form&gt;</span>
</code></pre></div></div>

<h3 id="2-deleteprojsp라는-이름으로-db에서-전달받은-정보를-삭제하는-작업을-하는-페이지를-만든다">2. <code class="language-plaintext highlighter-rouge">deletePro.jsp</code>라는 이름으로 <code class="language-plaintext highlighter-rouge">DB</code>에서 전달받은 정보를 삭제하는 작업을 하는 페이지를 만든다.</h3>
<div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="nt">&lt;%</span>
    <span class="n">request</span><span class="o">.</span><span class="na">setCharacterEncoding</span><span class="o">(</span><span class="s">"UTF-8"</span><span class="o">);</span>
  
    <span class="nc">String</span> <span class="n">id</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"id"</span><span class="o">);</span>
    <span class="nc">String</span> <span class="n">pass</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"pass"</span><span class="o">);</span>
  <span class="nt">%&gt;</span>
  
  <span class="nt">&lt;%</span>
    <span class="kd">final</span> <span class="nc">String</span> <span class="no">DRIVER</span> <span class="o">=</span> <span class="s">"com.mysql.cj.jdbc.Driver"</span><span class="o">;</span>
    <span class="kd">final</span> <span class="nc">String</span> <span class="no">DBURL</span> <span class="o">=</span> <span class="s">"jdbc:mysql://localhost:3306/jspdb"</span><span class="o">;</span>
    <span class="kd">final</span> <span class="nc">String</span> <span class="no">DBID</span> <span class="o">=</span> <span class="s">"root"</span><span class="o">;</span>
    <span class="kd">final</span> <span class="nc">String</span> <span class="no">DBPASS</span> <span class="o">=</span> <span class="s">"1234"</span><span class="o">;</span>
  <span class="nt">%&gt;</span>
  
  <span class="nt">&lt;h2&gt;</span> 1. 드라이버 로드 <span class="nt">&lt;/h2&gt;</span>
  <span class="nt">&lt;%</span>
    <span class="nc">Class</span><span class="o">.</span><span class="na">forName</span><span class="o">(</span><span class="no">DRIVER</span><span class="o">);</span>
  <span class="nt">%&gt;</span>
  
  <span class="nt">&lt;h2&gt;</span> 2. 디비 연결 <span class="nt">&lt;/h2&gt;</span>
  <span class="nt">&lt;%</span>
    <span class="nc">Connection</span> <span class="n">con</span> <span class="o">=</span> <span class="nc">DriverManager</span><span class="o">.</span><span class="na">getConnection</span><span class="o">(</span><span class="no">DBURL</span><span class="o">,</span> <span class="no">DBID</span><span class="o">,</span> <span class="no">DBPASS</span><span class="o">);</span>
  <span class="nt">%&gt;</span>
  
  <span class="nt">&lt;h2&gt;</span> 3. sql 작성 <span class="err">&amp;</span> pstmt 생성 <span class="nt">&lt;/h2&gt;</span>
  <span class="nt">&lt;%</span>
    <span class="nc">String</span> <span class="n">sql</span> <span class="o">=</span> <span class="s">"delete from itwill_member where id=? and pass=?"</span><span class="o">;</span>
    
    <span class="nc">PreparedStatement</span> <span class="n">pstmt</span> <span class="o">=</span> <span class="n">con</span><span class="o">.</span><span class="na">prepareStatement</span><span class="o">(</span><span class="n">sql</span><span class="o">);</span>
    <span class="n">pstmt</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="n">id</span><span class="o">);</span>
    <span class="n">pstmt</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="mi">2</span><span class="o">,</span> <span class="n">pass</span><span class="o">);</span>
  <span class="nt">%&gt;</span>
  
  <span class="nt">&lt;h2&gt;</span> 4. sql 실행 <span class="nt">&lt;/h2&gt;</span>
  <span class="nt">&lt;%</span>
    <span class="n">pstmt</span><span class="o">.</span><span class="na">executeUpdate</span><span class="o">();</span>
  
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"회원정보 삭제 완료!"</span><span class="o">);</span>
  <span class="nt">%&gt;</span>
</code></pre></div></div>
:ET