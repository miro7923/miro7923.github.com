I"R><ul>
  <li>작성일 : 2022.05.18</li>
  <li>
    <p>작성자 : 황유진</p>
  </li>
  <li>팀원 : 김진영, 박승지, 반현빈, 오성은, 오은현, 황유진</li>
  <li>팀장 : 황유진</li>
  <li>부팀장 : 오성은</li>
  <li>GitHub Repository : <a href="https://github.com/miro7923/Uno-Mas">https://github.com/miro7923/Uno-Mas</a><br /><br /><br /></li>
</ul>

<h1 id="개발환경">개발환경</h1>
<ul>
  <li>MacBook Air (M1, 2020)</li>
  <li>OpenJDK 8</li>
  <li>Spring Tool Suite 4.14.0</li>
  <li>Spring framework 4.3.1.RELEASE</li>
  <li>Tomcat 8.5</li>
  <li>MySQL Workbench 8.0.19<br /><br /><br /></li>
</ul>

<h1 id="기간">기간</h1>
<ul>
  <li>2022.4.13 ~ 2022.5.27<br /><br /><br /></li>
</ul>

<h1 id="주제">주제</h1>
<ul>
  <li>웹 백엔드 수업 중 마지막 과제로 팀 프로젝트를 진행하게 되었다.</li>
  <li>조건은 <code class="language-plaintext highlighter-rouge">Spring</code> 기반으로 웹 사이트를 제작하는 것이다.</li>
  <li>총 팀원은 6명이며, 우리 팀은 <code class="language-plaintext highlighter-rouge">1인 가구를 위한 쇼핑몰</code>을 주제로 정했다.</li>
  <li>팀 이름으로 정해진 <code class="language-plaintext highlighter-rouge">Uno más</code>는 스페인어로 <code class="language-plaintext highlighter-rouge">하나 더</code>라는 뜻이다. <br /><br /><br /></li>
</ul>

<h1 id="진행상황">진행상황</h1>

<p align="center"><img src="../../assets/images/unomas_uploadProdImg1.png" width="900" /></p>

<ul>
  <li>관리자용 상품 등록 페이지에서 비동기 방식으로 상품 이미지를 등록하는 기능을 구현했다.</li>
</ul>

<h2 id="productmapperxml">productMapper.xml</h2>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;update</span> <span class="na">id=</span><span class="s">"updateReview"</span><span class="nt">&gt;</span>
    UPDATE board_review
    SET review_title = #{review_title}, review_content = #{review_content}, review_rating = #{review_rating}, review_image = #{review_image}
    WHERE review_num = #{review_num}
<span class="nt">&lt;/update&gt;</span>
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">DB</code> 업데이트를 위한 쿼리문에서는 별도의 조건문 없이 입력받은 데이터를 그대로 사용하기 때문에 여기까지 오기 전에 후기글과 함께 업로드 되는 이미지 파일명에 대한 검증을 거친 후 추가 작업이 필요하다.</li>
</ul>

<h2 id="productcontrollerjava">ProductController.java</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@RequestMapping</span><span class="o">(</span><span class="n">value</span> <span class="o">=</span> <span class="s">"/modify_review"</span><span class="o">,</span> <span class="n">method</span> <span class="o">=</span> <span class="nc">RequestMethod</span><span class="o">.</span><span class="na">POST</span><span class="o">)</span>
<span class="kd">public</span> <span class="nc">String</span> <span class="nf">modifyReviewPOST</span><span class="o">(</span><span class="nc">HttpServletRequest</span> <span class="n">request</span><span class="o">,</span> 
        <span class="nd">@RequestParam</span><span class="o">(</span><span class="n">value</span> <span class="o">=</span> <span class="s">"review_image"</span><span class="o">,</span> <span class="n">required</span> <span class="o">=</span> <span class="kc">false</span><span class="o">)</span> <span class="nc">MultipartFile</span> <span class="n">file</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">Exception</span> <span class="o">{</span>
    <span class="nc">BoardReviewVO</span> <span class="n">vo</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BoardReviewVO</span><span class="o">();</span>
    <span class="n">vo</span><span class="o">.</span><span class="na">setReview_num</span><span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"review_num"</span><span class="o">)));</span>
    <span class="n">vo</span><span class="o">.</span><span class="na">setProd_num</span><span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"prod_num"</span><span class="o">)));</span>
    <span class="n">vo</span><span class="o">.</span><span class="na">setReview_content</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"review_content"</span><span class="o">));</span>
    <span class="n">vo</span><span class="o">.</span><span class="na">setReview_rating</span><span class="o">(</span><span class="nc">Float</span><span class="o">.</span><span class="na">parseFloat</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"review_rating"</span><span class="o">)));</span>
    <span class="n">vo</span><span class="o">.</span><span class="na">setReview_title</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"review_title"</span><span class="o">));</span>
    <span class="n">vo</span><span class="o">.</span><span class="na">setUser_num</span><span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"user_num"</span><span class="o">)));</span>
		
    <span class="nc">String</span> <span class="n">reviewImg</span> <span class="o">=</span> <span class="n">service</span><span class="o">.</span><span class="na">getReviewImg</span><span class="o">(</span><span class="n">vo</span><span class="o">.</span><span class="na">getReview_num</span><span class="o">());</span>
    <span class="nc">String</span> <span class="n">uploadImgName</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"uploadImgName"</span><span class="o">);</span>

    <span class="c1">// 업로드 된 파일이 있을 때 </span>
    <span class="k">if</span> <span class="o">(!</span><span class="n">file</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">())</span> <span class="o">{</span>
        <span class="c1">// 기존에 저장된 이미지가 없는 경우 파일이름 생성</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">reviewImg</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">reviewImg</span> <span class="o">=</span> <span class="n">convertImgName</span><span class="o">(</span><span class="n">file</span><span class="o">.</span><span class="na">getOriginalFilename</span><span class="o">(),</span> <span class="n">vo</span><span class="o">.</span><span class="na">getReview_num</span><span class="o">());</span>
        <span class="o">}</span>
        
        <span class="c1">// 파일 새로 업로드 </span>
        <span class="nc">File</span> <span class="n">targetFile</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">File</span><span class="o">(</span><span class="n">reviewImgUploatPath</span><span class="o">,</span> <span class="n">reviewImg</span><span class="o">);</span>
        <span class="nc">FileCopyUtils</span><span class="o">.</span><span class="na">copy</span><span class="o">(</span><span class="n">file</span><span class="o">.</span><span class="na">getBytes</span><span class="o">(),</span> <span class="n">targetFile</span><span class="o">);</span>
        <span class="n">vo</span><span class="o">.</span><span class="na">setReview_image</span><span class="o">(</span><span class="n">reviewImg</span><span class="o">);</span>
    <span class="o">}</span>
    <span class="c1">// 업로드 된 파일이 없을 때</span>
    <span class="k">else</span> <span class="o">{</span> 
        <span class="c1">// 기존에 업로드 된 파일이 없거나 글을 수정하며 이미지를 삭제한 경우</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">uploadImgName</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"이미지 선택"</span><span class="o">))</span> <span class="o">{</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">reviewImg</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
                <span class="c1">// 기존에 업로드 된 파일이 있으면 서버에서 삭제</span>
                <span class="nc">File</span> <span class="n">f</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">File</span><span class="o">(</span><span class="n">reviewImgUploatPath</span> <span class="o">+</span> <span class="nc">File</span><span class="o">.</span><span class="na">separator</span> <span class="o">+</span> <span class="n">reviewImg</span><span class="o">);</span>

                <span class="k">if</span> <span class="o">(</span><span class="n">f</span><span class="o">.</span><span class="na">exists</span><span class="o">())</span>
                    <span class="n">f</span><span class="o">.</span><span class="na">delete</span><span class="o">();</span>
            <span class="o">}</span>
            
            <span class="c1">// 기존 파일명 삭제</span>
            <span class="n">vo</span><span class="o">.</span><span class="na">setReview_image</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="c1">// 기존에 업로드 된 파일이 있으면 그대로 사용</span>
        <span class="k">else</span> <span class="o">{</span>
            <span class="n">vo</span><span class="o">.</span><span class="na">setReview_image</span><span class="o">(</span><span class="n">uploadImgName</span><span class="o">);</span>
        <span class="o">}</span>
    <span class="o">}</span>
		
    <span class="n">service</span><span class="o">.</span><span class="na">modifyReview</span><span class="o">(</span><span class="n">vo</span><span class="o">);</span>
		
    <span class="k">return</span> <span class="s">"redirect:/product/product_detail?prod_num="</span> <span class="o">+</span> <span class="n">vo</span><span class="o">.</span><span class="na">getProd_num</span><span class="o">();</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>매퍼에 후기글에 대한 정보를 보낼 때 <code class="language-plaintext highlighter-rouge">BoardReviewVO</code>를 사용해서 보내는데 게시글을 수정할 때 이미지 파일에 대한 정보도 설정해 주지 않으면 <code class="language-plaintext highlighter-rouge">VO</code> 속의 이미지 파일명 필드는 <code class="language-plaintext highlighter-rouge">null</code>로 남아있는 상태로 매퍼에 전달될 것이다. 그렇게 되면 기존에 서버에 업로드 된 이미지파일이 있는데도 DB 데이터 상에서는 이미지 파일명 정보가 없기 때문에 화면에 출력되지 않는다. 그래서 첨부파일이 포함된 게시글을 수정할 때엔 위와 같이 분기를 나누어 처리해 주게 했다.<br /><br /><br /></li>
</ul>

<h1 id="구현하며-했던-고민">구현하며 했던 고민</h1>
<ul>
  <li>가장 고민했던 것은 사용자가 글을 수정하면서 이미지를 삭제했는지 아닌지 여부를 확인하는 것이었다. 단순히 <code class="language-plaintext highlighter-rouge">file</code>로 넘어온 정보가 있고 없고로 따질 수 없었기 때문이다. <code class="language-plaintext highlighter-rouge">file</code>타입의 인풋태그 특성상 게시글을 작성할 때 파일을 업로드 하지 않으면 사진 첨부 영역의 삭제 버튼을 눌러서 이미지를 삭제해도 값이 비어있고 기존에 업로드했던 이미지를 삭제하는 동작을 하지 않아도 값이 비어있다. 즉 게시글을 수정할 때 새로운 이미지를 첨부하지 않는다면 항상 비어있는 상태로 전송되는 것이다.</li>
</ul>

<div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;c:choose&gt;</span>
    <span class="nt">&lt;c:when </span><span class="na">test=</span><span class="s">"</span><span class="si">${</span><span class="n">vo</span><span class="o">.</span><span class="na">review_image</span> <span class="o">==</span> <span class="kc">null</span> <span class="si">}</span><span class="s">"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"text"</span> <span class="na">class=</span><span class="s">"uploadImgName"</span> <span class="na">id=</span><span class="s">"uploadImgName"</span> <span class="na">value=</span><span class="s">"이미지 선택"</span>
            <span class="na">readonly</span> <span class="na">name=</span><span class="s">"uploadImgName"</span><span class="nt">&gt;</span> 
    <span class="nt">&lt;/c:when&gt;</span>
    <span class="nt">&lt;c:otherwise&gt;</span>
        <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"text"</span> <span class="na">class=</span><span class="s">"uploadImgName"</span> <span class="na">id=</span><span class="s">"uploadImgName"</span> <span class="na">value=</span><span class="s">"${vo.review_image }"</span>
            <span class="na">readonly</span> <span class="na">name=</span><span class="s">"uploadImgName"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;/c:otherwise&gt;</span>
<span class="nt">&lt;/c:choose&gt;</span>
<span class="nt">&lt;label</span> <span class="na">class=</span><span class="s">"site-btn"</span> <span class="na">for=</span><span class="s">"uploadImg"</span> <span class="na">id=</span><span class="s">"uploadBtn"</span><span class="nt">&gt;</span>업로드<span class="nt">&lt;/label&gt;</span>
<span class="nt">&lt;button</span> <span class="na">type=</span><span class="s">"button"</span> <span class="na">class=</span><span class="s">"site-btn"</span> <span class="na">onclick=</span><span class="s">"removeImg();"</span><span class="nt">&gt;</span>삭제<span class="nt">&lt;/button&gt;</span>
<span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"file"</span> <span class="na">id=</span><span class="s">"uploadImg"</span> <span class="na">name=</span><span class="s">"review_image"</span> <span class="na">oninput=</span><span class="s">"checkFileName();"</span><span class="nt">&gt;</span>
</code></pre></div></div>

<ul>
  <li>뷰 페이지 UI 디자인을 하며 업로드 하려는 파일명을 출력하는 인풋 태그를 분리해 뒀기 때문에 파일명이 출력되는 인풋 태그의 값에 따라 기존에 업로드 된 이미지 파일의 존재 유무를 확인하도록 설계했다.<br /><br /><br /></li>
</ul>

<h1 id="마감까지">마감까지</h1>
<ul>
  <li><code class="language-plaintext highlighter-rouge">D-10</code></li>
</ul>
:ET