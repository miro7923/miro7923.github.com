I"/<h1 id="부울대수">부울대수<br /></h1>

<h2 id="1-부울대수의-개요">1. 부울대수의 개요<br /></h2>
<ul>
  <li>부울대수(Boolean algebra)는 논리적 관계의 문제를 다룰 때 대수 형식으로 표시하며, 여러가지 논리회로를 설계하거나 같은 기능을 갖는 논리 회로를 간략화하는 데 사용된다.</li>
  <li>인간의 지식이나 사고를 참, 거짓으로 공식화하고 이를 수학적으로 해석하기 위한 것으로 논리대수라고도 한다.<br /></li>
  <li>주로 컴퓨터의 회로 설계 등에 이용되고 있으며 “0”과 “1”의 두 개의 수치만을 사용하여, 연산의 결과는 언제나 0 또는 1로 표한된다.<br /><br /><br /></li>
</ul>

<h2 id="2-논리회로">2. 논리회로<br /></h2>
<ul>
  <li>논리회로는 2가지 상태를 다루는 방법으로 컴퓨터에서 사용되는 방법이다. NOT, AND, OR 3가지의 기본논리회로의 조합으로 구성된다. <br /><br /></li>
</ul>

<p>1) NOT 회로<br /></p>
<ul>
  <li>인버터(inverter)라고도 한다. 입력이 1개로 구성된 것으로 입력신호와 반대되는 출력을 내놓는다.<br /></li>
  <li>입력신호가 1이면 출력은 0, 입력신호가 0이면 출력은 1<br /><br /></li>
</ul>

<p>2) AND 게이트<br /></p>
<ul>
  <li>두 입력이 모두 1일 때 출력이 1이 되고 그 외에는 모두 0이 출력된다.<br /><br /></li>
</ul>

<p>3) OR 게이트<br /></p>
<ul>
  <li>입력신호 중 어느 하나 또는 두 개가 모두 1일 때 1이 출력된다.<br /><br /></li>
</ul>

<p>4) 부정논리곱<br /></p>
<ul>
  <li>AND와 NOT 회로를 결합한 것으로 AND의 결과를 반전한 결과를 얻는다.<br /></li>
  <li>두 입력이 모두 1일 때에만 0을 출력하고 나머지는 모두 1 출력<br /><br /></li>
</ul>

<p>5) 부정논리합<br /></p>
<ul>
  <li>OR와 NOT 회로를 결합한 것으로 OR의 출력이 반전된 결과를 얻는다. <br /></li>
  <li>두 입력이 모두 0이면 1을 출력하고 나머지는 모두 0 출력<br /><br /></li>
</ul>
:ET