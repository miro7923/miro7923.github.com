I"I+<h1 id="개발환경">개발환경</h1>
<ul>
  <li>MacBook Air (M1, 2020)</li>
  <li>OpenJDK 8</li>
  <li>Eclipse 2021-12</li>
  <li>tomcat 8.5</li>
  <li>MySQL Workbench 8.0.19<br /><br /><br /></li>
</ul>

<h1 id="시작">시작</h1>
<ul>
  <li>2022.3.4 ~ <br /><br /><br /></li>
</ul>

<h1 id="주제">주제</h1>
<ul>
  <li>웹 백엔드 수업 중 중간 과제로 개인 프로젝트를 진행하게 되었다.</li>
  <li>회원가입/로그인/탈퇴 등 기본적인 회원관리 시스템을 가진 웹 사이트를 만드는 것이다. 주어진 기한은 <code class="language-plaintext highlighter-rouge">한 달</code></li>
  <li>나는 <code class="language-plaintext highlighter-rouge">다음 카페</code>를 소규모로 만들어 보기로 했다. 평소 자주 이용하기도 했고 과제의 평가 기준에서 요구하는 기능들을 다 담고 있기도 했기 때문에 이번 기회에 구현해 보면 그동안 배운 것들을 활용하기에 좋을 거 같았다.</li>
  <li>평가 기준에 사이트의 디자인 구현(HTML/CSS 등 프론트엔드)은 포함되지 않기 때문에 본인이 쓰고 싶은 HTML/CSS 템플릿을 구한 뒤 회원 관리 기능을 구현하면 된다.<br /><br /><br /></li>
</ul>

<h1 id="진행상황">진행상황</h1>
<ul>
  <li>게시글에 첨부된 이미지가 있으면 메인 화면에서 게시글 내용을 미리보기로 보여줄 때 이미지도 함께 보여주는 기능을 추가했다.</li>
  <li>원본 이미지로 썸네일용 이미지를 만들어주는 <code class="language-plaintext highlighter-rouge">Thumbnailator</code> 라이브러리를 사용했다.</li>
</ul>

<h2 id="thumbnailator-라이브러리-다운로드-및-설치">Thumbnailator 라이브러리 다운로드 및 설치</h2>
<ul>
  <li><a href="https://search.maven.org/artifact/net.coobird/thumbnailator/0.4.17/jar">https://search.maven.org/artifact/net.coobird/thumbnailator/0.4.17/jar</a></li>
  <li>위 사이트에 접속해서 오른쪽 상단에 보이는 <code class="language-plaintext highlighter-rouge">Download</code> 버튼을 눌러 <code class="language-plaintext highlighter-rouge">jar</code>파일을 다운로드 한다.</li>
  <li>다운받은 <code class="language-plaintext highlighter-rouge">thumbnailator-0.4.17.jar</code> 파일을 <code class="language-plaintext highlighter-rouge">WEB-INF/lib</code> 폴더에 넣는다.</li>
</ul>

<h2 id="boardwriteactionjava">BoardWriteAction.java</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.project.cafe.board.action</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.io.File</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.servlet.ServletContext</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletRequest</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletResponse</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">com.oreilly.servlet.multipart.FilePart</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.oreilly.servlet.multipart.MultipartParser</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.oreilly.servlet.multipart.ParamPart</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.oreilly.servlet.multipart.Part</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.project.cafe.action.Action</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.project.cafe.action.ActionForward</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.project.cafe.board.db.BoardDAO</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.project.cafe.board.db.BoardDTO</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">net.coobird.thumbnailator.Thumbnails</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">net.coobird.thumbnailator.name.Rename</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">BoardWriteAction</span> <span class="kd">implements</span> <span class="nc">Action</span> 
<span class="o">{</span>
    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="nc">ActionForward</span> <span class="nf">execute</span><span class="o">(</span><span class="nc">HttpServletRequest</span> <span class="n">request</span><span class="o">,</span> <span class="nc">HttpServletResponse</span> <span class="n">response</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">Exception</span> 
    <span class="o">{</span>
        <span class="c1">// .. 생략</span>
		
        <span class="k">while</span> <span class="o">((</span><span class="n">part</span> <span class="o">=</span> <span class="n">mp</span><span class="o">.</span><span class="na">readNextPart</span><span class="o">())</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span>
        <span class="o">{</span>
            <span class="c1">//.. 생략</span>
            
            <span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="n">part</span><span class="o">.</span><span class="na">isFile</span><span class="o">()</span> <span class="o">&amp;&amp;</span> <span class="n">name</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"image"</span><span class="o">))</span>
            <span class="o">{</span>
                <span class="c1">// 이미지 파일일 때</span>
                <span class="c1">// 이미지 저장 경로 지정</span>
                <span class="nc">File</span> <span class="n">dir</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">File</span><span class="o">(</span><span class="n">ctx</span><span class="o">.</span><span class="na">getRealPath</span><span class="o">(</span><span class="s">"/images"</span><span class="o">));</span>
                <span class="nc">File</span> <span class="n">thumbnailDir</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">File</span><span class="o">(</span><span class="n">dir</span> <span class="o">+</span> <span class="nc">File</span><span class="o">.</span><span class="na">separator</span> <span class="o">+</span> <span class="s">"thumbnails"</span><span class="o">);</span> <span class="c1">// 썸네일 저장 경로</span>
				
                <span class="c1">// 경로가 없으면 생성</span>
                <span class="k">if</span> <span class="o">(!</span><span class="n">dir</span><span class="o">.</span><span class="na">isDirectory</span><span class="o">())</span> <span class="n">dir</span><span class="o">.</span><span class="na">mkdir</span><span class="o">();</span>
                <span class="k">if</span> <span class="o">(!</span><span class="n">thumbnailDir</span><span class="o">.</span><span class="na">isDirectory</span><span class="o">())</span> <span class="n">thumbnailDir</span><span class="o">.</span><span class="na">mkdir</span><span class="o">();</span>
				
                <span class="nc">FilePart</span> <span class="n">filePart</span> <span class="o">=</span> <span class="o">(</span><span class="nc">FilePart</span><span class="o">)</span> <span class="n">part</span><span class="o">;</span>
                <span class="nc">String</span> <span class="n">file</span> <span class="o">=</span> <span class="n">filePart</span><span class="o">.</span><span class="na">getFileName</span><span class="o">();</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">file</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span>
                <span class="o">{</span>
                    <span class="c1">// 지정한 경로에 파일 쓰기</span>
                    <span class="n">filePart</span><span class="o">.</span><span class="na">writeTo</span><span class="o">(</span><span class="n">dir</span><span class="o">);</span>
                    <span class="n">dto</span><span class="o">.</span><span class="na">setImage</span><span class="o">(</span><span class="n">file</span><span class="o">);</span>
					
                    <span class="c1">// 원본 이미지 파일을 이용해서 썸네일을 만들어 저장</span>
                    <span class="c1">// 크기 지정 후 지정 경로에 저장</span>
                    <span class="nc">Thumbnails</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="k">new</span> <span class="nc">File</span><span class="o">(</span><span class="n">dir</span><span class="o">.</span><span class="na">getPath</span><span class="o">()</span> <span class="o">+</span> <span class="nc">File</span><span class="o">.</span><span class="na">separator</span> <span class="o">+</span> <span class="n">file</span><span class="o">))</span>
                        <span class="o">.</span><span class="na">size</span><span class="o">(</span><span class="mi">200</span><span class="o">,</span> <span class="mi">300</span><span class="o">)</span>
                        <span class="o">.</span><span class="na">toFiles</span><span class="o">(</span><span class="n">thumbnailDir</span><span class="o">,</span> <span class="nc">Rename</span><span class="o">.</span><span class="na">NO_CHANGE</span><span class="o">);</span>
					
                    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"img name: "</span><span class="o">+</span><span class="n">file</span><span class="o">);</span>
				<span class="o">}</span>
                <span class="k">else</span> 
                    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"image; name: "</span> <span class="o">+</span> <span class="n">name</span> <span class="o">+</span> <span class="s">"; EMPTY"</span><span class="o">);</span>
            <span class="o">}</span>
            <span class="c1">// .. 생략</span>
		<span class="o">}</span>
		
		<span class="c1">// .. 생략</span>
		
		<span class="k">return</span> <span class="n">forward</span><span class="o">;</span>
	<span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>새 게시글을 작성하는 서블릿에서 원본 이미지 외에도 썸네일을 만들어 저장하는 코드를 추가했다.</li>
  <li></li>
</ul>

<h1 id="마감까지">마감까지</h1>
<ul>
  <li><code class="language-plaintext highlighter-rouge">D-4</code></li>
</ul>
:ET