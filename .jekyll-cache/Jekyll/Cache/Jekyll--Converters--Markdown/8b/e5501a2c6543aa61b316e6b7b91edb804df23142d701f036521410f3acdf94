I"w<p><br /></p>
<h1 id="-영역객체scope란">👀 영역객체(Scope)란?</h1>
<ul>
  <li><code class="language-plaintext highlighter-rouge">JSP</code> 내장객체로 특정 공간(Scope)에 정보를 저장하고, 저장된 정보(Attribute)를 공유할 수 있는 객체</li>
</ul>

<p align="center"><img src="https://t1.daumcdn.net/cfile/tistory/99E89A3C5C6D04451B" width="600" /></p>
<p><br /><br /><br /></p>

<h1 id="4가지-영역별-차이">4가지 영역별 차이</h1>
<ul>
  <li><code class="language-plaintext highlighter-rouge">Page</code> : 페이지 내에서만 지역 변수처럼 사용할 수 있다.</li>
  <li><code class="language-plaintext highlighter-rouge">Request</code> : 한 페이지에서 다른 페이지로 전달해서 사용할 수 있다.</li>
  <li><code class="language-plaintext highlighter-rouge">Session</code> : 웹 브라우저의 상태가 유지되는 동안 사용 가능하다.</li>
  <li><code class="language-plaintext highlighter-rouge">Application</code> : 웹 어플리케이션에 있는 모든 대상이 사용 가능하다.</li>
</ul>

<h2 id="page">Page</h2>
<ul>
  <li><code class="language-plaintext highlighter-rouge">Page</code> 영역 안에서만 사용 가능. 지역 변수 개념</li>
  <li>영역객체 : <code class="language-plaintext highlighter-rouge">pageContext</code></li>
  <li>사용범위 : 해당 <code class="language-plaintext highlighter-rouge">JSP</code> 페이지 (다른 페이지로 넘겨줄 수 없다)</li>
  <li><code class="language-plaintext highlighter-rouge">JSP</code>에서 <code class="language-plaintext highlighter-rouge">pageScope</code>에 값을 저장한 후 해당 값을 <code class="language-plaintext highlighter-rouge">EL표기법</code>, <code class="language-plaintext highlighter-rouge">JSTL</code>에서 사용할 때 사용된다.</li>
</ul>

<h2 id="request">Request</h2>
<ul>
  <li>어떤 페이지에 있는 값을 서블릿이나 다른 페이지로 넘겨주고 싶을 때 사용할 수 있다.</li>
  <li>영역객체 : JSP 페이지) <code class="language-plaintext highlighter-rouge">request</code> / 서블릿) <code class="language-plaintext highlighter-rouge">HttpServletRequest</code></li>
  <li>사용범위 : 클라이언트 요청이 처리되는 페이지</li>
  <li>값을 저장할 때엔 <code class="language-plaintext highlighter-rouge">setAttribute("속성명", 값)</code> 메서드를 사용한다.</li>
  <li>저장된 값을 꺼내올 때엔 <code class="language-plaintext highlighter-rouge">getAttribute("속성명")</code> 메서드를 사용한다.</li>
  <li><code class="language-plaintext highlighter-rouge">GET/POST</code> 방식으로 날아온 데이터를 가져올 때엔 <code class="language-plaintext highlighter-rouge">getParameter("파라미터 이름")</code> 메서드를 사용한다.</li>
  <li><code class="language-plaintext highlighter-rouge">forward</code>시 값을 유지하고자 사용한다.</li>
</ul>

<h2 id="session">Session</h2>
<ul>
  <li>로그인 한 회원의 상태유지와 같이 웹 브라우저에서 상태가 지속적으로 유지되어야 할 필요가 있을 때 사용한다.</li>
  <li>영역객체 : JSP 페이지) <code class="language-plaintext highlighter-rouge">session</code> / 서블릿) <code class="language-plaintext highlighter-rouge">HttpServletRequest</code>의 <code class="language-plaintext highlighter-rouge">getSession()</code></li>
</ul>
:ET