<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2022-04-09T18:04:10+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Yujin Dev Log</title><subtitle>개발 공부 기록하는 블로그</subtitle><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><entry><title type="html">컴퓨터 네트워크) Transmission Control Protocol</title><link href="http://localhost:4000/computer%20network/computer-network-transmission-control/" rel="alternate" type="text/html" title="컴퓨터 네트워크) Transmission Control Protocol" /><published>2022-04-09T00:00:00+09:00</published><updated>2022-04-09T00:00:00+09:00</updated><id>http://localhost:4000/computer%20network/computer-network-transmission-control</id><content type="html" xml:base="http://localhost:4000/computer%20network/computer-network-transmission-control/"><![CDATA[<h1 id="-transmission-control-protocol">👀 Transmission Control Protocol</h1>
<ul>
  <li><code class="language-plaintext highlighter-rouge">TCP</code>에서 데이터 송수신 시 연결과 흐름 제어 동작을 수행하기 위해 사용되는 프로토콜</li>
  <li><code class="language-plaintext highlighter-rouge">UDP</code>에 비해 긴 헤더로 구성되어 있으며 <code class="language-plaintext highlighter-rouge">Sequence number</code>와 <code class="language-plaintext highlighter-rouge">Acknowledgment number</code>를 이용해 데이터가 전송되었는지 확인하고 흐름을 제어한다.</li>
</ul>

<h2 id="sequence-number">Sequence number</h2>
<ul>
  <li>전송된 세그먼트의 순서로 전체 메세지에서 어느 부분에 해당하는지 구분하는 번호</li>
  <li>1, 2, 3, … 순서로 세그먼트가 전송된다고 하면 <code class="language-plaintext highlighter-rouge">Sequence number</code>를 통해 지금 받고 있는 부분이 어디쯤인지 알 수 있다.</li>
</ul>

<h2 id="acknowledgment-number">Acknowledgment number</h2>
<ul>
  <li><code class="language-plaintext highlighter-rouge">receiver</code>가 다음에 받아야 하는 <code class="language-plaintext highlighter-rouge">Sequence number</code></li>
  <li><code class="language-plaintext highlighter-rouge">receiver</code>가 세그먼트를 받고 나서 다음에 몇 번 세그먼트를 받아야 하는지 <code class="language-plaintext highlighter-rouge">sender</code>에게 알려줄 때 사용하는 번호</li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">sender</code>는 <code class="language-plaintext highlighter-rouge">receiver</code>로부터 온 <code class="language-plaintext highlighter-rouge">Acknowledgment number</code>를 보고 어떤 세그먼트를 보내야 하는지 알 수 있다.</p>
  </li>
  <li><code class="language-plaintext highlighter-rouge">TCP</code> 프로토콜에서 데이터의 송수신은 <code class="language-plaintext highlighter-rouge">sequence number</code>와 <code class="language-plaintext highlighter-rouge">ACK</code>의 확인으로 이루어지며 중간에 데이터가 누락되었다면 <code class="language-plaintext highlighter-rouge">ACK</code>를 통해 몇 번이 누락되었는지 확인하고 재전송 할 수 있다.</li>
</ul>

<h2 id="flow-control">flow control</h2>
<ul>
  <li><code class="language-plaintext highlighter-rouge">receiver</code>가 수용할 수 있는 속도보다 훨씬 빠른 속도로 보내는 것을 막기 위해 사용된다.</li>
  <li>데이터를 보낼 때 데이터를 받을 버퍼의 크기를 미리 제한한 뒤 그만큼씩 보내는 것이다.<br /><br /></li>
</ul>

<h1 id="congestion-control">Congestion Control</h1>
<ul>
  <li>트래픽의 양이 늘어나면 전송 가능한 양이 점점 줄어들어서 나중에는 하나도 보내지 못 하게 된다.</li>
  <li>그래서 지속 가능한 서비스를 할 수 있도록 네트워크 상에서 전송되는 데이터의 총량을 제한하는 것이다.</li>
  <li><code class="language-plaintext highlighter-rouge">end-to-end</code>와 <code class="language-plaintext highlighter-rouge">network-assisted</code> 방식이 있는데 <code class="language-plaintext highlighter-rouge">end-to-end</code>의 대표적인 방식은 <code class="language-plaintext highlighter-rouge">TCP</code>가 있고 <code class="language-plaintext highlighter-rouge">network-assisted</code>에는 <code class="language-plaintext highlighter-rouge">ATM</code>이 있다.</li>
</ul>

<h2 id="aimd">AIMD</h2>
<ul>
  <li>혼잡이 생기면 <code class="language-plaintext highlighter-rouge">congestion window</code>의 크기를 갑자기 줄여서 혼잡을 해결한 후에 다시 크기를 서서히 증가시키는 것</li>
</ul>

<h2 id="congestion-windowcwnd">Congestion Window(cwnd)</h2>
<ul>
  <li>네트워크가 <code class="language-plaintext highlighter-rouge">congestion</code>을 일으키지 않는 한도 내에서 <code class="language-plaintext highlighter-rouge">ACK</code>를 받지 않고 보낼 수 있는 데이터의 양</li>
  <li><code class="language-plaintext highlighter-rouge">cwnd</code>의 크기는 네트워크 상황에 따라서 유동적으로 조절된다.<br /><br /></li>
</ul>

<h1 id="한-번-더-비교해보는-tcp-vs-udp">한 번 더 비교해보는 TCP vs UDP</h1>
<h2 id="tcp">TCP</h2>
<ul>
  <li>데이터를 주고받을 당사자 간에 연결을 먼저 수립한 다음에 데이터의 송수신을 시작하고 데이터가 정확하게 도착하게 하기 위해서 흐름 제어 동작을 수행하기 때문에 <code class="language-plaintext highlighter-rouge">UDP</code>에 비해서는 느리다. 그만큼 데이터가 중간에 누락되지 않고 정확하게 도착하는 것을 보장할 수 있다.</li>
  <li>데이터의 정확한 송수신을 요구하는 <code class="language-plaintext highlighter-rouge">Email</code>, <code class="language-plaintext highlighter-rouge">Web browsing</code>에서 주로 사용된다.</li>
</ul>

<h2 id="udp">UDP</h2>
<ul>
  <li>연결과 흐름 제어를 위한 동작을 수행하지 않고 받은 대로 그냥 보내기 때문에 <code class="language-plaintext highlighter-rouge">TCP</code>에 비해서는 빠른 속도를 보여준다. 그만큼 데이터가 정확하게 도착한다는 보장이 없다.</li>
  <li>중간에 데이터가 좀 누락되어도 괜찮고 속도가 빠른 것이 더 중시되는 실시간 스트리밍 서비스에서 주로 사용된다.<br /><br /><br /></li>
</ul>

<h1 id="출처">출처</h1>
<ul>
  <li><a href="http://www.kmooc.kr/courses/course-v1:PNUk+CN_C01+2021_KM_013/video">컴퓨터 네트워킹 - 부산대학교 K-MOOC 공개강의</a></li>
</ul>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="Computer Network" /><category term="CS" /><category term="Network" /><category term="Transport" /><summary type="html"><![CDATA[👀 Transmission Control Protocol TCP에서 데이터 송수신 시 연결과 흐름 제어 동작을 수행하기 위해 사용되는 프로토콜 UDP에 비해 긴 헤더로 구성되어 있으며 Sequence number와 Acknowledgment number를 이용해 데이터가 전송되었는지 확인하고 흐름을 제어한다.]]></summary></entry><entry><title type="html">Python) BOJ 1647. 도시 분할 계획</title><link href="http://localhost:4000/boj/boj1647-py/" rel="alternate" type="text/html" title="Python) BOJ 1647. 도시 분할 계획" /><published>2022-04-09T00:00:00+09:00</published><updated>2022-04-09T00:00:00+09:00</updated><id>http://localhost:4000/boj/boj1647-py</id><content type="html" xml:base="http://localhost:4000/boj/boj1647-py/"><![CDATA[<h1 id="문제-링크">문제 링크</h1>
<hr />

<ul>
  <li><a href="https://www.acmicpc.net/problem/1647">https://www.acmicpc.net/problem/1647</a><br /><br /></li>
</ul>

<h1 id="제한">제한</h1>
<hr />

<ul>
  <li>시간 제한 : 2 초</li>
  <li>메모리 제한 : 256 MB<br /><br /></li>
</ul>

<h1 id="문제">문제</h1>
<hr />

<ul>
  <li>
    <p>동물원에서 막 탈출한 원숭이 한 마리가 세상구경을 하고 있다. 그러다가 평화로운 마을에 가게 되었는데, 그곳에서는 알 수 없는 일이 벌어지고 있었다.</p>
  </li>
  <li>
    <p>마을은 N개의 집과 그 집들을 연결하는 M개의 길로 이루어져 있다. 길은 어느 방향으로든지 다닐 수 있는 편리한 길이다. 그리고 각 길마다 길을 유지하는데 드는 유지비가 있다.</p>
  </li>
  <li>
    <p>마을의 이장은 마을을 두 개의 분리된 마을로 분할할 계획을 가지고 있다. 마을이 너무 커서 혼자서는 관리할 수 없기 때문이다. 마을을 분할할 때는 각 분리된 마을 안에 집들이 서로 연결되도록 분할해야 한다. 각 분리된 마을 안에 있는 임의의 두 집 사이에 경로가 항상 존재해야 한다는 뜻이다. 마을에는 집이 하나 이상 있어야 한다.</p>
  </li>
  <li>
    <p>그렇게 마을의 이장은 계획을 세우다가 마을 안에 길이 너무 많다는 생각을 하게 되었다. 일단 분리된 두 마을 사이에 있는 길들은 필요가 없으므로 없앨 수 있다. 그리고 각 분리된 마을 안에서도 임의의 두 집 사이에 경로가 항상 존재하게 하면서 길을 더 없앨 수 있다. 마을의 이장은 위 조건을 만족하도록 길들을 모두 없애고 나머지 길의 유지비의 합을 최소로 하고 싶다. 이것을 구하는 프로그램을 작성하시오.<br /><br /></p>
  </li>
</ul>

<h1 id="입력">입력</h1>
<hr />

<ul>
  <li>첫째 줄에 집의 개수 N, 길의 개수 M이 주어진다. N은 2이상 100,000이하인 정수이고, M은 1이상 1,000,000이하인 정수이다. 그 다음 줄부터 M줄에 걸쳐 길의 정보가 A B C 세 개의 정수로 주어지는데 A번 집과 B번 집을 연결하는 길의 유지비가 C (1 ≤ C ≤ 1,000)라는 뜻이다.<br /><br /></li>
</ul>

<h1 id="출력">출력</h1>
<hr />

<ul>
  <li>첫째 줄에 없애고 남은 길 유지비의 합의 최솟값을 출력한다.<br /><br /><br /></li>
</ul>

<h1 id="-풀이">👀 풀이</h1>
<hr />

<ul>
  <li>최소 신장 트리 문제인 것 까지는 알겠는데 2개로 쪼개는 걸 어떻게 해야하나 싶었다.</li>
  <li>그래서 책 보니까 최소 신장 트리를 찾은 후에 가장 비싼 비용을 빼면 2개로 분할된다고 하는 것이었다…😦 생각해 보니까 진짜 간단하면서 맞는 말이었다.</li>
  <li>
    <p>최소 신장 트리를 구하는 코드까지는 금방 썼지만 가장 비싼 비용을 빼는 과정에서 어렵게 생까해서 헤멨는데 그냥 최소 신장 트리의 합을 구한 다음 마지막에 가장 비싼 비용을 빼 주면 되었다.</p>
  </li>
  <li>첫 제출때엔 시간초과가 났는데 입력 받는 부분을 <code class="language-plaintext highlighter-rouge">sys.stdin.readline</code>으로 바꿔주니까 통과할 수 있었다. 잊지말자… 입력 속도는 빠르게…<br /><br /></li>
</ul>

<h1 id="결과">결과</h1>
<hr />

<ul>
  <li>시간 : 4076 ms</li>
  <li>메모리 : 197288 KB<br /><br /></li>
</ul>

<h1 id="코드">코드</h1>
<hr />

<script src="https://gist.github.com/miro7923/b82a05569fc321630bfe177d8af5f674.js"></script>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="BOJ" /><category term="Algorithm" /><category term="BOJ" /><category term="No1647" /><category term="Graph" /><category term="Python" /><summary type="html"><![CDATA[문제 링크 https://www.acmicpc.net/problem/1647 제한 시간 제한 : 2 초 메모리 제한 : 256 MB]]></summary></entry><entry><title type="html">Python) 이것이 취업을 위한 코딩테스트다 10 실전문제 2. 팀 결성</title><link href="http://localhost:4000/boj/CodingTestBook-10-02-py/" rel="alternate" type="text/html" title="Python) 이것이 취업을 위한 코딩테스트다 10 실전문제 2. 팀 결성" /><published>2022-04-09T00:00:00+09:00</published><updated>2022-04-09T00:00:00+09:00</updated><id>http://localhost:4000/boj/CodingTestBook-10-02-py</id><content type="html" xml:base="http://localhost:4000/boj/CodingTestBook-10-02-py/"><![CDATA[<h1 id="문제-출처">문제 출처</h1>
<hr />

<ul>
  <li>이것이 취업을 위한 코딩테스트다 with 파이썬</li>
  <li>Chapter 10 - 실전문제 2. 팀 결성<br /><br /></li>
</ul>

<h1 id="제한">제한</h1>
<hr />

<ul>
  <li>시간 제한 : 2 초</li>
  <li>메모리 제한 : 128 MB<br /><br /></li>
</ul>

<h1 id="문제">문제</h1>
<hr />

<ul>
  <li>학교에서 학생들에게 0번부터 N번까지의 번호를 부여했다. 처음에는 모든 학생이 서로 다른 팀으로 구분되어, 총 N + 1개의 팀이 존재한다. 이때 선생님은 ‘팀 합치기’ 연산과 ‘같은 팀 여부 확인’ 연산을 사용할 수 있다.
    <ol>
      <li>‘팀 합치기’ 연산은 두 팀을 합치는 연산이다.</li>
      <li>‘같은 팀 여부 확인’ 연산은 특정한 두 학생이 같은 팀에 속하는지를 확인하는 연산이다.</li>
    </ol>
  </li>
  <li>선생님이 M개의 연산을 수행할 수 있을 때, ‘같은 팀 여부 확인’ 연산에 대한 연산 결과를 출력하는 프로그램을 작성하시오.<br /><br /></li>
</ul>

<h1 id="입력">입력</h1>
<hr />

<ul>
  <li>첫째 줄에 N, M이 주어진다. M은 입력으로 주어지는 연산의 개수이다.(1 &lt;= N, M &lt;= 100,000)</li>
  <li>다음 M개의 줄에는 각각의 연산이 주어진다.</li>
  <li>‘팀 합치기’연산은 0 a b 형태로 주어진다. 이는 a번 학생이 속한 팀과 b번 학생이 속한 팀을 합친다는 의미이다.</li>
  <li>‘같은 팀 여부 확인’연산은 1 a b 형태로 주어진다. 이는 a번 학생과 b번 학생이 같은 팀에 속해 있는지를 확인하는 연산이다.</li>
  <li>a와 b는 N 이하의 양의 정수이다.<br /><br /></li>
</ul>

<h1 id="출력">출력</h1>
<hr />

<ul>
  <li>‘같은 팀 여부 확인’연산에 대하여 한 줄에 하나씩 YES 혹은 NO로 결과를 출력한다.<br /><br /><br /></li>
</ul>

<h1 id="-풀이">👀 풀이</h1>
<hr />

<ul>
  <li>유니온 파인드 연습문제다.</li>
  <li>팀 합치기 함수와 루트 노드를 찾는 함수를 작성한 다음에 연산에 따라 호출했다.</li>
  <li>‘같은 팀 여부 확인’연산 수행 시 부모가 같은지 확인한 후 결과를 출력하면 된다.<br /><br /></li>
</ul>

<h1 id="코드">코드</h1>
<hr />

<script src="https://gist.github.com/miro7923/f960c66a0d5c664798c3da51b9219a37.js"></script>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="BOJ" /><category term="Algorithm" /><category term="Graph" /><category term="Python" /><summary type="html"><![CDATA[문제 출처 이것이 취업을 위한 코딩테스트다 with 파이썬 Chapter 10 - 실전문제 2. 팀 결성 제한 시간 제한 : 2 초 메모리 제한 : 128 MB]]></summary></entry><entry><title type="html">깃허브 블로그(Github Blog) minimal-mistakes 테마 게시글 날짜 출력하기</title><link href="http://localhost:4000/story/making-github-blog-02/" rel="alternate" type="text/html" title="깃허브 블로그(Github Blog) minimal-mistakes 테마 게시글 날짜 출력하기" /><published>2022-04-08T00:00:00+09:00</published><updated>2022-04-08T00:00:00+09:00</updated><id>http://localhost:4000/story/making-github-blog-02</id><content type="html" xml:base="http://localhost:4000/story/making-github-blog-02/"><![CDATA[<h1 id="-시작">🎬 시작</h1>
<ul>
  <li>네이버 블로그를 오래 했었는데 네이버 블로그는 게시글 제목 옆에 작성한 날짜를 보여준다. 그런데 <code class="language-plaintext highlighter-rouge">GitHub</code>으로 이사오고 <code class="language-plaintext highlighter-rouge">minimal-mistakes</code> 테마를 쓰다 보니… 왜 작성한 날짜 보기가 이렇게 어렵지? 외국인들은 날짜에 연연하지 않나…</li>
  <li>기본 설정은 게시글 제목 근처에 표시되지 않고 게시글 본문의 맨 아래로 내려야 작성 날짜를 볼 수 있다.</li>
  <li>그래서 이걸 바꿀 것이다.</li>
  <li><a href="https://devinlife.com/howto%20github%20pages/github-pages-settings/">GitHub Pages 기타 설정</a></li>
  <li><a href="https://jhlov.github.io/jekyll-%EB%B8%94%EB%A1%9C%EA%B7%B8-%ED%8F%AC%EC%8A%A4%ED%8C%85-%EC%8B%9C%EA%B0%84-%EC%B6%9C%EB%A0%A5%ED%95%98%EA%B8%B0/">[jekyll] jekyll 블로그 포스팅 시간 출력하기</a></li>
  <li>
    <p>두 블로그 글들을 참고했는데 난 설정 페이지의 코드가 약간 달라서 같은 방법을 적용할 수 없었다. 같은 테마 파일을 다운 받았을텐데 난 왜 남들 다 있는 코드가 없었을까…</p>
  </li>
  <li>그래서 결정적으로는 <a href="https://github.com/devinlife/devinlife.github.io/commit/c6a8fe5a2f2a6f208b4ad90528074842e5c3ee66">https://github.com/devinlife/devinlife.github.io/commit/c6a8fe5a2f2a6f208b4ad90528074842e5c3ee66</a> 이 커밋에 달린 댓글에 있는 방법으로 해결할 수 있었다.<br /><br /></li>
</ul>

<h1 id="수정-시도">수정 시도</h1>
<ul>
  <li>위의 두 블로그처럼 <code class="language-plaintext highlighter-rouge">_inclues/archive-single.html</code>이랑 <code class="language-plaintext highlighter-rouge">_layouts/single.html</code>을 수정해 봤는데 적용이 되지 않았다. 아마 남들은 다 있는 코드가 나에겐 없었던 이유가 저 분들처럼 만들어 줄 파일이 존재하지 않아서였던 것이 아닐까… 로컬 서버를 실행시켜서 미리보기로 봤을 때엔 잘 되고 <code class="language-plaintext highlighter-rouge">commit</code>까지도 잘 됐는데 <code class="language-plaintext highlighter-rouge">push</code>를 시도하니까 참고를 찾을 수 없다는 내용의 에러가 뜨면서 적용이 되지 않았다.</li>
</ul>

<p align="center"><img src="../../assets/images/solveComment.png" width="700" /></p>

<ul>
  <li>그러다 이 댓글을 보고 <code class="language-plaintext highlighter-rouge">_config.yml</code>을 수정해 봤는데 미리보기 상에서는 적용이 되지 않았다.</li>
  <li>그래서 처음엔 난 안 되는 줄 알고 계속 <code class="language-plaintext highlighter-rouge">_inclues/archive-single.html</code>과 <code class="language-plaintext highlighter-rouge">_layouts/single.html</code> 파일을 수정해보다가 마지막에 밑지는 느낌으로 해 봤는데 <code class="language-plaintext highlighter-rouge">push</code>도 잘 되고 조금 기다리니까 블로그에 적용도 잘 되었다.</li>
</ul>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Defaults</span>
<span class="na">defaults</span><span class="pi">:</span>
  <span class="c1"># _posts</span>
  <span class="pi">-</span> <span class="na">scope</span><span class="pi">:</span>
      <span class="na">path</span><span class="pi">:</span> <span class="s2">"</span><span class="s">"</span>
      <span class="na">type</span><span class="pi">:</span> <span class="s">posts</span>
    <span class="na">values</span><span class="pi">:</span>
      <span class="na">layout</span><span class="pi">:</span> <span class="s">single</span>
      <span class="na">author_profile</span><span class="pi">:</span> <span class="no">true</span>
      <span class="na">read_time</span><span class="pi">:</span> <span class="no">false</span> <span class="c1"># false로 변경</span>
      <span class="na">show_date</span><span class="pi">:</span> <span class="no">true</span> <span class="c1"># 원래 없어서 생성 후 true로 설정</span>
      <span class="na">comments</span><span class="pi">:</span> <span class="no">true</span>
      <span class="na">share</span><span class="pi">:</span> <span class="no">true</span>
      <span class="na">related</span><span class="pi">:</span> <span class="no">true</span>
</code></pre></div></div>

<p align="center"><img src="../../assets/images/archiveDate.png" width="700" /></p>

<ul>
  <li>잘 나오네!</li>
</ul>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="Story" /><category term="story" /><summary type="html"><![CDATA[🎬 시작 네이버 블로그를 오래 했었는데 네이버 블로그는 게시글 제목 옆에 작성한 날짜를 보여준다. 그런데 GitHub으로 이사오고 minimal-mistakes 테마를 쓰다 보니… 왜 작성한 날짜 보기가 이렇게 어렵지? 외국인들은 날짜에 연연하지 않나… 기본 설정은 게시글 제목 근처에 표시되지 않고 게시글 본문의 맨 아래로 내려야 작성 날짜를 볼 수 있다. 그래서 이걸 바꿀 것이다. GitHub Pages 기타 설정 [jekyll] jekyll 블로그 포스팅 시간 출력하기 두 블로그 글들을 참고했는데 난 설정 페이지의 코드가 약간 달라서 같은 방법을 적용할 수 없었다. 같은 테마 파일을 다운 받았을텐데 난 왜 남들 다 있는 코드가 없었을까…]]></summary></entry><entry><title type="html">Python) 이것이 취업을 위한 코딩테스트다 09 실전문제 2. 미래 도시</title><link href="http://localhost:4000/boj/CodingTestBook-09-4-py/" rel="alternate" type="text/html" title="Python) 이것이 취업을 위한 코딩테스트다 09 실전문제 2. 미래 도시" /><published>2022-04-08T00:00:00+09:00</published><updated>2022-04-08T00:00:00+09:00</updated><id>http://localhost:4000/boj/CodingTestBook-09-4-py</id><content type="html" xml:base="http://localhost:4000/boj/CodingTestBook-09-4-py/"><![CDATA[<h1 id="문제-출처">문제 출처</h1>
<hr />

<ul>
  <li>이것이 취업을 위한 코딩테스트다 with 파이썬</li>
  <li>Chapter 09 - 실전문제 2. 미래 도시<br /><br /></li>
</ul>

<h1 id="제한">제한</h1>
<hr />

<ul>
  <li>시간 제한 : 1 초</li>
  <li>메모리 제한 : 128 MB<br /><br /></li>
</ul>

<h1 id="문제">문제</h1>
<hr />

<ul>
  <li>방문 판매원 A는 많은 회사가 모여 있는 공중 미래 도시에 있다. 공중 미래 도시에는 1번부터 N번까지의 회사가 있는데 특정 회사끼리는 서로 도로를 통해 연결되어 있다. 방문 판매원 A는 현재 1번 회사에 위치해 있으며, X번 회사에 방문해 물건을 판매하고자 한다.</li>
  <li>공중 미래 도시에서 특정 회사에 도착하기 위한 방법은 회사끼리 연결되어 있는 도로를 이용하는 방법이 유일하다. 또한 연결된 2개의 회사는 양방향으로 이동할 수 있다. 공중 미래 도시에서의 도로는 마하의 속도로 사람을 이동시켜주기 때문에 특정 회사와 다른 회사가 도로로 연결되어 있다면, 정확히 1만큼의 시간으로 이동할 수 있다.</li>
  <li>또한 오늘 방문 판매원 A는 기대하던 소개팅에도 참석하고자 한다. 소개팅의 상대는 K번 회사에 존재한다. 방문 판매원 A는 X번 회사에 가서 물건을 판매하기 전에 먼저 소개팅 상대의 회사에 찾아 가서 함께 커피를 마실 예정이다. 따라서 방문 판매원 A는 1번 회사에서 출발하여 K번 회사를 방문한 뒤에 X번 회사로 가는 것이 목표다. 이때 방문 판매원 A는 가능한 한 빠르게 이동하고자 한다. 방문 판매원이 회사 사이를 이동하게 되는 최소 시간을 계산하는 프로그램을 작성하시오. 이때 소개팅의 상대방과 커피를 마시는 시간 등은 고려하지 않는다고 가정한다.<br /><br /></li>
</ul>

<h1 id="입력">입력</h1>
<hr />

<ul>
  <li>첫째 줄에 전체 회사의 개수 N과 경로의 개수 M이 공백으로 구분되어 차례대로 주어진다.(1 &lt;= N, M &lt;= 100)</li>
  <li>둘째 줄부터 M+1번째 줄에는 연결된 두 회사의 번호가 공백으로 구분되어 주어진다.</li>
  <li>M+2번째 줄에는 X와 K가 공백으로 구분되어 차례대로 주어진다.(1 &lt;= K &lt;= 100)<br /><br /></li>
</ul>

<h1 id="출력">출력</h1>
<hr />

<ul>
  <li>첫째 줄에 방문 판매원 A가 K번 회사를 거쳐 X번 회사로 가는 최소 이동 시간을 출력한다.</li>
  <li>만약 X번 회사에 도착할 수 없다면 -1을 출력한다.<br /><br /><br /></li>
</ul>

<h1 id="-풀이">👀 풀이</h1>
<hr />

<ul>
  <li>N의 범위가 100 이하로 매우 작기 때문에 비교적 간단한 워셜 플로이드 알고리즘으로 풀 수 있다.</li>
  <li>확실히 다익스트라에 비하면 워셜이 구현하기 쉬워서 손이 가게 되는 것 같다.</li>
  <li>서로 연결된 회사의 거리는 1이라고 했으니 입력 받으면서 연결된 회사의 거리는 1로 초기화한다.</li>
  <li>다음엔 워셜 플로이드 알고리즘으로 i번째 회사에서 j번째 회사로 가는 거리와 k번째 회사를 거쳐 가는 거리 중 더 짧은 거리로 갱신한다.<br /><br /></li>
</ul>

<h1 id="코드">코드</h1>
<hr />

<script src="https://gist.github.com/miro7923/b6c57af04a5230a1b8a138d9aa4ab733.js"></script>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="BOJ" /><category term="Algorithm" /><category term="Graph" /><category term="Python" /><summary type="html"><![CDATA[문제 출처 이것이 취업을 위한 코딩테스트다 with 파이썬 Chapter 09 - 실전문제 2. 미래 도시 제한 시간 제한 : 1 초 메모리 제한 : 128 MB]]></summary></entry><entry><title type="html">Python) 이것이 취업을 위한 코딩테스트다 09 실전문제 3. 전보</title><link href="http://localhost:4000/boj/CodingTestBook-09-5-py/" rel="alternate" type="text/html" title="Python) 이것이 취업을 위한 코딩테스트다 09 실전문제 3. 전보" /><published>2022-04-08T00:00:00+09:00</published><updated>2022-04-08T00:00:00+09:00</updated><id>http://localhost:4000/boj/CodingTestBook-09-5-py</id><content type="html" xml:base="http://localhost:4000/boj/CodingTestBook-09-5-py/"><![CDATA[<h1 id="문제-출처">문제 출처</h1>
<hr />

<ul>
  <li>이것이 취업을 위한 코딩테스트다 with 파이썬</li>
  <li>Chapter 09 - 실전문제 3. 전보<br /><br /></li>
</ul>

<h1 id="제한">제한</h1>
<hr />

<ul>
  <li>시간 제한 : 1 초</li>
  <li>메모리 제한 : 128 MB<br /><br /></li>
</ul>

<h1 id="문제">문제</h1>
<hr />

<ul>
  <li>어떤 나라에는 N개의 도시가 있다. 그리고 각 도시는 보내고자 하는 메시지가 있는 경우, 다른 도시로 전보를 보내서 다른 도시로 해당 메시지를 전송할 수 있다. 하지만 X라는 도시에서 Y라는 도시로 전보를 보내고자 한다면, 도시 X에서 도시 Y로 향하는 통로가 설치되어 있어야 한다. 예를 들어 X에서 Y로 향하는 통로는 있지만, Y에서 X로 향하는 통로가 없다면 Y는 X로 메시지를 보낼 수 없다. 또한 통로를 거쳐 메시지를 보낼 때에는 일정 시간이 소요된다.</li>
  <li>어느 날 C라는 도시에서 위급 상황이 발생했다. 그래서 최대한 많은 도시로 메시지를 보내고자 한다. 메시지는 도시 C에서 출발하여 각 도시 사이에 설치된 통로를 거쳐, 최대한 많이 퍼져나갈 것이다. 각 도시의 번호와 통로가 설치되어 있는 정보가 주어졌을 때, 도시 C에서 보낸 메시지를 받게 되는 도시의 개수는 총 몇 개이며 도시들이 모두 메시지를 받는 데까지 걸리는 시간은 얼마인지 계산하는 프로그램을 작성하시오.<br /><br /></li>
</ul>

<h1 id="입력">입력</h1>
<hr />

<ul>
  <li>첫째 줄에 도시의 개수 N, 통로의 개수 M, 메시지를 보내고자 하는 도시 C가 주어진다.(1 &lt;= N &lt;= 30,000, 1 &lt;= M &lt;= 200,000, 1 &lt;= C &lt;= N)</li>
  <li>둘째 줄부터 M + 1번째 줄에 걸쳐서 통로에 대한 정보 X, Y, Z가 주어진다. 이는 특정 도시 X에서 다른 특정 도시 Y로 이어지는 통로가 있으며, 메시지가 전달되는 시간이 Z라는 의미이다.(1 &lt;= X, Y &lt;= N, 1 &lt;= Z &lt;= 1,000)<br /><br /></li>
</ul>

<h1 id="출력">출력</h1>
<hr />

<ul>
  <li>첫째 줄에 도시 C에서 보낸 메시지를 받는 도시의 총 개수와 총 걸리는 시간을 공백으로 구분하여 출력한다.<br /><br /><br /></li>
</ul>

<h1 id="-풀이">👀 풀이</h1>
<hr />

<ul>
  <li>시작점이 정해져 있고 N의 범위가 꽤 커서 워셜 플로이드 보다는 다익스트라가 적합하다고 생각했고, 또 우선순위 큐를 사용하는 다익스트라를 쓰는 것이 좋겠다고 생각했다.</li>
  <li>다익스트라 알고리즘으로 C 도시에서 다른 도시들로 이동하는 최단 거리를 찾아서 갱신한다.</li>
  <li>마지막에 출력할 때 최단거리 테이블의 값이 무한대가 아닌 인덱스의 개수를 세고, 그 중에서 가장 먼 도시의 최단 거리를 출력하면 된다.</li>
  <li>그런데 문제는 총 걸리는 시간을 출력하라고 되어 있어서 도착 가능한 도시들의 최단 거리의 합인가 싶어서 처음에는 저렇게 출력하니까 틀렸었다. 문제 설명 좀 명확했으면 좋겠다.</li>
  <li>이동 가능한 도시의 개수를 셀 때엔 자기 자신도 포함되기 때문에 마지막 출력 시에는 1을 빼고 출력해야 한다.<br /><br /></li>
</ul>

<h1 id="코드">코드</h1>
<hr />

<script src="https://gist.github.com/miro7923/a8681b5b930a425a7b7421636657bf8d.js"></script>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="BOJ" /><category term="Algorithm" /><category term="Graph" /><category term="Python" /><summary type="html"><![CDATA[문제 출처 이것이 취업을 위한 코딩테스트다 with 파이썬 Chapter 09 - 실전문제 3. 전보 제한 시간 제한 : 1 초 메모리 제한 : 128 MB]]></summary></entry><entry><title type="html">개발자 GitHub 포트폴리오 사이트 만들기 01 - 내가 코딩한 일수 자동 계산하기</title><link href="http://localhost:4000/project%20log/make-portfolio-01/" rel="alternate" type="text/html" title="개발자 GitHub 포트폴리오 사이트 만들기 01 - 내가 코딩한 일수 자동 계산하기" /><published>2022-04-07T00:00:00+09:00</published><updated>2022-04-07T00:00:00+09:00</updated><id>http://localhost:4000/project%20log/make-portfolio-01</id><content type="html" xml:base="http://localhost:4000/project%20log/make-portfolio-01/"><![CDATA[<h1 id="제작목적">제작목적</h1>
<ul>
  <li>웹 개발을 공부하며 첫 번째 프로젝트를 끝내고 나니까 이걸 잘 포장해서 보여줘야 할 필요가 생겼다. 즉 포트폴리오 문서가 필요해진 것!</li>
  <li>포트폴리오 문서는 서류 형식으로도 만들 것이지만 나는 웹 개발을 공부하고 있으니까 나의 포트폴리오를 보여줄 웹 사이트도 만들기로 결정했다. 기본적인 기능이 다 구현되어 있는 무료 템플릿을 쓰겠지만 그걸 나에게 맞게 수정하는 과정에서도 배울 점이 많을 것이다.</li>
</ul>

<h1 id="진행상황">진행상황</h1>
<ul>
  <li>템플릿은 <code class="language-plaintext highlighter-rouge">GiHhub</code> 레포지토리에 무료로 공개되어 있는 <code class="language-plaintext highlighter-rouge">congchu</code>님의 템플릿을 사용했다.</li>
  <li><a href="https://github.com/congchu/web-porfolio">https://github.com/congchu/web-porfolio</a></li>
  <li><code class="language-plaintext highlighter-rouge">GitHub</code>을 써 보았다면 <code class="language-plaintext highlighter-rouge">fork</code>에서 로컬 저장소에 다운받기까지는 쉽게 할 수 있다. 몰라도 <code class="language-plaintext highlighter-rouge">Readme</code>에 친절하게 설명되어 있다.<br /><br /></li>
</ul>

<h2 id="indexhtml---내가-코딩한-일수-수정">index.html - 내가 코딩한 일수 수정</h2>
<ul>
  <li>가장 먼저 이름을 수정하고 쭉 보다보니 <code class="language-plaintext highlighter-rouge">내가 코딩한 일수</code>를 기록하는 란이 있었다.</li>
</ul>

<p align="center"><img src="../../assets/images/codingDaysDefault.png" width="300" /></p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"text"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;strong</span> <span class="na">id=</span><span class="s">"codingDays"</span> <span class="na">class=</span><span class="s">"number"</span> <span class="na">data-number=</span><span class="s">"365"</span><span class="nt">&gt;</span>0<span class="nt">&lt;/strong&gt;</span>
    <span class="nt">&lt;span&gt;</span>코딩한 일수<span class="nt">&lt;/span&gt;</span>
<span class="nt">&lt;/div&gt;</span>
</code></pre></div></div>

<ul>
  <li>코드 상의 기본 데이터는 <code class="language-plaintext highlighter-rouge">365</code>로 설정되어 있다.</li>
  <li>이걸 내가 코딩한 날짜로 바꿔주면 되는데 이걸 일일이 계산하는 것은 정말 번거로운 작업이다.</li>
  <li>날짜 하나를 정해서 박아놓으면 수동으로 업데이트 해 줘야 하는데 귀찮고 손이 많이 가니까… 고등 교육을 받은 현대인이니까 시간이 흐름에 따라 알아서 업데이트 되게 해 줄 것이다.<br /><br /></li>
</ul>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;script </span><span class="na">src=</span><span class="s">"js/main.js"</span><span class="nt">&gt;&lt;/script&gt;</span>
</code></pre></div></div>

<ul>
  <li>밑에 내려 보니까 <code class="language-plaintext highlighter-rouge">main.js</code> 파일을 수정하면 될 거 같아서 여기로 이동했다.</li>
</ul>

<h2 id="mainjs">main.js</h2>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nx">countDate</span><span class="p">()</span>
<span class="p">{</span>
    <span class="kd">var</span> <span class="nx">startDate</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="mi">2020</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mi">14</span><span class="p">);</span> <span class="c1">// 시작일</span>
    <span class="kd">var</span> <span class="nx">today</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">();</span> <span class="c1">// 오늘</span>
    <span class="kd">var</span> <span class="nx">total</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">();</span> <span class="c1">// 경과시간</span>
    <span class="nx">total</span><span class="p">.</span><span class="nx">setTime</span><span class="p">((</span><span class="nx">today</span><span class="p">.</span><span class="nx">getTime</span><span class="p">()</span> <span class="o">-</span> <span class="nx">startDate</span><span class="p">.</span><span class="nx">getTime</span><span class="p">())</span> <span class="o">/</span> <span class="mi">1000</span> <span class="o">/</span> <span class="mi">60</span> <span class="o">/</span> <span class="mi">60</span> <span class="o">/</span> <span class="mi">24</span><span class="p">);</span>
    <span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">#codingDays</span><span class="dl">'</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="dl">'</span><span class="s1">data-number</span><span class="dl">'</span><span class="p">,</span> <span class="nx">total</span><span class="p">.</span><span class="nx">getTime</span><span class="p">());</span>
<span class="p">}</span>
</code></pre></div></div>

<ul>
  <li>시작일로부터 오늘까지 경과한 일수를 계산하는 함수를 작성했다. 간단해 보이지만 자바스크립트로 날짜 계산하는 함수를 쓴 지 오래되서 구글링을 열심히 해야했다…ㅎ</li>
</ul>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">$</span><span class="p">)</span> <span class="p">{</span>

    <span class="dl">"</span><span class="s2">use strict</span><span class="dl">"</span><span class="p">;</span>

    <span class="nx">$</span><span class="p">(</span><span class="nb">window</span><span class="p">).</span><span class="nx">stellar</span><span class="p">({</span>
    <span class="na">responsive</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
    <span class="na">parallaxBackgrounds</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
    <span class="na">parallaxElements</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
    <span class="na">horizontalScrolling</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
    <span class="na">hideDistantElements</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
    <span class="na">scrollProperty</span><span class="p">:</span> <span class="dl">'</span><span class="s1">scroll</span><span class="dl">'</span>
  <span class="p">});</span>

    <span class="nx">countDate</span><span class="p">();</span>
<span class="p">}</span>
</code></pre></div></div>

<ul>
  <li>그리고 <code class="language-plaintext highlighter-rouge">jQuery</code> 시작 함수 안에서 호출하면 끝!</li>
</ul>

<p align="center"><img src="../../assets/images/codingDaysUpdate.png" width="300" /></p>

<ul>
  <li>계산 잘 된다! 😄<br /><br /><br /></li>
</ul>

<!--# 포트폴리오 페이지-->
<!--* 아직 수정 중... [백엔드 개발자 황유진](https://miro7923.github.io/web-porfolio/)-->]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="Project Log" /><category term="Project" /><category term="Cafe" /><category term="Log" /><summary type="html"><![CDATA[제작목적 웹 개발을 공부하며 첫 번째 프로젝트를 끝내고 나니까 이걸 잘 포장해서 보여줘야 할 필요가 생겼다. 즉 포트폴리오 문서가 필요해진 것! 포트폴리오 문서는 서류 형식으로도 만들 것이지만 나는 웹 개발을 공부하고 있으니까 나의 포트폴리오를 보여줄 웹 사이트도 만들기로 결정했다. 기본적인 기능이 다 구현되어 있는 무료 템플릿을 쓰겠지만 그걸 나에게 맞게 수정하는 과정에서도 배울 점이 많을 것이다.]]></summary></entry><entry><title type="html">에러해결 Log) JAVA JSP Servlet 글 내용 수정할 때 첨부파일이 사라지는 문제</title><link href="http://localhost:4000/errorlog/warning-log-04/" rel="alternate" type="text/html" title="에러해결 Log) JAVA JSP Servlet 글 내용 수정할 때 첨부파일이 사라지는 문제" /><published>2022-04-06T00:00:00+09:00</published><updated>2022-04-06T00:00:00+09:00</updated><id>http://localhost:4000/errorlog/warning-log-04</id><content type="html" xml:base="http://localhost:4000/errorlog/warning-log-04/"><![CDATA[<h1 id="사용환경">사용환경</h1>
<ul>
  <li>MacBook Air (M1, 2020) 16GB</li>
  <li>JDK 8</li>
  <li>Eclipse 2021-12</li>
  <li>tomcat 8.5<br /><br /><br /></li>
</ul>

<h1 id="에러의-발생">에러의 발생</h1>
<ul>
  <li>요즘 <code class="language-plaintext highlighter-rouge">JAVA</code>와 <code class="language-plaintext highlighter-rouge">JSP</code>, <code class="language-plaintext highlighter-rouge">Servlet</code>으로 게시판을 만들던 중 파일 업로드 기능을 추가했다. 그런데 게시글을 수정하면 등록되 있던 이미지와 첨부파일이 삭제되는 것이었다. 🥲 <code class="language-plaintext highlighter-rouge">DB</code>에 등록되 있던 파일명 자체가 <code class="language-plaintext highlighter-rouge">null</code>이 되어버림…</li>
  <li>구글 검색을 시도해보니 업로드 한 파일의 수정이 필요할 땐 업로드 했던 파일을 삭제하고 다시 첨부해야 한다는 내용이 많아서 그렇게 해 보았는데 여전히 문제 해결에는 도움이 되지 않았다.</li>
  <li>그래서 좀 더 생각해 보니 업로드 된 파일을 삭제하는 코드를 쓴 적 없었기 때문에 업로드 되는 파일들이 저장되는 경로에 가서 확인해 보니 역시 파일들은 그대로 있었다. 내가 짠 로직은 <code class="language-plaintext highlighter-rouge">DB</code>에는 업로드 한 파일명만 저장하고 게시글을 불러올 때 서버에 업로드 되는 경로로 찾아가서 해당 파일들을 불러오는 것이라서 <code class="language-plaintext highlighter-rouge">DB</code>에서 업데이트 될 때 파일명만 잘 보존해 주면 문제를 해결할 수 있는 것이었다.</li>
  <li>게시글 작성 및 수정시 폼태그의 <code class="language-plaintext highlighter-rouge">enctype="multipart/form-data"</code> 속성을 사용해서 전송 하기 때문에 파라미터를 받을 때 <code class="language-plaintext highlighter-rouge">Multipart</code> 객체를 사용해서 받아야 하는데 이 과정에서 실제로 받은 파일이 없다보니 파일명을 추출하는 과정이 생략되었고, <code class="language-plaintext highlighter-rouge">DB</code> 업로드용 <code class="language-plaintext highlighter-rouge">DTO</code> 객체를 생성하는 과정에서 파일명에 대한 정보가 누락된 것이었다…!! 그리고 <code class="language-plaintext highlighter-rouge">DB</code> 접속해서 업데이트 동작을 수행하는 과정에서 <code class="language-plaintext highlighter-rouge">null</code>이 입력되게 된다…</li>
  <li>그러면 <code class="language-plaintext highlighter-rouge">file</code> 타입 <code class="language-plaintext highlighter-rouge">input</code> 태그의 <code class="language-plaintext highlighter-rouge">value</code> 값을 기존에 저장되어 있던 파일명으로 넣어놓으면 되지 않나 싶었다. 그런데 안 됨</li>
  <li>구글링 해 보니 <code class="language-plaintext highlighter-rouge">file</code> 타입은 <code class="language-plaintext highlighter-rouge">readonly</code>라서 파일을 직접 등록할 때가 아니면 임의로 <code class="language-plaintext highlighter-rouge">value</code>값을 넣어줄 수 없다고 한다. <code class="language-plaintext highlighter-rouge">value</code> 수정이 가능한 경우는 <code class="language-plaintext highlighter-rouge">value</code>값이 있을 때 그 값을 지울 때 뿐이었음. 그래서 다른 방법을 찾아야 했다.<br /><br /></li>
</ul>

<h1 id="문제-해결">문제 해결</h1>

<h2 id="boardmodifyjsp">boardModify.jsp</h2>

<div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;%</span>
    <span class="nc">String</span> <span class="n">imgPath</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getServletContext</span><span class="o">().</span><span class="na">getRealPath</span><span class="o">(</span><span class="s">"/images"</span><span class="o">)</span> <span class="o">+</span> <span class="nc">File</span><span class="o">.</span><span class="na">separator</span> <span class="o">+</span> <span class="s">"origins"</span> <span class="o">+</span> <span class="nc">File</span><span class="o">.</span><span class="na">separator</span> <span class="o">+</span> <span class="n">dto</span><span class="o">.</span><span class="na">getImage</span><span class="o">();</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"imgPath: "</span><span class="o">+</span><span class="n">imgPath</span><span class="o">);</span>
<span class="nt">%&gt;</span>
<span class="nt">&lt;form</span> <span class="na">name=</span><span class="s">"write"</span> <span class="na">action=</span><span class="s">"./BoardModifyPro.bo"</span> <span class="na">method=</span><span class="s">"post"</span> <span class="na">enctype=</span><span class="s">"multipart/form-data"</span> <span class="na">onsubmit=</span><span class="s">"return finalCheck();"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"formRow"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;label</span> <span class="na">for=</span><span class="s">"MOD_TEXTFORM_NameField"</span><span class="nt">&gt;</span>이미지 등록 <span class="nt">&lt;/label&gt;&lt;input</span> <span class="na">type=</span><span class="s">"file"</span> <span class="na">name=</span><span class="s">"image"</span> <span class="na">id=</span><span class="s">"image"</span> <span class="na">oninput=</span><span class="s">"formatCheck();"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"hidden"</span> <span class="na">name=</span><span class="s">"oldImgPath"</span> <span class="na">value=</span><span class="s">"</span><span class="nt">&lt;%=</span><span class="n">imgPath</span><span class="nt">%&gt;</span><span class="s">"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"hidden"</span> <span class="na">name=</span><span class="s">"oldImgName"</span> <span class="na">value=</span><span class="s">"</span><span class="nt">&lt;%=</span><span class="n">dto</span><span class="o">.</span><span class="na">getImage</span><span class="o">()</span><span class="nt">%&gt;</span><span class="s">"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"hidden"</span> <span class="na">name=</span><span class="s">"imgUploadStatus"</span> <span class="na">value=</span><span class="s">"true"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;div&gt;</span>등록된 이미지 : <span class="nt">&lt;span</span> <span class="na">id=</span><span class="s">"imgName"</span><span class="nt">&gt;</span> <span class="nt">&lt;%=</span><span class="n">dto</span><span class="o">.</span><span class="na">getImage</span><span class="o">()</span> <span class="nt">%&gt;</span> <span class="nt">&lt;/span&gt;</span><span class="ni">&amp;nbsp;</span> <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"javascript:void(0);"</span> <span class="na">onclick=</span><span class="s">"removeImg();"</span><span class="nt">&gt;</span>삭제<span class="nt">&lt;/a&gt;&lt;/div&gt;&lt;br&gt;</span>
<span class="nt">&lt;/form&gt;</span>
</code></pre></div></div>

<ul>
  <li>글 수정 페이지의 폼태그 안에서 <code class="language-plaintext highlighter-rouge">hidden</code> 타입 <code class="language-plaintext highlighter-rouge">input</code> 태그를 써서 기존에 저장되어 있던 파일명을 저장해 두었다 함께 전송했다.</li>
  <li>만약 삭제 버튼을 누르면 <code class="language-plaintext highlighter-rouge">onclick</code> 이벤트를 통해 <code class="language-plaintext highlighter-rouge">imgUploadStatus</code>를 <code class="language-plaintext highlighter-rouge">false</code>로 바꿔 기존에 등록했던 파일을 삭제할 것임을 알린다.</li>
</ul>

<h2 id="boardmodifyproactionjava">BoardModifyProAction.java</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">BoardModifyProAction</span> <span class="kd">implements</span> <span class="nc">Action</span> 
<span class="o">{</span>
    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="nc">ActionForward</span> <span class="nf">execute</span><span class="o">(</span><span class="nc">HttpServletRequest</span> <span class="n">request</span><span class="o">,</span> <span class="nc">HttpServletResponse</span> <span class="n">response</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">Exception</span> 
    <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"M : BoardModifyProAction - execute() 호출"</span><span class="o">);</span>
		
        <span class="c1">// 한글처리</span>
        <span class="n">request</span><span class="o">.</span><span class="na">setCharacterEncoding</span><span class="o">(</span><span class="s">"UTF-8"</span><span class="o">);</span>
		
        <span class="c1">// DB에서 기존 글 정보를 찾은 다음 새 내용으로 수정</span>
        <span class="nc">FileUpload</span> <span class="n">fu</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">FileUpload</span><span class="o">();</span>
        <span class="nc">BoardDTO</span> <span class="n">dto</span> <span class="o">=</span> <span class="n">fu</span><span class="o">.</span><span class="na">upload</span><span class="o">(</span><span class="n">request</span><span class="o">);</span>
  
        <span class="c1">// .. 하략</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>글 수정 동작을 수행하는 서블릿으로 오면 파일 업로드 처리를 위한 클래스인 <code class="language-plaintext highlighter-rouge">FileUpload</code>로 이동한다.</li>
</ul>

<h2 id="fileuploadjava">FileUpload.java</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">BoardDTO</span> <span class="n">dto</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BoardDTO</span><span class="o">();</span>

<span class="c1">// 기존에 저장되 있던 파일 정보를 저장할 변수</span>
<span class="nc">String</span> <span class="n">imgUploadStatus</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
<span class="nc">String</span> <span class="n">oldImgPath</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
<span class="nc">String</span> <span class="n">oldImgName</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>

<span class="o">...</span>


<span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="n">name</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"oldImgName"</span><span class="o">))</span>
    <span class="n">oldImgName</span> <span class="o">=</span> <span class="n">value</span><span class="o">;</span>
<span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="n">name</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"imgUploadStatus"</span><span class="o">))</span>
    <span class="n">imgUploadStatus</span> <span class="o">=</span> <span class="n">value</span><span class="o">;</span>
<span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="n">name</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"oldImgPath"</span><span class="o">))</span>
    <span class="n">oldImgPath</span> <span class="o">=</span> <span class="n">value</span><span class="o">;</span>
</code></pre></div></div>

<ul>
  <li>서블릿으로 오면 <code class="language-plaintext highlighter-rouge">Multipart</code> 객체에서 기존 파일과 관련된 부분이 있으면 저장한다.</li>
  <li>수정모드에서 새로운 파일 첨부를 하지 않고 여기로 오게 되면 업로드 된 파일이 없으니 파일 등록 과정을 거치지 않고 내려올 것이다. <code class="language-plaintext highlighter-rouge">BoardDTO</code> 객체의 이미지 파일명 정보는 <code class="language-plaintext highlighter-rouge">null</code>인 상태<br /><br /></li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">if</span> <span class="o">(</span><span class="n">imgUploadStatus</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span>
<span class="o">{</span>
    <span class="k">if</span> <span class="o">(</span><span class="n">imgUploadStatus</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"false"</span><span class="o">))</span>
    <span class="o">{</span>
        <span class="c1">// 등록된 이미지를 삭제하는 경우</span>
        <span class="n">dto</span><span class="o">.</span><span class="na">setImage</span><span class="o">(</span><span class="s">"없음"</span><span class="o">);</span>
        <span class="nc">File</span> <span class="n">oldImg</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">File</span><span class="o">(</span><span class="n">oldImgPath</span><span class="o">);</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">oldImg</span><span class="o">.</span><span class="na">exists</span><span class="o">())</span> <span class="n">oldImg</span><span class="o">.</span><span class="na">delete</span><span class="o">();</span>
    <span class="o">}</span>
    <span class="k">else</span> 
    <span class="o">{</span>
        <span class="c1">// 삭제하지 않는 경우</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">dto</span><span class="o">.</span><span class="na">getImage</span><span class="o">()</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span>
            <span class="n">dto</span><span class="o">.</span><span class="na">setImage</span><span class="o">(</span><span class="n">oldImgName</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>기존 이미지 파일 정보가 있어서 그것을 어떻게 처리해라는 지시사항이 있으면 그에 맞게 처리하는 분기로 이동한다.</li>
  <li>등록된 이미지를 삭제하는 경우에는 파일명을 지우고 서버에서도 해당 파일을 지운다.</li>
  <li>삭제하지 않는 경우인데 만약 <code class="language-plaintext highlighter-rouge">BoardDTO</code>의 파일명 필드가 비어 있으면 기존 파일명을 저장한다.</li>
  <li>
    <p>이제 <code class="language-plaintext highlighter-rouge">BoardDTO</code>를 <code class="language-plaintext highlighter-rouge">DB</code>로 보내 업데이트 동작을 수행하면 파일명 필드가 <code class="language-plaintext highlighter-rouge">null</code>이 되지 않고 잘 남아있게 된다.</p>
  </li>
  <li>아래는 <code class="language-plaintext highlighter-rouge">FileUpload</code> 클래스의 전체 코드이다.</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.project.cafe.board.action</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.io.File</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.servlet.ServletContext</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletRequest</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">com.oreilly.servlet.multipart.DefaultFileRenamePolicy</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.oreilly.servlet.multipart.FilePart</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.oreilly.servlet.multipart.MultipartParser</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.oreilly.servlet.multipart.ParamPart</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.oreilly.servlet.multipart.Part</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.project.cafe.board.db.BoardDTO</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">net.coobird.thumbnailator.Thumbnails</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">net.coobird.thumbnailator.name.Rename</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">FileUpload</span> 
<span class="o">{</span>
    <span class="kd">public</span> <span class="nc">BoardDTO</span> <span class="nf">upload</span><span class="o">(</span><span class="nc">HttpServletRequest</span> <span class="n">request</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">Exception</span>
    <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"upload() 호출 "</span><span class="o">);</span>
		
        <span class="nc">BoardDTO</span> <span class="n">dto</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BoardDTO</span><span class="o">();</span>
		
        <span class="nc">ServletContext</span> <span class="n">ctx</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getServletContext</span><span class="o">();</span>
		
        <span class="c1">// 파일의 저장크기</span>
        <span class="kt">int</span> <span class="n">maxSize</span> <span class="o">=</span> <span class="mi">10</span> <span class="o">*</span> <span class="mi">1024</span> <span class="o">*</span> <span class="mi">1024</span><span class="o">;</span> <span class="c1">// 10MB</span>
		
        <span class="nc">MultipartParser</span> <span class="n">mp</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">MultipartParser</span><span class="o">(</span><span class="n">request</span><span class="o">,</span> <span class="n">maxSize</span><span class="o">);</span>
        <span class="n">mp</span><span class="o">.</span><span class="na">setEncoding</span><span class="o">(</span><span class="s">"utf-8"</span><span class="o">);</span>
        <span class="nc">Part</span> <span class="n">part</span><span class="o">;</span>
		
        <span class="c1">// 기존에 저장되 있던 파일 정보를 저장할 변수</span>
        <span class="nc">String</span> <span class="n">imgUploadStatus</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
        <span class="nc">String</span> <span class="n">oldImgPath</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
        <span class="nc">String</span> <span class="n">oldImgName</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
		
        <span class="nc">String</span> <span class="n">fileUploadStatus</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
        <span class="nc">String</span> <span class="n">oldFilePath</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
        <span class="nc">String</span> <span class="n">oldFileName</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
		
        <span class="k">while</span> <span class="o">((</span><span class="n">part</span> <span class="o">=</span> <span class="n">mp</span><span class="o">.</span><span class="na">readNextPart</span><span class="o">())</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span>
        <span class="o">{</span>
            <span class="c1">// form 태그로 저장된 파라미터를 읽어옴</span>
            <span class="nc">String</span> <span class="n">name</span> <span class="o">=</span> <span class="n">part</span><span class="o">.</span><span class="na">getName</span><span class="o">();</span>
			
            <span class="k">if</span> <span class="o">(</span><span class="n">part</span><span class="o">.</span><span class="na">isParam</span><span class="o">())</span>
            <span class="o">{</span>
                <span class="c1">// 파일이 아닐 때</span>
                <span class="nc">ParamPart</span> <span class="n">param</span> <span class="o">=</span> <span class="o">(</span><span class="nc">ParamPart</span><span class="o">)</span><span class="n">part</span><span class="o">;</span>
                <span class="nc">String</span> <span class="n">value</span> <span class="o">=</span> <span class="n">param</span><span class="o">.</span><span class="na">getStringValue</span><span class="o">();</span>
				
                <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"param name :"</span> <span class="o">+</span> <span class="n">name</span> <span class="o">+</span> <span class="s">" value : "</span> <span class="o">+</span> <span class="n">value</span><span class="o">);</span>
				
                <span class="c1">// 각 파라미터에 맞춰 dto에 저장</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">name</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"id"</span><span class="o">))</span>
                    <span class="n">dto</span><span class="o">.</span><span class="na">setId</span><span class="o">(</span><span class="n">value</span><span class="o">);</span>
                <span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="n">name</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"title"</span><span class="o">))</span>
                    <span class="n">dto</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="n">value</span><span class="o">);</span>
                <span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="n">name</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"content"</span><span class="o">))</span>
                    <span class="n">dto</span><span class="o">.</span><span class="na">setContent</span><span class="o">(</span><span class="n">value</span><span class="o">);</span>
                <span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="n">name</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"num"</span><span class="o">))</span>
                    <span class="n">dto</span><span class="o">.</span><span class="na">setNum</span><span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">value</span><span class="o">));</span>
                <span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="n">name</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"re_lev"</span><span class="o">))</span>
                    <span class="n">dto</span><span class="o">.</span><span class="na">setRe_lev</span><span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">value</span><span class="o">));</span>
                <span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="n">name</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"re_ref"</span><span class="o">))</span>
                    <span class="n">dto</span><span class="o">.</span><span class="na">setRe_ref</span><span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">value</span><span class="o">));</span>
                <span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="n">name</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"re_seq"</span><span class="o">))</span>
                    <span class="n">dto</span><span class="o">.</span><span class="na">setRe_seq</span><span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">value</span><span class="o">));</span>
                <span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="n">name</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"oldImgName"</span><span class="o">))</span>
                    <span class="n">oldImgName</span> <span class="o">=</span> <span class="n">value</span><span class="o">;</span>
                <span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="n">name</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"oldFileName"</span><span class="o">))</span>
                    <span class="n">oldFileName</span> <span class="o">=</span> <span class="n">value</span><span class="o">;</span>
                <span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="n">name</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"fileUploadStatus"</span><span class="o">))</span>
                    <span class="n">fileUploadStatus</span> <span class="o">=</span> <span class="n">value</span><span class="o">;</span>
                <span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="n">name</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"imgUploadStatus"</span><span class="o">))</span>
                    <span class="n">imgUploadStatus</span> <span class="o">=</span> <span class="n">value</span><span class="o">;</span>
                <span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="n">name</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"oldImgPath"</span><span class="o">))</span>
                    <span class="n">oldImgPath</span> <span class="o">=</span> <span class="n">value</span><span class="o">;</span>
                <span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="n">name</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"oldFilePath"</span><span class="o">))</span>
                    <span class="n">oldFilePath</span> <span class="o">=</span> <span class="n">value</span><span class="o">;</span>
            <span class="o">}</span>
            <span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="n">part</span><span class="o">.</span><span class="na">isFile</span><span class="o">()</span> <span class="o">&amp;&amp;</span> <span class="n">name</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"image"</span><span class="o">))</span>
            <span class="o">{</span>
                <span class="c1">// 이미지 파일일 때</span>
                <span class="c1">// 이미지 저장 경로 지정</span>
                <span class="nc">File</span> <span class="n">dir</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">File</span><span class="o">(</span><span class="n">ctx</span><span class="o">.</span><span class="na">getRealPath</span><span class="o">(</span><span class="s">"/images"</span><span class="o">));</span>
                <span class="nc">File</span> <span class="n">originDir</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">File</span><span class="o">(</span><span class="n">dir</span> <span class="o">+</span> <span class="nc">File</span><span class="o">.</span><span class="na">separator</span> <span class="o">+</span> <span class="s">"origins"</span><span class="o">);</span> <span class="c1">// 원본 이미지 저장 경로</span>
                <span class="nc">File</span> <span class="n">thumbnailDir</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">File</span><span class="o">(</span><span class="n">dir</span> <span class="o">+</span> <span class="nc">File</span><span class="o">.</span><span class="na">separator</span> <span class="o">+</span> <span class="s">"thumbnails"</span><span class="o">);</span> <span class="c1">// 썸네일 저장 경로</span>
				
                <span class="c1">// 경로가 없으면 생성</span>
                <span class="k">if</span> <span class="o">(!</span><span class="n">dir</span><span class="o">.</span><span class="na">isDirectory</span><span class="o">())</span> <span class="n">dir</span><span class="o">.</span><span class="na">mkdir</span><span class="o">();</span>
                <span class="k">if</span> <span class="o">(!</span><span class="n">originDir</span><span class="o">.</span><span class="na">isDirectory</span><span class="o">())</span> <span class="n">originDir</span><span class="o">.</span><span class="na">mkdir</span><span class="o">();</span>
                <span class="k">if</span> <span class="o">(!</span><span class="n">thumbnailDir</span><span class="o">.</span><span class="na">isDirectory</span><span class="o">())</span> <span class="n">thumbnailDir</span><span class="o">.</span><span class="na">mkdir</span><span class="o">();</span>
				
                <span class="nc">FilePart</span> <span class="n">filePart</span> <span class="o">=</span> <span class="o">(</span><span class="nc">FilePart</span><span class="o">)</span> <span class="n">part</span><span class="o">;</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">filePart</span><span class="o">.</span><span class="na">getFileName</span><span class="o">()</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span>
                <span class="o">{</span>
                    <span class="n">filePart</span><span class="o">.</span><span class="na">setRenamePolicy</span><span class="o">(</span><span class="k">new</span> <span class="nc">DefaultFileRenamePolicy</span><span class="o">());</span>

                    <span class="c1">// 지정한 경로에 파일 쓰기</span>
                    <span class="nc">String</span> <span class="n">file</span> <span class="o">=</span> <span class="n">filePart</span><span class="o">.</span><span class="na">getFileName</span><span class="o">();</span>
                    <span class="n">filePart</span><span class="o">.</span><span class="na">writeTo</span><span class="o">(</span><span class="n">originDir</span><span class="o">);</span>
                    <span class="n">dto</span><span class="o">.</span><span class="na">setImage</span><span class="o">(</span><span class="n">file</span><span class="o">);</span>
                    <span class="c1">// 중복 파일명을 처리할 부분</span>
                    <span class="n">dto</span><span class="o">.</span><span class="na">setImage_uid</span><span class="o">(</span><span class="n">filePart</span><span class="o">.</span><span class="na">getFileName</span><span class="o">());</span>
					
                    <span class="c1">// 원본 이미지 파일을 이용해서 썸네일을 만들어 저장</span>
                    <span class="c1">// 크기 지정 후 지정 경로에 저장</span>
                    <span class="nc">Thumbnails</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="k">new</span> <span class="nc">File</span><span class="o">(</span><span class="n">originDir</span><span class="o">.</span><span class="na">getPath</span><span class="o">()</span> <span class="o">+</span> <span class="nc">File</span><span class="o">.</span><span class="na">separator</span> <span class="o">+</span> <span class="n">file</span><span class="o">))</span>
						<span class="o">.</span><span class="na">size</span><span class="o">(</span><span class="mi">300</span><span class="o">,</span> <span class="mi">400</span><span class="o">)</span>
						<span class="o">.</span><span class="na">toFiles</span><span class="o">(</span><span class="n">thumbnailDir</span><span class="o">,</span> <span class="nc">Rename</span><span class="o">.</span><span class="na">NO_CHANGE</span><span class="o">);</span>
                <span class="o">}</span>
                <span class="k">else</span>
                    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"img empty!"</span><span class="o">);</span>
            <span class="o">}</span>
            <span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="n">part</span><span class="o">.</span><span class="na">isFile</span><span class="o">()</span> <span class="o">&amp;&amp;</span> <span class="n">name</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"file"</span><span class="o">))</span>
            <span class="o">{</span>
                <span class="c1">// 일반 파일일 때</span>
                <span class="nc">File</span> <span class="n">dir</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">File</span><span class="o">(</span><span class="n">ctx</span><span class="o">.</span><span class="na">getRealPath</span><span class="o">(</span><span class="s">"/upload"</span><span class="o">));</span>
				
                <span class="c1">// 경로 없으면 생성</span>
                <span class="k">if</span> <span class="o">(!</span><span class="n">dir</span><span class="o">.</span><span class="na">isDirectory</span><span class="o">())</span> <span class="n">dir</span><span class="o">.</span><span class="na">mkdir</span><span class="o">();</span>
				
                <span class="nc">FilePart</span> <span class="n">filePart</span> <span class="o">=</span> <span class="o">(</span><span class="nc">FilePart</span><span class="o">)</span> <span class="n">part</span><span class="o">;</span>
                <span class="nc">String</span> <span class="n">file</span> <span class="o">=</span> <span class="n">filePart</span><span class="o">.</span><span class="na">getFileName</span><span class="o">();</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">file</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span>
                <span class="o">{</span>
                    <span class="n">filePart</span><span class="o">.</span><span class="na">writeTo</span><span class="o">(</span><span class="n">dir</span><span class="o">);</span> <span class="c1">// 지정한 경로에 파일 쓰기</span>
                    <span class="n">dto</span><span class="o">.</span><span class="na">setFile</span><span class="o">(</span><span class="n">file</span><span class="o">);</span>
                    <span class="n">dto</span><span class="o">.</span><span class="na">setFile_uid</span><span class="o">(</span><span class="n">filePart</span><span class="o">.</span><span class="na">getFileName</span><span class="o">());</span>
                <span class="o">}</span>
                <span class="k">else</span>
                    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"file empty!"</span><span class="o">);</span>
            <span class="o">}</span>
        <span class="o">}</span>
		
        <span class="c1">// 사용자 ip주소 저장</span>
        <span class="n">dto</span><span class="o">.</span><span class="na">setIp</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getRemoteAddr</span><span class="o">());</span>
		
        <span class="k">if</span> <span class="o">(</span><span class="n">imgUploadStatus</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span>
        <span class="o">{</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">imgUploadStatus</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"false"</span><span class="o">))</span>
            <span class="o">{</span>
                <span class="c1">// 등록된 이미지를 삭제하는 경우</span>
                <span class="n">dto</span><span class="o">.</span><span class="na">setImage</span><span class="o">(</span><span class="s">"없음"</span><span class="o">);</span>
                <span class="nc">File</span> <span class="n">oldImg</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">File</span><span class="o">(</span><span class="n">oldImgPath</span><span class="o">);</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">oldImg</span><span class="o">.</span><span class="na">exists</span><span class="o">())</span> <span class="n">oldImg</span><span class="o">.</span><span class="na">delete</span><span class="o">();</span>
            <span class="o">}</span>
            <span class="k">else</span> 
            <span class="o">{</span>
                <span class="c1">// 삭제하지 않는 경우</span>
                <span class="c1">// 만약 dto의 파일명 필드가 비어 있으면 기존 파일명을 저장한다.</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">dto</span><span class="o">.</span><span class="na">getImage</span><span class="o">()</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span>
                    <span class="n">dto</span><span class="o">.</span><span class="na">setImage</span><span class="o">(</span><span class="n">oldImgName</span><span class="o">);</span>
            <span class="o">}</span>
        <span class="o">}</span>
		
        <span class="k">if</span> <span class="o">(</span><span class="n">fileUploadStatus</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span>
        <span class="o">{</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">fileUploadStatus</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"false"</span><span class="o">))</span>
            <span class="o">{</span>
                <span class="n">dto</span><span class="o">.</span><span class="na">setFile</span><span class="o">(</span><span class="s">"없음"</span><span class="o">);</span>
                <span class="nc">File</span> <span class="n">oldFile</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">File</span><span class="o">(</span><span class="n">oldFilePath</span><span class="o">);</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">oldFile</span><span class="o">.</span><span class="na">exists</span><span class="o">())</span> <span class="n">oldFile</span><span class="o">.</span><span class="na">delete</span><span class="o">();</span>
            <span class="o">}</span>
            <span class="k">else</span> 
            <span class="o">{</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">dto</span><span class="o">.</span><span class="na">getFile</span><span class="o">()</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span>
                    <span class="n">dto</span><span class="o">.</span><span class="na">setFile</span><span class="o">(</span><span class="n">oldFileName</span><span class="o">);</span>
            <span class="o">}</span>
        <span class="o">}</span>
		
        <span class="k">return</span> <span class="n">dto</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>해결~!!</li>
</ul>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="ErrorLog" /><category term="Error" /><category term="Solve" /><category term="Log" /><summary type="html"><![CDATA[사용환경 MacBook Air (M1, 2020) 16GB JDK 8 Eclipse 2021-12 tomcat 8.5]]></summary></entry><entry><title type="html">JAVA Servlet 프로젝트) Cafe(웹 사이트) 만들기 29 - 파일업로드 기능 수정(중복파일명 처리)</title><link href="http://localhost:4000/project%20log/cafe-project-29/" rel="alternate" type="text/html" title="JAVA Servlet 프로젝트) Cafe(웹 사이트) 만들기 29 - 파일업로드 기능 수정(중복파일명 처리)" /><published>2022-04-06T00:00:00+09:00</published><updated>2022-04-06T00:00:00+09:00</updated><id>http://localhost:4000/project%20log/cafe-project-29</id><content type="html" xml:base="http://localhost:4000/project%20log/cafe-project-29/"><![CDATA[<h1 id="개발환경">개발환경</h1>
<ul>
  <li>MacBook Air (M1, 2020)</li>
  <li>OpenJDK 8</li>
  <li>Eclipse 2021-12</li>
  <li>tomcat 8.5</li>
  <li>MySQL Workbench 8.0.19<br /><br /><br /></li>
</ul>

<h1 id="시작">시작</h1>
<ul>
  <li>2022.3.4 ~ <br /><br /><br /></li>
</ul>

<h1 id="주제">주제</h1>
<ul>
  <li>웹 백엔드 수업 중 중간 과제로 개인 프로젝트를 진행하게 되었다.</li>
  <li>회원가입/로그인/탈퇴 등 기본적인 회원관리 시스템을 가진 웹 사이트를 만드는 것이다. 주어진 기한은 <code class="language-plaintext highlighter-rouge">한 달</code></li>
  <li>나는 <code class="language-plaintext highlighter-rouge">다음 카페</code>를 소규모로 만들어 보기로 했다. 평소 자주 이용하기도 했고 과제의 평가 기준에서 요구하는 기능들을 다 담고 있기도 했기 때문에 이번 기회에 구현해 보면 그동안 배운 것들을 활용하기에 좋을 거 같았다.</li>
  <li>평가 기준에 사이트의 디자인 구현(HTML/CSS 등 프론트엔드)은 포함되지 않기 때문에 본인이 쓰고 싶은 HTML/CSS 템플릿을 구한 뒤 회원 관리 기능을 구현하면 된다.<br /><br /><br /></li>
</ul>

<h1 id="진행상황">진행상황</h1>
<ul>
  <li>기존에 만들었던 파일업로드 기능에 수정이 필요했다.</li>
  <li>처음에 만들었던 형태는 단순한 업로드와 다운로드 기능만 있었기 때문에 첨부파일을 수정하거나 삭제했을 때 해당 부분을 반영하는 로직이 없었고 중복 파일명을 처리하는 부분도 없었다. 그래서 중복파일명 처리와 수정/삭제 처리를 추가했다.</li>
  <li>관련 내용은 <a href="https://miro7923.github.io/errorlog/warning-log-04/">에러해결 Log) JAVA JSP Servlet 글 내용 수정할 때 첨부파일이 사라지는 문제</a> 에서도 확인할 수 있다.</li>
</ul>

<h2 id="fileuploadjava">FileUpload.java</h2>
<ul>
  <li>먼저 <code class="language-plaintext highlighter-rouge">DB</code> 테이블에서 실제 파일명을 저장할 필드도 만들었다.</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.project.cafe.board.action</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.io.File</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.servlet.ServletContext</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletRequest</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">com.oreilly.servlet.multipart.DefaultFileRenamePolicy</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.oreilly.servlet.multipart.FilePart</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.oreilly.servlet.multipart.MultipartParser</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.oreilly.servlet.multipart.ParamPart</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.oreilly.servlet.multipart.Part</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.project.cafe.board.db.BoardDTO</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">net.coobird.thumbnailator.Thumbnails</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">net.coobird.thumbnailator.name.Rename</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">FileUpload</span> 
<span class="o">{</span>
    <span class="kd">public</span> <span class="nc">BoardDTO</span> <span class="nf">upload</span><span class="o">(</span><span class="nc">HttpServletRequest</span> <span class="n">request</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">Exception</span>
    <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"upload() 호출 "</span><span class="o">);</span>
		
        <span class="nc">BoardDTO</span> <span class="n">dto</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BoardDTO</span><span class="o">();</span>
		
        <span class="nc">ServletContext</span> <span class="n">ctx</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getServletContext</span><span class="o">();</span>
		
        <span class="c1">// 파일의 저장크기</span>
        <span class="kt">int</span> <span class="n">maxSize</span> <span class="o">=</span> <span class="mi">10</span> <span class="o">*</span> <span class="mi">1024</span> <span class="o">*</span> <span class="mi">1024</span><span class="o">;</span> <span class="c1">// 10MB</span>
		
        <span class="nc">MultipartParser</span> <span class="n">mp</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">MultipartParser</span><span class="o">(</span><span class="n">request</span><span class="o">,</span> <span class="n">maxSize</span><span class="o">);</span>
        <span class="n">mp</span><span class="o">.</span><span class="na">setEncoding</span><span class="o">(</span><span class="s">"utf-8"</span><span class="o">);</span>
        <span class="nc">Part</span> <span class="n">part</span><span class="o">;</span>

        <span class="c1">// 기존에 저장되 있던 파일 정보를 저장할 변수</span>
        <span class="nc">String</span> <span class="n">imgUploadStatus</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
        <span class="nc">String</span> <span class="n">oldImgPath</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
        <span class="nc">String</span> <span class="n">oldImgName</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
		
        <span class="nc">String</span> <span class="n">fileUploadStatus</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
        <span class="nc">String</span> <span class="n">oldFilePath</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
        <span class="nc">String</span> <span class="n">oldFileName</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
		
        <span class="k">while</span> <span class="o">((</span><span class="n">part</span> <span class="o">=</span> <span class="n">mp</span><span class="o">.</span><span class="na">readNextPart</span><span class="o">())</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span>
        <span class="o">{</span>
            <span class="c1">// form 태그로 저장된 파라미터를 읽어옴</span>
            <span class="nc">String</span> <span class="n">name</span> <span class="o">=</span> <span class="n">part</span><span class="o">.</span><span class="na">getName</span><span class="o">();</span>
			
            <span class="k">if</span> <span class="o">(</span><span class="n">part</span><span class="o">.</span><span class="na">isParam</span><span class="o">())</span>
            <span class="o">{</span>
                <span class="c1">// 파일이 아닐 때</span>
                <span class="nc">ParamPart</span> <span class="n">param</span> <span class="o">=</span> <span class="o">(</span><span class="nc">ParamPart</span><span class="o">)</span><span class="n">part</span><span class="o">;</span>
                <span class="nc">String</span> <span class="n">value</span> <span class="o">=</span> <span class="n">param</span><span class="o">.</span><span class="na">getStringValue</span><span class="o">();</span>
				
                <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"param name :"</span> <span class="o">+</span> <span class="n">name</span> <span class="o">+</span> <span class="s">" value : "</span> <span class="o">+</span> <span class="n">value</span><span class="o">);</span>
				
                <span class="c1">// 각 파라미터에 맞춰 dto에 저장</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">name</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"id"</span><span class="o">))</span>
                    <span class="n">dto</span><span class="o">.</span><span class="na">setId</span><span class="o">(</span><span class="n">value</span><span class="o">);</span>
                <span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="n">name</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"title"</span><span class="o">))</span>
                    <span class="n">dto</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="n">value</span><span class="o">);</span>
                <span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="n">name</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"content"</span><span class="o">))</span>
                    <span class="n">dto</span><span class="o">.</span><span class="na">setContent</span><span class="o">(</span><span class="n">value</span><span class="o">);</span>
                <span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="n">name</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"num"</span><span class="o">))</span>
                    <span class="n">dto</span><span class="o">.</span><span class="na">setNum</span><span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">value</span><span class="o">));</span>
                <span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="n">name</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"re_lev"</span><span class="o">))</span>
                    <span class="n">dto</span><span class="o">.</span><span class="na">setRe_lev</span><span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">value</span><span class="o">));</span>
                <span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="n">name</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"re_ref"</span><span class="o">))</span>
                    <span class="n">dto</span><span class="o">.</span><span class="na">setRe_ref</span><span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">value</span><span class="o">));</span>
                <span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="n">name</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"re_seq"</span><span class="o">))</span>
                    <span class="n">dto</span><span class="o">.</span><span class="na">setRe_seq</span><span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">value</span><span class="o">));</span>
                <span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="n">name</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"oldImgName"</span><span class="o">))</span>
                    <span class="n">oldImgName</span> <span class="o">=</span> <span class="n">value</span><span class="o">;</span>
                <span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="n">name</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"oldFileName"</span><span class="o">))</span>
                    <span class="n">oldFileName</span> <span class="o">=</span> <span class="n">value</span><span class="o">;</span>
                <span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="n">name</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"fileUploadStatus"</span><span class="o">))</span>
                    <span class="n">fileUploadStatus</span> <span class="o">=</span> <span class="n">value</span><span class="o">;</span>
                <span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="n">name</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"imgUploadStatus"</span><span class="o">))</span>
                    <span class="n">imgUploadStatus</span> <span class="o">=</span> <span class="n">value</span><span class="o">;</span>
                <span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="n">name</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"oldImgPath"</span><span class="o">))</span>
                    <span class="n">oldImgPath</span> <span class="o">=</span> <span class="n">value</span><span class="o">;</span>
                <span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="n">name</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"oldFilePath"</span><span class="o">))</span>
                    <span class="n">oldFilePath</span> <span class="o">=</span> <span class="n">value</span><span class="o">;</span>
            <span class="o">}</span>
            <span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="n">part</span><span class="o">.</span><span class="na">isFile</span><span class="o">()</span> <span class="o">&amp;&amp;</span> <span class="n">name</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"image"</span><span class="o">))</span>
            <span class="o">{</span>
                <span class="c1">// 이미지 파일일 때</span>
                <span class="c1">// 이미지 저장 경로 지정</span>
                <span class="nc">File</span> <span class="n">dir</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">File</span><span class="o">(</span><span class="n">ctx</span><span class="o">.</span><span class="na">getRealPath</span><span class="o">(</span><span class="s">"/images"</span><span class="o">));</span>
                <span class="nc">File</span> <span class="n">originDir</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">File</span><span class="o">(</span><span class="n">dir</span> <span class="o">+</span> <span class="nc">File</span><span class="o">.</span><span class="na">separator</span> <span class="o">+</span> <span class="s">"origins"</span><span class="o">);</span> <span class="c1">// 원본 이미지 저장 경로</span>
                <span class="nc">File</span> <span class="n">thumbnailDir</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">File</span><span class="o">(</span><span class="n">dir</span> <span class="o">+</span> <span class="nc">File</span><span class="o">.</span><span class="na">separator</span> <span class="o">+</span> <span class="s">"thumbnails"</span><span class="o">);</span> <span class="c1">// 썸네일 저장 경로</span>
				
                <span class="c1">// 경로가 없으면 생성</span>
                <span class="k">if</span> <span class="o">(!</span><span class="n">dir</span><span class="o">.</span><span class="na">isDirectory</span><span class="o">())</span> <span class="n">dir</span><span class="o">.</span><span class="na">mkdir</span><span class="o">();</span>
                <span class="k">if</span> <span class="o">(!</span><span class="n">originDir</span><span class="o">.</span><span class="na">isDirectory</span><span class="o">())</span> <span class="n">originDir</span><span class="o">.</span><span class="na">mkdir</span><span class="o">();</span>
                <span class="k">if</span> <span class="o">(!</span><span class="n">thumbnailDir</span><span class="o">.</span><span class="na">isDirectory</span><span class="o">())</span> <span class="n">thumbnailDir</span><span class="o">.</span><span class="na">mkdir</span><span class="o">();</span>
				
                <span class="nc">FilePart</span> <span class="n">filePart</span> <span class="o">=</span> <span class="o">(</span><span class="nc">FilePart</span><span class="o">)</span> <span class="n">part</span><span class="o">;</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">filePart</span><span class="o">.</span><span class="na">getFileName</span><span class="o">()</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span>
                <span class="o">{</span>
                    <span class="c1">// 중복 파일명 처리 - 실제 참고할 파일은 rename된 파일이름 쓰기</span>
                    <span class="n">filePart</span><span class="o">.</span><span class="na">setRenamePolicy</span><span class="o">(</span><span class="k">new</span> <span class="nc">DefaultFileRenamePolicy</span><span class="o">());</span>

                    <span class="c1">// 지정한 경로에 파일 쓰기</span>
                    <span class="nc">String</span> <span class="n">file</span> <span class="o">=</span> <span class="n">filePart</span><span class="o">.</span><span class="na">getFileName</span><span class="o">();</span>
                    <span class="n">filePart</span><span class="o">.</span><span class="na">writeTo</span><span class="o">(</span><span class="n">originDir</span><span class="o">);</span>
                    <span class="n">dto</span><span class="o">.</span><span class="na">setImage</span><span class="o">(</span><span class="n">file</span><span class="o">);</span>
                    <span class="n">dto</span><span class="o">.</span><span class="na">setImage_uid</span><span class="o">(</span><span class="n">filePart</span><span class="o">.</span><span class="na">getFileName</span><span class="o">());</span>
					
                    <span class="c1">// 원본 이미지 파일을 이용해서 썸네일을 만들어 저장</span>
                    <span class="c1">// 크기 지정 후 지정 경로에 저장</span>
                    <span class="c1">// 썸네일 파일명은 중복처리된 파일명과 같게 만든다.</span>
                    <span class="nc">Thumbnails</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="k">new</span> <span class="nc">File</span><span class="o">(</span><span class="n">originDir</span><span class="o">.</span><span class="na">getPath</span><span class="o">()</span> <span class="o">+</span> <span class="nc">File</span><span class="o">.</span><span class="na">separator</span> <span class="o">+</span> <span class="n">filePart</span><span class="o">.</span><span class="na">getFileName</span><span class="o">()))</span>
                        <span class="o">.</span><span class="na">size</span><span class="o">(</span><span class="mi">300</span><span class="o">,</span> <span class="mi">400</span><span class="o">)</span>
                        <span class="o">.</span><span class="na">toFiles</span><span class="o">(</span><span class="n">thumbnailDir</span><span class="o">,</span> <span class="nc">Rename</span><span class="o">.</span><span class="na">NO_CHANGE</span><span class="o">);</span>
                <span class="o">}</span>
                <span class="k">else</span>
                    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"img empty!"</span><span class="o">);</span>
            <span class="o">}</span>
            <span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="n">part</span><span class="o">.</span><span class="na">isFile</span><span class="o">()</span> <span class="o">&amp;&amp;</span> <span class="n">name</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"file"</span><span class="o">))</span>
            <span class="o">{</span>
                <span class="c1">// 일반 파일일 때</span>
                <span class="nc">File</span> <span class="n">dir</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">File</span><span class="o">(</span><span class="n">ctx</span><span class="o">.</span><span class="na">getRealPath</span><span class="o">(</span><span class="s">"/upload"</span><span class="o">));</span>
				
                <span class="c1">// 경로 없으면 생성</span>
                <span class="k">if</span> <span class="o">(!</span><span class="n">dir</span><span class="o">.</span><span class="na">isDirectory</span><span class="o">())</span> <span class="n">dir</span><span class="o">.</span><span class="na">mkdir</span><span class="o">();</span>
				
                <span class="nc">FilePart</span> <span class="n">filePart</span> <span class="o">=</span> <span class="o">(</span><span class="nc">FilePart</span><span class="o">)</span> <span class="n">part</span><span class="o">;</span>
                <span class="nc">String</span> <span class="n">file</span> <span class="o">=</span> <span class="n">filePart</span><span class="o">.</span><span class="na">getFileName</span><span class="o">();</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">file</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span>
                <span class="o">{</span>
                    <span class="n">filePart</span><span class="o">.</span><span class="na">setRenamePolicy</span><span class="o">(</span><span class="k">new</span> <span class="nc">DefaultFileRenamePolicy</span><span class="o">());</span>
                    <span class="n">filePart</span><span class="o">.</span><span class="na">writeTo</span><span class="o">(</span><span class="n">dir</span><span class="o">);</span> <span class="c1">// 지정한 경로에 파일 쓰기</span>
                    <span class="n">dto</span><span class="o">.</span><span class="na">setFile</span><span class="o">(</span><span class="n">file</span><span class="o">);</span>
                    <span class="n">dto</span><span class="o">.</span><span class="na">setFile_uid</span><span class="o">(</span><span class="n">filePart</span><span class="o">.</span><span class="na">getFileName</span><span class="o">());</span>
                <span class="o">}</span>
                <span class="k">else</span>
                    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"file empty!"</span><span class="o">);</span>
            <span class="o">}</span>
        <span class="o">}</span>
		
        <span class="c1">// 사용자 ip주소 저장</span>
        <span class="n">dto</span><span class="o">.</span><span class="na">setIp</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getRemoteAddr</span><span class="o">());</span>
        
        <span class="k">if</span> <span class="o">(</span><span class="n">imgUploadStatus</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span>
        <span class="o">{</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">imgUploadStatus</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"false"</span><span class="o">))</span>
            <span class="o">{</span>
                <span class="c1">// 등록된 이미지를 삭제하는 경우</span>
                <span class="n">dto</span><span class="o">.</span><span class="na">setImage</span><span class="o">(</span><span class="s">"없음"</span><span class="o">);</span>
                <span class="nc">File</span> <span class="n">oldImg</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">File</span><span class="o">(</span><span class="n">oldImgPath</span><span class="o">);</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">oldImg</span><span class="o">.</span><span class="na">exists</span><span class="o">())</span> <span class="n">oldImg</span><span class="o">.</span><span class="na">delete</span><span class="o">();</span>
				
                <span class="c1">// 썸네일도 삭제한다.</span>
                <span class="nc">File</span> <span class="n">oldThumbnail</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">File</span><span class="o">(</span><span class="n">ctx</span><span class="o">.</span><span class="na">getRealPath</span><span class="o">(</span><span class="s">"/thumbnail"</span><span class="o">)</span> <span class="o">+</span> <span class="nc">File</span><span class="o">.</span><span class="na">separator</span> <span class="o">+</span> <span class="n">oldImgName</span><span class="o">);</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">oldThumbnail</span><span class="o">.</span><span class="na">exists</span><span class="o">())</span> <span class="n">oldThumbnail</span><span class="o">.</span><span class="na">delete</span><span class="o">();</span>
            <span class="o">}</span>
            <span class="k">else</span> 
            <span class="o">{</span>
                <span class="c1">// 삭제하지 않는 경우</span>
                <span class="c1">// 만약 dto의 파일명 필드가 비어 있으면 기존 파일명을 저장한다.</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">dto</span><span class="o">.</span><span class="na">getImage</span><span class="o">()</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span>
                    <span class="n">dto</span><span class="o">.</span><span class="na">setImage</span><span class="o">(</span><span class="n">oldImgName</span><span class="o">);</span>
            <span class="o">}</span>
        <span class="o">}</span>
		
        <span class="k">if</span> <span class="o">(</span><span class="n">fileUploadStatus</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span>
        <span class="o">{</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">fileUploadStatus</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"false"</span><span class="o">))</span>
            <span class="o">{</span>
                <span class="n">dto</span><span class="o">.</span><span class="na">setFile</span><span class="o">(</span><span class="s">"없음"</span><span class="o">);</span>
                <span class="nc">File</span> <span class="n">oldFile</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">File</span><span class="o">(</span><span class="n">oldFilePath</span><span class="o">);</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">oldFile</span><span class="o">.</span><span class="na">exists</span><span class="o">())</span> <span class="n">oldFile</span><span class="o">.</span><span class="na">delete</span><span class="o">();</span>
            <span class="o">}</span>
            <span class="k">else</span> 
            <span class="o">{</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">dto</span><span class="o">.</span><span class="na">getFile</span><span class="o">()</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span>
                    <span class="n">dto</span><span class="o">.</span><span class="na">setFile</span><span class="o">(</span><span class="n">oldFileName</span><span class="o">);</span>
            <span class="o">}</span>
        <span class="o">}</span>
		
        <span class="k">return</span> <span class="n">dto</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>파일명의 중복처리를 지정해 준 다음 업로드되면 중복처리된 파일명을 받아온다.</li>
  <li>게시글에서 사용자에게 보여줄 파일명과 서버에서 다운로드 할 때 참고할 파일명을 따로 저장한다.</li>
  <li>실제 다운로드가 이루어질 땐 서버에 업로드 된 파일명인 <code class="language-plaintext highlighter-rouge">image_uid</code>, <code class="language-plaintext highlighter-rouge">file_uid</code>를 참고할 것이다.</li>
</ul>

<h2 id="boardcontentjsp">boardContent.jsp</h2>

<div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;tr&gt;</span>
  <span class="nt">&lt;td</span> <span class="na">colspan=</span><span class="s">"5"</span> <span class="na">style=</span><span class="s">"white-space:pre-wrap; word-wrap:break-word; word-break: break-all;"</span><span class="nt">&gt;&lt;%=</span><span class="n">dto</span><span class="o">.</span><span class="na">getContent</span><span class="o">()</span> <span class="nt">%&gt;&lt;br&gt;&lt;br&gt;</span>
  <span class="nt">&lt;%</span><span class="k">if</span> <span class="o">(</span><span class="n">dto</span><span class="o">.</span><span class="na">getImage_uid</span><span class="o">()</span> <span class="o">!=</span> <span class="kc">null</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="n">dto</span><span class="o">.</span><span class="na">getImage_uid</span><span class="o">().</span><span class="na">equals</span><span class="o">(</span><span class="s">"없음"</span><span class="o">))</span> <span class="o">{</span> <span class="nt">%&gt;</span>
    <span class="c">&lt;!-- 실제 서버에 업로드 된 파일명이 중복되면 이름이 바뀌기 때문에 바뀐 파일명을 참조해야 한다. --&gt;</span>
    <span class="nt">&lt;img</span> <span class="na">src=</span><span class="s">"./BoardImgAction.bo?img_name=</span><span class="nt">&lt;%=</span><span class="n">dto</span><span class="o">.</span><span class="na">getImage_uid</span><span class="o">().</span> <span class="nt">%&gt;</span><span class="s">"</span><span class="nt">&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/td&gt;</span>
  <span class="nt">&lt;%</span><span class="o">}</span> <span class="nt">%&gt;</span>
<span class="nt">&lt;/tr&gt;</span>
<span class="nt">&lt;tr&gt;</span>
  <span class="nt">&lt;td</span> <span class="na">colspan=</span><span class="s">"2"</span><span class="nt">&gt;</span>첨부파일<span class="nt">&lt;/td&gt;</span>
  <span class="nt">&lt;td</span> <span class="na">colspan=</span><span class="s">"3"</span><span class="nt">&gt;</span>
  <span class="c">&lt;!-- 첨부파일이 있을 때에만 하이퍼링크 연결 --&gt;</span>
  <span class="nt">&lt;%</span><span class="k">if</span> <span class="o">(</span><span class="n">dto</span><span class="o">.</span><span class="na">getFile_uid</span><span class="o">()</span> <span class="o">==</span> <span class="kc">null</span> <span class="o">||</span> <span class="n">dto</span><span class="o">.</span><span class="na">getFile_uid</span><span class="o">().</span><span class="na">equals</span><span class="o">(</span><span class="s">"없음"</span><span class="o">))</span> <span class="o">{</span> <span class="nt">%&gt;</span>
      없음
  <span class="nt">&lt;%</span> <span class="o">}</span>
    <span class="k">else</span> <span class="o">{</span> <span class="nt">%&gt;</span>
      <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"./BoardFileDownloadAction.bo?file_name=</span><span class="nt">&lt;%=</span><span class="n">dto</span><span class="o">.</span><span class="na">getFile_uid</span><span class="o">()</span> <span class="nt">%&gt;</span><span class="s">"</span><span class="nt">&gt;&lt;%=</span><span class="n">dto</span><span class="o">.</span><span class="na">getFile</span><span class="o">()</span> <span class="nt">%&gt;&lt;/a&gt;</span>
  <span class="nt">&lt;%</span><span class="o">}</span> <span class="nt">%&gt;</span>
  <span class="nt">&lt;/td&gt;</span>
<span class="nt">&lt;/tr&gt;</span>
</code></pre></div></div>

<ul>
  <li>사용자에게 보여주는 파일명은 사용자가 업로드했던 파일명 그대로 쓰지만 실제 참조할 파일명은 중복처리된 파일명을 사용한다.</li>
</ul>

<p align="center"><img src="../../assets/images/uploadedImg.png" width="300" /></p>

<ul>
  <li>업로드 되는 폴더에 중복처리되어 들어가는 것을 확인할 수 있다.</li>
  <li>이제 내일이 발표니까 발표자료 만들어야겠다…<br /><br /><br /></li>
</ul>

<h1 id="마감까지">마감까지</h1>
<ul>
  <li>내일이 발표네…</li>
  <li><code class="language-plaintext highlighter-rouge">D-1</code></li>
</ul>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="Project Log" /><category term="Project" /><category term="Cafe" /><category term="Log" /><summary type="html"><![CDATA[개발환경 MacBook Air (M1, 2020) OpenJDK 8 Eclipse 2021-12 tomcat 8.5 MySQL Workbench 8.0.19]]></summary></entry><entry><title type="html">에러해결 Log) JAVA JSP Servlet 글 내용 수정할 때 첨부파일이 사라지는 문제2</title><link href="http://localhost:4000/errorlog/warning-log-05/" rel="alternate" type="text/html" title="에러해결 Log) JAVA JSP Servlet 글 내용 수정할 때 첨부파일이 사라지는 문제2" /><published>2022-04-06T00:00:00+09:00</published><updated>2022-04-06T00:00:00+09:00</updated><id>http://localhost:4000/errorlog/warning-log-05</id><content type="html" xml:base="http://localhost:4000/errorlog/warning-log-05/"><![CDATA[<h1 id="사용환경">사용환경</h1>
<ul>
  <li>MacBook Air (M1, 2020) 16GB</li>
  <li>JDK 8</li>
  <li>Eclipse 2021-12</li>
  <li>tomcat 8.5<br /><br /><br /></li>
</ul>

<h1 id="에러의-발생">에러의 발생</h1>
<ul>
  <li>무슨 버그가 수정을 해도해도 계속 나오는지… 얼렁뚱땅 돌아가는 느낌이다 🥲</li>
  <li>게시글을 수정할 때 첨부파일이 사라지는 버그를 해결했다고 생각했는데 완벽히 해결되지 않았다.</li>
  <li>여전히 일부 케이스에서 제대로 처리가 되지 않아 <code class="language-plaintext highlighter-rouge">DB</code> 상에서의 파일명이 <code class="language-plaintext highlighter-rouge">null</code>로 바뀌는 문제가 존재했다.</li>
  <li>그래서 좀 더 근본적인 원인을 떠올려 보았다… 게시글을 수정하며 파일 업로드 단계를 거치는 과정에서 <code class="language-plaintext highlighter-rouge">DTO</code> 생성 시 파일명이 지정되지 않아 <code class="language-plaintext highlighter-rouge">null</code>로 남아있는 것이 <code class="language-plaintext highlighter-rouge">DB</code> 수정 동작 때 넘어와서 문제라면 <code class="language-plaintext highlighter-rouge">DB</code>에 접근하는 메서드를 수정하는 것이 빠르지 않을까…</li>
</ul>

<h1 id="문제-해결">문제 해결</h1>
<ul>
  <li>기존에 작성했던 게시글 수정 메서드</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kt">int</span> <span class="nf">modifyPost</span><span class="o">(</span><span class="nc">BoardDTO</span> <span class="n">dto</span><span class="o">)</span>
<span class="o">{</span>
    <span class="kt">int</span> <span class="n">ret</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="o">;</span>
		
    <span class="k">try</span> <span class="o">{</span>
        <span class="n">con</span> <span class="o">=</span> <span class="n">getCon</span><span class="o">();</span>
			
        <span class="c1">// 번호로 해당 글 찾기</span>
        <span class="n">sql</span> <span class="o">=</span> <span class="s">"select * from cafe_board where num=?"</span><span class="o">;</span>
        <span class="n">pstmt</span> <span class="o">=</span> <span class="n">con</span><span class="o">.</span><span class="na">prepareStatement</span><span class="o">(</span><span class="n">sql</span><span class="o">);</span>
			
        <span class="n">pstmt</span><span class="o">.</span><span class="na">setInt</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="n">dto</span><span class="o">.</span><span class="na">getNum</span><span class="o">());</span>
			
        <span class="n">rs</span> <span class="o">=</span> <span class="n">pstmt</span><span class="o">.</span><span class="na">executeQuery</span><span class="o">();</span>
			
        <span class="k">if</span> <span class="o">(</span><span class="n">rs</span><span class="o">.</span><span class="na">next</span><span class="o">())</span>
        <span class="o">{</span>
            <span class="c1">// update 동작 수행</span>
            <span class="n">sql</span> <span class="o">=</span> <span class="s">"update cafe_board set title=?, image=?, image_uid=?, file=?, file_uid=? content=? where num=?"</span><span class="o">;</span>
            <span class="n">pstmt</span> <span class="o">=</span> <span class="n">con</span><span class="o">.</span><span class="na">prepareStatement</span><span class="o">(</span><span class="n">sql</span><span class="o">);</span>
				
            <span class="n">pstmt</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="n">dto</span><span class="o">.</span><span class="na">getTitle</span><span class="o">());</span>
            <span class="n">pstmt</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="mi">2</span><span class="o">,</span> <span class="n">dto</span><span class="o">.</span><span class="na">getContent</span><span class="o">());</span>
            <span class="n">pstmt</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="mi">3</span><span class="o">,</span> <span class="n">dto</span><span class="o">.</span><span class="na">getImage</span><span class="o">());</span>
            <span class="n">pstmt</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="mi">4</span><span class="o">,</span> <span class="n">dto</span><span class="o">.</span><span class="na">getImage_uid</span><span class="o">());</span>
            <span class="n">pstmt</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="mi">5</span><span class="o">,</span> <span class="n">dto</span><span class="o">.</span><span class="na">getFile</span><span class="o">());</span>
            <span class="n">pstmt</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="mi">6</span><span class="o">,</span> <span class="n">dto</span><span class="o">.</span><span class="na">getFile_uid</span><span class="o">());</span>
            <span class="n">pstmt</span><span class="o">.</span><span class="na">setInt</span><span class="o">(</span><span class="mi">7</span><span class="o">,</span> <span class="n">dto</span><span class="o">.</span><span class="na">getNum</span><span class="o">());</span>
				
            <span class="n">ret</span> <span class="o">=</span> <span class="n">pstmt</span><span class="o">.</span><span class="na">executeUpdate</span><span class="o">();</span>
				
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"DAO : 글 수정 완료"</span><span class="o">);</span>
        <span class="o">}</span>
    <span class="o">}</span>
    <span class="k">catch</span> <span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
    <span class="o">}</span>
    <span class="k">finally</span> <span class="o">{</span>
        <span class="n">closeDB</span><span class="o">();</span>
    <span class="o">}</span>
		
    <span class="k">return</span> <span class="n">ret</span><span class="o">;</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>매개변수로 받은 <code class="language-plaintext highlighter-rouge">DTO</code>를 그대로 받아서 바로 업데이트 동작을 수행한다.</li>
  <li>
    <p>이러니 <code class="language-plaintext highlighter-rouge">DTO</code>의 파일명 필드가 <code class="language-plaintext highlighter-rouge">null</code>로 넘어와도 아무 필터링 없이 <code class="language-plaintext highlighter-rouge">DB</code>에 <code class="language-plaintext highlighter-rouge">null</code>이 저장되는 것이었다.
<br /><br /></p>
  </li>
  <li>수정한 메서드</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kt">int</span> <span class="nf">modifyPost</span><span class="o">(</span><span class="nc">BoardDTO</span> <span class="n">dto</span><span class="o">)</span>
<span class="o">{</span>
    <span class="kt">int</span> <span class="n">ret</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="o">;</span>
		
    <span class="k">try</span> <span class="o">{</span>
        <span class="n">con</span> <span class="o">=</span> <span class="n">getCon</span><span class="o">();</span>
			
        <span class="c1">// 번호로 해당 글 찾기</span>
        <span class="n">sql</span> <span class="o">=</span> <span class="s">"select * from cafe_board where num=?"</span><span class="o">;</span>
        <span class="n">pstmt</span> <span class="o">=</span> <span class="n">con</span><span class="o">.</span><span class="na">prepareStatement</span><span class="o">(</span><span class="n">sql</span><span class="o">);</span>
			
        <span class="n">pstmt</span><span class="o">.</span><span class="na">setInt</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="n">dto</span><span class="o">.</span><span class="na">getNum</span><span class="o">());</span>
			
        <span class="n">rs</span> <span class="o">=</span> <span class="n">pstmt</span><span class="o">.</span><span class="na">executeQuery</span><span class="o">();</span>
			
        <span class="k">if</span> <span class="o">(</span><span class="n">rs</span><span class="o">.</span><span class="na">next</span><span class="o">())</span>
        <span class="o">{</span>
            <span class="c1">// update 동작 수행</span>
            <span class="c1">// 새로 수정한 글에서 파일 정보가 있으면 그걸로 수정 / 없으면 그대로 놔둠</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">dto</span><span class="o">.</span><span class="na">getImage</span><span class="o">()</span> <span class="o">!=</span> <span class="kc">null</span> <span class="o">&amp;&amp;</span> <span class="n">dto</span><span class="o">.</span><span class="na">getImage_uid</span><span class="o">()</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span>
            <span class="o">{</span>
                <span class="n">sql</span> <span class="o">=</span> <span class="s">"update cafe_board set image=?, image_uid=? where num=?"</span><span class="o">;</span>
                <span class="n">pstmt</span> <span class="o">=</span> <span class="n">con</span><span class="o">.</span><span class="na">prepareStatement</span><span class="o">(</span><span class="n">sql</span><span class="o">);</span>
					
                <span class="n">pstmt</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="n">dto</span><span class="o">.</span><span class="na">getImage</span><span class="o">());</span>
                <span class="n">pstmt</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="mi">2</span><span class="o">,</span> <span class="n">dto</span><span class="o">.</span><span class="na">getImage_uid</span><span class="o">());</span>
                <span class="n">pstmt</span><span class="o">.</span><span class="na">setInt</span><span class="o">(</span><span class="mi">3</span><span class="o">,</span> <span class="n">dto</span><span class="o">.</span><span class="na">getNum</span><span class="o">());</span>
					
                <span class="n">pstmt</span><span class="o">.</span><span class="na">executeUpdate</span><span class="o">();</span>
            <span class="o">}</span>
				
            <span class="k">if</span> <span class="o">(</span><span class="n">dto</span><span class="o">.</span><span class="na">getFile</span><span class="o">()</span> <span class="o">!=</span> <span class="kc">null</span> <span class="o">&amp;&amp;</span> <span class="n">dto</span><span class="o">.</span><span class="na">getFile_uid</span><span class="o">()</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span>
            <span class="o">{</span>
                <span class="n">sql</span> <span class="o">=</span> <span class="s">"update cafe_board set file=?, file_uid=? where num=?"</span><span class="o">;</span>
                <span class="n">pstmt</span> <span class="o">=</span> <span class="n">con</span><span class="o">.</span><span class="na">prepareStatement</span><span class="o">(</span><span class="n">sql</span><span class="o">);</span>
					
                <span class="n">pstmt</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="n">dto</span><span class="o">.</span><span class="na">getFile</span><span class="o">());</span>
                <span class="n">pstmt</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="mi">2</span><span class="o">,</span> <span class="n">dto</span><span class="o">.</span><span class="na">getFile_uid</span><span class="o">());</span>
                <span class="n">pstmt</span><span class="o">.</span><span class="na">setInt</span><span class="o">(</span><span class="mi">3</span><span class="o">,</span> <span class="n">dto</span><span class="o">.</span><span class="na">getNum</span><span class="o">());</span>
					
                <span class="n">pstmt</span><span class="o">.</span><span class="na">executeUpdate</span><span class="o">();</span>
            <span class="o">}</span>
				
            <span class="n">sql</span> <span class="o">=</span> <span class="s">"update cafe_board set title=?, content=? where num=?"</span><span class="o">;</span>
            <span class="n">pstmt</span> <span class="o">=</span> <span class="n">con</span><span class="o">.</span><span class="na">prepareStatement</span><span class="o">(</span><span class="n">sql</span><span class="o">);</span>
				
            <span class="n">pstmt</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="n">dto</span><span class="o">.</span><span class="na">getTitle</span><span class="o">());</span>
            <span class="n">pstmt</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="mi">2</span><span class="o">,</span> <span class="n">dto</span><span class="o">.</span><span class="na">getContent</span><span class="o">());</span>
            <span class="n">pstmt</span><span class="o">.</span><span class="na">setInt</span><span class="o">(</span><span class="mi">3</span><span class="o">,</span> <span class="n">dto</span><span class="o">.</span><span class="na">getNum</span><span class="o">());</span>
				
            <span class="n">ret</span> <span class="o">=</span> <span class="n">pstmt</span><span class="o">.</span><span class="na">executeUpdate</span><span class="o">();</span>
				
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"DAO : 글 수정 완료"</span><span class="o">);</span>
        <span class="o">}</span>
    <span class="o">}</span>
    <span class="k">catch</span> <span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
    <span class="o">}</span>
    <span class="k">finally</span> <span class="o">{</span>
        <span class="n">closeDB</span><span class="o">();</span>
    <span class="o">}</span>
		
    <span class="k">return</span> <span class="n">ret</span><span class="o">;</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>전달되어 온 <code class="language-plaintext highlighter-rouge">DTO</code>에 파일명 정보가 있을 때에만 업데이트가 되도록 수정했다.</li>
  <li>이렇게 하니까 그동안 고민했던 문제들이 싹 해결되었다.</li>
  <li>
    <p>역시 근본적인 원인을 제거했어야…</p>
  </li>
  <li>이렇게 문제 해결~!! 👏</li>
</ul>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="ErrorLog" /><category term="Error" /><category term="Solve" /><category term="Log" /><summary type="html"><![CDATA[사용환경 MacBook Air (M1, 2020) 16GB JDK 8 Eclipse 2021-12 tomcat 8.5]]></summary></entry></feed>