<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2022-03-30T01:22:22+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Yujin Dev Log</title><subtitle>개발 공부하는 블로그</subtitle><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><entry><title type="html">프로젝트) Cafe(웹 사이트) 만들기 18 - 우편번호 검색 기능 추가</title><link href="http://localhost:4000/project%20log/cafe-project-18/" rel="alternate" type="text/html" title="프로젝트) Cafe(웹 사이트) 만들기 18 - 우편번호 검색 기능 추가" /><published>2022-03-30T00:00:00+09:00</published><updated>2022-03-30T00:00:00+09:00</updated><id>http://localhost:4000/project%20log/cafe-project-18</id><content type="html" xml:base="http://localhost:4000/project%20log/cafe-project-18/"><![CDATA[<h1 id="개발환경">개발환경</h1>
<ul>
  <li>MacBook Air (M1, 2020)</li>
  <li>OpenJDK 8</li>
  <li>Eclipse 2021-12</li>
  <li>tomcat 8.5</li>
  <li>MySQL Workbench 8.0.19<br /><br /><br /></li>
</ul>

<h1 id="시작">시작</h1>
<ul>
  <li>2022.3.4 ~ <br /><br /><br /></li>
</ul>

<h1 id="주제">주제</h1>
<ul>
  <li>웹 백엔드 수업 중 중간 과제로 개인 프로젝트를 진행하게 되었다.</li>
  <li>회원가입/로그인/탈퇴 등 기본적인 회원관리 시스템을 가진 웹 사이트를 만드는 것이다. 주어진 기한은 <code class="language-plaintext highlighter-rouge">한 달</code></li>
  <li>나는 <code class="language-plaintext highlighter-rouge">다음 카페</code>를 소규모로 만들어 보기로 했다. 평소 자주 이용하기도 했고 과제의 평가 기준에서 요구하는 기능들을 다 담고 있기도 했기 때문에 이번 기회에 구현해 보면 그동안 배운 것들을 활용하기에 좋을 거 같았다.</li>
  <li>평가 기준에 사이트의 디자인 구현(HTML/CSS 등 프론트엔드)은 포함되지 않기 때문에 본인이 쓰고 싶은 HTML/CSS 템플릿을 구한 뒤 회원 관리 기능을 구현하면 된다.<br /><br /><br /></li>
</ul>

<h1 id="진행상황">진행상황</h1>
<ul>
  <li>다음 우편번호 서비스 API를 이용해 회원가입 시 우편번호와 주소를 검색하는 기능을 추가했다.</li>
  <li><a href="https://postcode.map.daum.net/guide">다음 우편번호 서비스</a></li>
</ul>

<h2 id="joinjsp">join.jsp</h2>

<div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"formRow"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;label</span> <span class="na">for=</span><span class="s">"MOD_TEXTFORM_NameField"</span><span class="nt">&gt;</span>우편번호 <span class="nt">&lt;/label&gt;</span>
  <span class="nt">&lt;label</span> <span class="na">class=</span><span class="s">"phone"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"text"</span> <span class="na">name=</span><span class="s">"postalcode"</span> <span class="na">id=</span><span class="s">"postalcode"</span> <span class="na">placeholder=</span><span class="s">"우편번호"</span> <span class="na">readonly</span><span class="nt">&gt;</span>
    <span class="nt">&lt;button</span> <span class="na">id=</span><span class="s">"postalBtn"</span> <span class="na">class=</span><span class="s">"btn"</span> <span class="na">name=</span><span class="s">"postalBtn"</span> <span class="na">onclick=</span><span class="s">"execDaumPostcode()"</span><span class="nt">&gt;</span>우편번호 찾기<span class="nt">&lt;/button&gt;&lt;br&gt;</span>
  <span class="nt">&lt;/label&gt;</span>
<span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">"postalCodeMsg"</span><span class="nt">&gt;&lt;/div&gt;</span>
<span class="nt">&lt;span</span> <span class="na">id=</span><span class="s">"guide"</span> <span class="na">style=</span><span class="s">"color:#999;display:none"</span><span class="nt">&gt;&lt;/span&gt;</span>
<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"formRow"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;label</span> <span class="na">for=</span><span class="s">"MOD_TEXTFORM_NameField"</span><span class="nt">&gt;</span>도로명 주소 <span class="nt">&lt;/label&gt;</span>
  <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"text"</span> <span class="na">id=</span><span class="s">"roadAddress"</span> <span class="na">name=</span><span class="s">"roadAddress"</span> <span class="na">placeholder=</span><span class="s">"도로명주소"</span> <span class="na">readonly</span><span class="nt">&gt;</span>
<span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"formRow"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;label</span> <span class="na">for=</span><span class="s">"MOD_TEXTFORM_NameField"</span><span class="nt">&gt;</span>상세 주소 <span class="nt">&lt;/label&gt;</span>
  <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"text"</span> <span class="na">id=</span><span class="s">"detailAddress"</span> <span class="na">name=</span><span class="s">"detailAddress"</span> <span class="na">placeholder=</span><span class="s">"상세주소"</span><span class="nt">&gt;</span>
<span class="nt">&lt;/div&gt;</span>

<span class="nt">&lt;script </span><span class="na">src=</span><span class="s">"//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js"</span><span class="nt">&gt;&lt;/script&gt;</span>
<span class="nt">&lt;script&gt;</span>
<span class="kd">function</span> <span class="nx">execDaumPostcode</span><span class="p">()</span> <span class="p">{</span>
    <span class="k">new</span> <span class="nx">daum</span><span class="p">.</span><span class="nx">Postcode</span><span class="p">({</span>
        <span class="na">oncomplete</span><span class="p">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">data</span><span class="p">)</span> <span class="p">{</span>
            <span class="c1">// 팝업에서 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분.</span>

            <span class="c1">// 도로명 주소의 노출 규칙에 따라 주소를 표시한다.</span>
            <span class="c1">// 내려오는 변수가 값이 없는 경우엔 공백('')값을 가지므로, 이를 참고하여 분기 한다.</span>
            <span class="kd">var</span> <span class="nx">roadAddr</span> <span class="o">=</span> <span class="nx">data</span><span class="p">.</span><span class="nx">roadAddress</span><span class="p">;</span> <span class="c1">// 도로명 주소 변수</span>
            <span class="kd">var</span> <span class="nx">extraRoadAddr</span> <span class="o">=</span> <span class="dl">''</span><span class="p">;</span> <span class="c1">// 참고 항목 변수</span>

            <span class="c1">// 법정동명이 있을 경우 추가한다. (법정리는 제외)</span>
            <span class="c1">// 법정동의 경우 마지막 문자가 "동/로/가"로 끝난다.</span>
            <span class="k">if</span><span class="p">(</span><span class="nx">data</span><span class="p">.</span><span class="nx">bname</span> <span class="o">!==</span> <span class="dl">''</span> <span class="o">&amp;&amp;</span> <span class="sr">/</span><span class="se">[</span><span class="sr">동|로|가</span><span class="se">]</span><span class="sr">$/g</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">data</span><span class="p">.</span><span class="nx">bname</span><span class="p">)){</span>
                <span class="nx">extraRoadAddr</span> <span class="o">+=</span> <span class="nx">data</span><span class="p">.</span><span class="nx">bname</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="c1">// 건물명이 있고, 공동주택일 경우 추가한다.</span>
            <span class="k">if</span><span class="p">(</span><span class="nx">data</span><span class="p">.</span><span class="nx">buildingName</span> <span class="o">!==</span> <span class="dl">''</span> <span class="o">&amp;&amp;</span> <span class="nx">data</span><span class="p">.</span><span class="nx">apartment</span> <span class="o">===</span> <span class="dl">'</span><span class="s1">Y</span><span class="dl">'</span><span class="p">){</span>
               <span class="nx">extraRoadAddr</span> <span class="o">+=</span> <span class="p">(</span><span class="nx">extraRoadAddr</span> <span class="o">!==</span> <span class="dl">''</span> <span class="p">?</span> <span class="dl">'</span><span class="s1">, </span><span class="dl">'</span> <span class="o">+</span> <span class="nx">data</span><span class="p">.</span><span class="nx">buildingName</span> <span class="p">:</span> <span class="nx">data</span><span class="p">.</span><span class="nx">buildingName</span><span class="p">);</span>
            <span class="p">}</span>
            <span class="c1">// 표시할 참고항목이 있을 경우, 괄호까지 추가한 최종 문자열을 만든다.</span>
            <span class="k">if</span><span class="p">(</span><span class="nx">extraRoadAddr</span> <span class="o">!==</span> <span class="dl">''</span><span class="p">){</span>
                <span class="nx">extraRoadAddr</span> <span class="o">=</span> <span class="dl">'</span><span class="s1"> (</span><span class="dl">'</span> <span class="o">+</span> <span class="nx">extraRoadAddr</span> <span class="o">+</span> <span class="dl">'</span><span class="s1">)</span><span class="dl">'</span><span class="p">;</span>
            <span class="p">}</span>

            <span class="c1">// 우편번호와 주소 정보를 해당 필드에 넣는다.</span>
            <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="dl">'</span><span class="s1">postalcode</span><span class="dl">'</span><span class="p">).</span><span class="nx">value</span> <span class="o">=</span> <span class="nx">data</span><span class="p">.</span><span class="nx">zonecode</span><span class="p">;</span>
            <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="dl">"</span><span class="s2">roadAddress</span><span class="dl">"</span><span class="p">).</span><span class="nx">value</span> <span class="o">=</span> <span class="nx">roadAddr</span><span class="p">;</span>
            <span class="c1">// document.getElementById("sample4_jibunAddress").value = data.jibunAddress;</span>
                
            <span class="c1">// 참고항목 문자열이 있을 경우 해당 필드에 넣는다.</span>
            <span class="cm">/*if(roadAddr !== ''){
                document.getElementById("sample4_extraAddress").value = extraRoadAddr;
            } else {
                document.getElementById("sample4_extraAddress").value = '';
            }*/</span>

            <span class="kd">var</span> <span class="nx">guideTextBox</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="dl">"</span><span class="s2">guide</span><span class="dl">"</span><span class="p">);</span>
            <span class="c1">// 사용자가 '선택 안함'을 클릭한 경우, 예상 주소라는 표시를 해준다.</span>
            <span class="k">if</span><span class="p">(</span><span class="nx">data</span><span class="p">.</span><span class="nx">autoRoadAddress</span><span class="p">)</span> <span class="p">{</span>
                <span class="kd">var</span> <span class="nx">expRoadAddr</span> <span class="o">=</span> <span class="nx">data</span><span class="p">.</span><span class="nx">autoRoadAddress</span> <span class="o">+</span> <span class="nx">extraRoadAddr</span><span class="p">;</span>
                <span class="nx">guideTextBox</span><span class="p">.</span><span class="nx">innerHTML</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">(예상 도로명 주소 : </span><span class="dl">'</span> <span class="o">+</span> <span class="nx">expRoadAddr</span> <span class="o">+</span> <span class="dl">'</span><span class="s1">)</span><span class="dl">'</span><span class="p">;</span>
                <span class="nx">guideTextBox</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">block</span><span class="dl">'</span><span class="p">;</span>

            <span class="p">}</span> <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">data</span><span class="p">.</span><span class="nx">autoJibunAddress</span><span class="p">)</span> <span class="p">{</span>
                <span class="kd">var</span> <span class="nx">expJibunAddr</span> <span class="o">=</span> <span class="nx">data</span><span class="p">.</span><span class="nx">autoJibunAddress</span><span class="p">;</span>
                <span class="nx">guideTextBox</span><span class="p">.</span><span class="nx">innerHTML</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">(예상 지번 주소 : </span><span class="dl">'</span> <span class="o">+</span> <span class="nx">expJibunAddr</span> <span class="o">+</span> <span class="dl">'</span><span class="s1">)</span><span class="dl">'</span><span class="p">;</span>
                <span class="nx">guideTextBox</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">block</span><span class="dl">'</span><span class="p">;</span>
            <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
                <span class="nx">guideTextBox</span><span class="p">.</span><span class="nx">innerHTML</span> <span class="o">=</span> <span class="dl">''</span><span class="p">;</span>
                <span class="nx">guideTextBox</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">none</span><span class="dl">'</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}).</span><span class="nx">open</span><span class="p">();</span>
<span class="p">}</span>
<span class="nt">&lt;/script&gt;</span> 
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">API</code> 안내 페이지에 나와 있는대로 추가하고 나에게 맞게 조금만 수정하니까 아주 쉽게 추가가 되었다.</li>
</ul>

<h2 id="memberjoinactionjava">MemberJoinAction.java</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.project.cafe.member.action</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.io.PrintWriter</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.sql.Date</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.sql.Timestamp</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Calendar</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletRequest</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletResponse</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">com.project.cafe.action.Action</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.project.cafe.action.ActionForward</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.project.cafe.member.db.MemberDAO</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.project.cafe.member.db.MemberDTO</span><span class="o">;</span>

<span class="c1">// 회원가입 처리동작 수행</span>
<span class="c1">// model 객체로 pro 페이지 역할을 한다.</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">MemberJoinAction</span> <span class="kd">implements</span> <span class="nc">Action</span>
<span class="o">{</span>
    <span class="kd">private</span> <span class="kt">int</span> <span class="nf">getAge</span><span class="o">(</span><span class="nc">String</span> <span class="n">birth</span><span class="o">)</span>
    <span class="o">{</span>
        <span class="kt">int</span> <span class="n">year</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">birth</span><span class="o">.</span><span class="na">split</span><span class="o">(</span><span class="s">"-"</span><span class="o">)[</span><span class="mi">0</span><span class="o">]);</span>
        <span class="kt">int</span> <span class="n">curYear</span> <span class="o">=</span> <span class="nc">Calendar</span><span class="o">.</span><span class="na">getInstance</span><span class="o">().</span><span class="na">get</span><span class="o">(</span><span class="nc">Calendar</span><span class="o">.</span><span class="na">YEAR</span><span class="o">);</span>
		
        <span class="k">return</span> <span class="n">curYear</span> <span class="o">-</span> <span class="n">year</span><span class="o">;</span>
    <span class="o">}</span>
	
    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="nc">ActionForward</span> <span class="nf">execute</span><span class="o">(</span><span class="nc">HttpServletRequest</span> <span class="n">request</span><span class="o">,</span> <span class="nc">HttpServletResponse</span> <span class="n">response</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">Exception</span> 
    <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"M : MemberJoinAction - execute() 호출"</span><span class="o">);</span>
		
        <span class="c1">// 한글처리</span>
        <span class="n">request</span><span class="o">.</span><span class="na">setCharacterEncoding</span><span class="o">(</span><span class="s">"UTF-8"</span><span class="o">);</span>
		
        <span class="c1">// 전달받은 파라미터 저장 (JSP 페이지가 아니므로 액션태그는 쓸 수 없고 setter를 이용해 저장한다)</span>
        <span class="nc">MemberDTO</span> <span class="n">dto</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">MemberDTO</span><span class="o">();</span>
        <span class="n">dto</span><span class="o">.</span><span class="na">setId</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"id"</span><span class="o">));</span>
        <span class="n">dto</span><span class="o">.</span><span class="na">setPass</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"pass"</span><span class="o">));</span>
        <span class="n">dto</span><span class="o">.</span><span class="na">setName</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"name"</span><span class="o">));</span>
        <span class="n">dto</span><span class="o">.</span><span class="na">setBirth</span><span class="o">(</span><span class="nc">Date</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"birth"</span><span class="o">)));</span>
        <span class="n">dto</span><span class="o">.</span><span class="na">setEmail</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"email"</span><span class="o">));</span>
        <span class="n">dto</span><span class="o">.</span><span class="na">setGender</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"gender"</span><span class="o">));</span>
		
        <span class="c1">// 입력받은 생년월일로 나이 계산</span>
        <span class="kt">int</span> <span class="n">age</span> <span class="o">=</span> <span class="n">getAge</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"birth"</span><span class="o">));</span>
        <span class="n">dto</span><span class="o">.</span><span class="na">setAge</span><span class="o">(</span><span class="n">age</span><span class="o">);</span>
		
        <span class="c1">// 우편번호 저장</span>
        <span class="n">dto</span><span class="o">.</span><span class="na">setPostalcode</span><span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"postalcode"</span><span class="o">)));</span>
		
        <span class="c1">// 주소 필드 합친 후 저장</span>
        <span class="nc">String</span> <span class="n">roadAddress</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"roadAddress"</span><span class="o">);</span>
        <span class="nc">String</span> <span class="n">detailAddress</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"detailAddress"</span><span class="o">);</span>
        <span class="n">dto</span><span class="o">.</span><span class="na">setAddress</span><span class="o">(</span><span class="n">roadAddress</span> <span class="o">+</span> <span class="s">" "</span> <span class="o">+</span> <span class="n">detailAddress</span><span class="o">);</span>
		
        <span class="c1">// 폰번호 3개 필드 합친 후 저장</span>
        <span class="nc">StringBuilder</span> <span class="n">sb</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringBuilder</span><span class="o">();</span>
        <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"phone1"</span><span class="o">));</span>
        <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"phone2"</span><span class="o">));</span>
        <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"phone3"</span><span class="o">));</span>
        <span class="n">dto</span><span class="o">.</span><span class="na">setPhone</span><span class="o">(</span><span class="n">sb</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
		
        <span class="c1">// 날짜 정보 추가 저장</span>
        <span class="n">dto</span><span class="o">.</span><span class="na">setRegdate</span><span class="o">(</span><span class="k">new</span> <span class="nc">Timestamp</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">()));</span>
		
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"M : 전달된 회원 정보 저장"</span><span class="o">);</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"M : "</span> <span class="o">+</span> <span class="n">dto</span><span class="o">);</span>
		
        <span class="c1">// DAO 객체 생성</span>
        <span class="nc">MemberDAO</span> <span class="n">dao</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">MemberDAO</span><span class="o">();</span>
		
        <span class="c1">// 회원가입 메서드 호출</span>
        <span class="n">dao</span><span class="o">.</span><span class="na">insertMember</span><span class="o">(</span><span class="n">dto</span><span class="o">);</span>
		
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"M : 회원가입 완료"</span><span class="o">);</span>
		
        <span class="c1">// 페이지 이동 (로그인 페이지로 - ./login.me)		</span>
        <span class="n">response</span><span class="o">.</span><span class="na">setContentType</span><span class="o">(</span><span class="s">"text/html; charset=utf-8"</span><span class="o">);</span>
        <span class="nc">PrintWriter</span> <span class="n">out</span> <span class="o">=</span> <span class="n">response</span><span class="o">.</span><span class="na">getWriter</span><span class="o">();</span>
        <span class="n">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="s">"&lt;script&gt;"</span><span class="o">);</span>
        <span class="n">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="s">"alert('회원가입이 완료되었습니다!');"</span><span class="o">);</span>
        <span class="n">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="s">"location.href='./login.me';"</span><span class="o">);</span>
        <span class="n">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="s">"&lt;/script&gt;"</span><span class="o">);</span>
		
        <span class="n">out</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
		
        <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>우편번호 필드가 추가되었기 때문에 회원가입처리를 하는 부분도 수정해 주었다.</li>
  <li><code class="language-plaintext highlighter-rouge">DB</code> 테이블에 우편번호를 저장할 컬럼도 추가해 주었다.<br /><br /><br /></li>
</ul>

<h1 id="마감까지">마감까지</h1>
<ul>
  <li><code class="language-plaintext highlighter-rouge">D-5</code></li>
</ul>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="Project Log" /><category term="Project" /><category term="Cafe" /><category term="Log" /><summary type="html"><![CDATA[개발환경 MacBook Air (M1, 2020) OpenJDK 8 Eclipse 2021-12 tomcat 8.5 MySQL Workbench 8.0.19]]></summary></entry><entry><title type="html">Python) 이것이 취업을 위한 코딩테스트다 04 실전문제 3. 게임 개발</title><link href="http://localhost:4000/boj/CodingTestBook-04-h4-py/" rel="alternate" type="text/html" title="Python) 이것이 취업을 위한 코딩테스트다 04 실전문제 3. 게임 개발" /><published>2022-03-28T00:00:00+09:00</published><updated>2022-03-28T00:00:00+09:00</updated><id>http://localhost:4000/boj/CodingTestBook-04-h4-py</id><content type="html" xml:base="http://localhost:4000/boj/CodingTestBook-04-h4-py/"><![CDATA[<h1 id="문제-출처">문제 출처</h1>
<hr />

<ul>
  <li>이것이 취업을 위한 코딩테스트다 with 파이썬</li>
  <li>Chapter 04 - 실전문제 3. 게임 개발<br /><br /></li>
</ul>

<h1 id="제한">제한</h1>
<hr />

<ul>
  <li>시간 제한 : 1 초</li>
  <li>메모리 제한 : 128 MB<br /><br /></li>
</ul>

<h1 id="문제">문제</h1>
<hr />

<ul>
  <li>현민이는 게임 캐릭터가 맵 안에서 움직이는 시스템을 개발 중이다. 캐릭터가 있는 장소는 1 X 1 크기의 정사각형으로 이뤄진 N X M 크기의 직사각형으로, 각각의 칸은 육지 또는 바다이다. 캐릭터는 동서남북 중 한 곳을 바라본다.</li>
  <li>맵의 각 칸은 (A, B)로 나타낼 수 있고, A는 북쪽으로부터 떨어진 칸의 개수, B는 서쪽으로부터 떨어진 칸의 개수이다. 캐릭터는 상하좌우로 움직일 수 있고, 바다로 되어 있는 공간에는 갈 수 없다. 캐릭터의 움직임을 설정하기 위해 정해 놓은 매뉴얼은 이러하다.</li>
</ul>

<ol>
  <li>현재 위치에서 현재 방향을 기준으로 왼쪽 방향(반시계 방향으로 90도 회전한 방향)부터 차례대로 갈 곳을 정한다.</li>
  <li>캐릭터의 바로 왼쪽 방향에 아직 가보지 않은 곳이 존재한다면, 왼쪽 방향으로 회전한 다음 왼쪽으로 한 칸을 전진한다. 왼쪽 방향에 가보지 않은 칸이 있다면, 왼쪽 방향으로 회전만 수행하고 1단계로 돌아간다.</li>
  <li>만약 네 방향 모두 이미 가본 칸이거나 바다로 되어 있는 경우에는, 바라보는 방향을 유지한 채로 한 칸 뒤로 가고 1단계로 돌아간다. 단, 이때 뒤쪽 방향이 바다인 칸이라 뒤로 갈 수 없는 경우에는 움직임을 멈춘다.</li>
</ol>

<ul>
  <li>현민이는 위 과정을 반복적으로 수행하면서 캐릭터의 움직임에 이상이 있는지 테스트하려고 한다. 매뉴얼에 따라 캐릭터를 이동시킨 뒤에, 캐릭터가 방문한 칸의 수를 출력하는 프로그램을 만드시오.<br /><br /></li>
</ul>

<h1 id="입력">입력</h1>
<hr />

<ul>
  <li>첫째 줄에 맵의 세로 크기 N과 가로 크기 M을 공백으로 구분하여 입력한다. (3 &lt;= N, M &lt;= 50)</li>
  <li>둘째 줄에 게임 캐릭터가 있는 칸의 좌표 (A, B)와 바라보는 방향 d가 각각 서로 공백으로 구분하여 주어진다. 방향 d의 값으로는 다음과 같이 4가지가 존재한다.
    <ul>
      <li>0 : 북쪽</li>
      <li>1 : 동쪽</li>
      <li>2 : 남쪽</li>
      <li>3 : 서쪽</li>
    </ul>
  </li>
  <li>셋째 줄부터 맵이 육지인지 바다인지에 대한 정보가 주어진다. N개의 줄에 맵의 상태가 북쪽부터 남쪽 순서대로, 각 줄의 데이터는 서쪽부터 동쪽 순서대로 주어진다. 맵의 외곽은 항상 바다로 되어 있다.
    <ul>
      <li>0 : 육지</li>
      <li>1 : 바다</li>
    </ul>
  </li>
  <li>처음에 게임 캐릭터가 위치한 칸의 상태는 항상 육지이다.<br /><br /></li>
</ul>

<h1 id="출력">출력</h1>
<hr />

<ul>
  <li>첫째 줄에 이동을 마친 후 캐릭터가 방문한 칸의 수를 출력한다.<br /><br /><br /></li>
</ul>

<h1 id="-풀이">👀 풀이</h1>
<hr />

<ul>
  <li>캐릭터가 이동하기 전에 왼쪽으로 회전시킨 다음 이동할 수 있는 위치가 바다가 아니거나 아직 방문하지 않은 곳이라면 이동시킨다. (방문표시 배열 필요)</li>
  <li>이동할 수 없다면 회전 횟수를 증가시킨다. 회전 횟수가 4가 되면 4방향 다 돌았는데도 이동할 수 있는 곳이 없었던 것이다.</li>
  <li>4방향 다 이동할 수 없다면 뒤로 한 칸 이동시키는데, 만약 뒤에도 바다가 있어서 이동할 수 없다면 이동을 중단한다.<br /><br /></li>
</ul>

<h1 id="코드">코드</h1>
<hr />

<script src="https://gist.github.com/miro7923/1abe9f07235485a3c96a9a8e347df8f5.js"></script>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="BOJ" /><category term="Algorithm" /><category term="Implementation" /><category term="Python" /><summary type="html"><![CDATA[문제 출처 이것이 취업을 위한 코딩테스트다 with 파이썬 Chapter 04 - 실전문제 3. 게임 개발 제한 시간 제한 : 1 초 메모리 제한 : 128 MB]]></summary></entry><entry><title type="html">프로젝트) Cafe(웹 사이트) 만들기 17 - 메인 화면에서 최신글 미리보기 기능 추가</title><link href="http://localhost:4000/project%20log/cafe-project-17/" rel="alternate" type="text/html" title="프로젝트) Cafe(웹 사이트) 만들기 17 - 메인 화면에서 최신글 미리보기 기능 추가" /><published>2022-03-28T00:00:00+09:00</published><updated>2022-03-28T00:00:00+09:00</updated><id>http://localhost:4000/project%20log/cafe-project-17</id><content type="html" xml:base="http://localhost:4000/project%20log/cafe-project-17/"><![CDATA[<h1 id="개발환경">개발환경</h1>
<ul>
  <li>MacBook Air (M1, 2020)</li>
  <li>OpenJDK 8</li>
  <li>Eclipse 2021-12</li>
  <li>tomcat 8.5</li>
  <li>MySQL Workbench 8.0.19<br /><br /><br /></li>
</ul>

<h1 id="시작">시작</h1>
<ul>
  <li>2022.3.4 ~ <br /><br /><br /></li>
</ul>

<h1 id="주제">주제</h1>
<ul>
  <li>웹 백엔드 수업 중 중간 과제로 개인 프로젝트를 진행하게 되었다.</li>
  <li>회원가입/로그인/탈퇴 등 기본적인 회원관리 시스템을 가진 웹 사이트를 만드는 것이다. 주어진 기한은 <code class="language-plaintext highlighter-rouge">한 달</code></li>
  <li>나는 <code class="language-plaintext highlighter-rouge">다음 카페</code>를 소규모로 만들어 보기로 했다. 평소 자주 이용하기도 했고 과제의 평가 기준에서 요구하는 기능들을 다 담고 있기도 했기 때문에 이번 기회에 구현해 보면 그동안 배운 것들을 활용하기에 좋을 거 같았다.</li>
  <li>평가 기준에 사이트의 디자인 구현(HTML/CSS 등 프론트엔드)은 포함되지 않기 때문에 본인이 쓰고 싶은 HTML/CSS 템플릿을 구한 뒤 회원 관리 기능을 구현하면 된다.<br /><br /><br /></li>
</ul>

<h1 id="진행상황">진행상황</h1>
<ul>
  <li>원래는 파일 업로드 기능을 만들려고 했으나 수업 진도가 생각보다 늦어져서 다른 기능을 먼저 추가하기로 했다.</li>
  <li>오늘은 <code class="language-plaintext highlighter-rouge">ajax</code>를 이용해 비동기 방식으로 메인 페이지에서 최신글 몇 개를 미리 볼 수 있는 기능을 만들었다.</li>
</ul>

<p align="center"><img src="../../assets/images/newFeeds.png" /></p>

<h2 id="mainjsp">main.jsp</h2>

<div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!-- Start Head --&gt;</span>
  <span class="nt">&lt;jsp:include </span><span class="na">page=</span><span class="s">"../inc/top.jsp"</span><span class="nt">&gt;&lt;/jsp:include&gt;</span>
  <span class="nt">&lt;script </span><span class="na">src=</span><span class="s">"${pageContext.request.contextPath }/js/main.js"</span><span class="nt">&gt;&lt;/script&gt;</span>
<span class="c">&lt;!-- End Head --&gt;</span>

<span class="nt">&lt;section</span> <span class="na">data-theme=</span><span class="s">"_bgp"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;div</span> <span class="na">data-layout=</span><span class="s">"_r"</span> <span class="na">class=</span><span class="s">"MOD_ARTICLEBLOCKS1"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">data-layout=</span><span class="s">"al16 ec8"</span> <span class="na">class=</span><span class="s">"MOD_ARTICLEBLOCKS1_Cont"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;h2&gt;</span>최신글<span class="nt">&lt;/h2&gt;</span>
      <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">""</span> <span class="na">class=</span><span class="s">"MOD_ARTICLEBLOCKS1_BlockLarge"</span> <span class="na">id=</span><span class="s">"mainHref1"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;div</span> <span class="na">style=</span><span class="s">"background-image:url(https://s3-us-west-2.amazonaws.com/s.cdpn.io/96252/aperitif-large-object1-luca-bravo.jpg)"</span> <span class="na">class=</span><span class="s">"MOD_ARTICLEBLOCKS1_Img"</span> <span class="na">role=</span><span class="s">"img"</span> <span class="na">aria-label=</span><span class="s">"alt text"</span><span class="nt">&gt;&lt;/div&gt;</span>
        <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"MOD_ARTICLEBLOCKS1_Txt"</span><span class="nt">&gt;</span>
          <span class="nt">&lt;h3</span> <span class="na">class=</span><span class="s">"MOD_ARTICLEBLOCKS1_Title"</span> <span class="na">id=</span><span class="s">"mainTitle1"</span><span class="nt">&gt;</span>Article Title<span class="nt">&lt;/h3&gt;</span>
          <span class="nt">&lt;p</span> <span class="na">class=</span><span class="s">"MOD_ARTICLEBLOCKS1_Category"</span> <span class="na">id=</span><span class="s">"mainContent1"</span><span class="nt">&gt;</span>Category<span class="nt">&lt;/p&gt;</span>
        <span class="nt">&lt;/div&gt;</span>
      <span class="nt">&lt;/a&gt;</span>
    <span class="nt">&lt;/div&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">data-layout=</span><span class="s">"al16 ch8 ec4"</span> <span class="na">class=</span><span class="s">"MOD_ARTICLEBLOCKS1_Cont"</span><span class="nt">&gt;</span>
      <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">""</span> <span class="na">class=</span><span class="s">"MOD_ARTICLEBLOCKS1_BlockSmall"</span> <span class="na">id=</span><span class="s">"mainHref2"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;div</span> <span class="na">style=</span><span class="s">"background-image:url(https://s3-us-west-2.amazonaws.com/s.cdpn.io/96252/aperitif-large-object1-luca-bravo.jpg)"</span> <span class="na">class=</span><span class="s">"MOD_ARTICLEBLOCKS1_Img"</span> <span class="na">role=</span><span class="s">"img"</span> <span class="na">aria-label=</span><span class="s">"alt text"</span><span class="nt">&gt;&lt;/div&gt;</span>

        <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"MOD_ARTICLEBLOCKS1_Txt"</span><span class="nt">&gt;</span>
          <span class="nt">&lt;h3</span> <span class="na">class=</span><span class="s">"MOD_ARTICLEBLOCKS1_Title"</span> <span class="na">id=</span><span class="s">"mainTitle2"</span><span class="nt">&gt;</span>Article Title<span class="nt">&lt;/h3&gt;</span>
          <span class="nt">&lt;p</span> <span class="na">class=</span><span class="s">"MOD_ARTICLEBLOCKS1_Category"</span> <span class="na">id=</span><span class="s">"mainContent2"</span><span class="nt">&gt;</span>Category<span class="nt">&lt;/p&gt;</span>
        <span class="nt">&lt;/div&gt;</span>
      <span class="nt">&lt;/a&gt;</span>
    <span class="nt">&lt;/div&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">data-layout=</span><span class="s">"al16 ch8 ec4"</span> <span class="na">class=</span><span class="s">"MOD_ARTICLEBLOCKS1_Cont"</span><span class="nt">&gt;</span>
      <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">""</span> <span class="na">class=</span><span class="s">"MOD_ARTICLEBLOCKS1_BlockSmall"</span> <span class="na">id=</span><span class="s">"mainHref3"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;div</span> <span class="na">style=</span><span class="s">"background-image:url(https://s3-us-west-2.amazonaws.com/s.cdpn.io/96252/aperitif-large-object1-luca-bravo.jpg)"</span> <span class="na">class=</span><span class="s">"MOD_ARTICLEBLOCKS1_Img"</span> <span class="na">role=</span><span class="s">"img"</span> <span class="na">aria-label=</span><span class="s">"alt text"</span><span class="nt">&gt;&lt;/div&gt;</span>

        <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"MOD_ARTICLEBLOCKS1_Txt"</span><span class="nt">&gt;</span>
          <span class="nt">&lt;h3</span> <span class="na">class=</span><span class="s">"MOD_ARTICLEBLOCKS1_Title"</span> <span class="na">id=</span><span class="s">"mainTitle3"</span><span class="nt">&gt;</span>Article Title<span class="nt">&lt;/h3&gt;</span>
          <span class="nt">&lt;p</span> <span class="na">class=</span><span class="s">"MOD_ARTICLEBLOCKS1_Category"</span> <span class="na">id=</span><span class="s">"mainContent3"</span><span class="nt">&gt;</span>Category<span class="nt">&lt;/p&gt;</span>
        <span class="nt">&lt;/div&gt;</span>
      <span class="nt">&lt;/a&gt;</span>
    <span class="nt">&lt;/div&gt;</span>
  <span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/section&gt;</span>
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">Article Title</code>과 <code class="language-plaintext highlighter-rouge">Category</code> 부분에 각각 글 제목과 내용 일부를 출력할 것이다.</li>
  <li>직접 만든 것은 아니고 다운 받은 템플릿을 약간 변형해서 만들었다.</li>
</ul>

<h2 id="mainjs">main.js</h2>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">$</span><span class="p">(</span><span class="nb">document</span><span class="p">).</span><span class="nx">ready</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span>
<span class="p">{</span>
    <span class="nx">getFeeds</span><span class="p">();</span>
<span class="p">});</span>

<span class="kd">function</span> <span class="nx">getFeeds</span><span class="p">()</span>
<span class="p">{</span>
    <span class="nx">$</span><span class="p">.</span><span class="nx">ajax</span><span class="p">({</span>
        <span class="na">type</span><span class="p">:</span> <span class="dl">'</span><span class="s1">POST</span><span class="dl">'</span><span class="p">,</span>
        <span class="na">async</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
        <span class="na">url</span><span class="p">:</span> <span class="dl">'</span><span class="s1">./GetFeed.bo</span><span class="dl">'</span><span class="p">,</span>
        <span class="na">dataType</span><span class="p">:</span> <span class="dl">'</span><span class="s1">json</span><span class="dl">'</span><span class="p">,</span>
        <span class="na">data</span><span class="p">:</span> <span class="p">{</span>
            <span class="dl">'</span><span class="s1">cnt</span><span class="dl">'</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span>
            <span class="dl">'</span><span class="s1">len</span><span class="dl">'</span><span class="p">:</span> <span class="mi">70</span>
        <span class="p">},</span>
        <span class="na">success</span><span class="p">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">data</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">if</span> <span class="p">(</span><span class="nx">data</span> <span class="o">!=</span> <span class="kc">null</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">data</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span>
                <span class="p">{</span>
                    <span class="kd">var</span> <span class="nx">titleId</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">#mainTitle</span><span class="dl">'</span><span class="p">;</span>
                    <span class="nx">titleId</span> <span class="o">+=</span> <span class="p">(</span><span class="nx">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">);</span>
                    <span class="nx">$</span><span class="p">(</span><span class="nx">titleId</span><span class="p">).</span><span class="nx">html</span><span class="p">(</span><span class="nx">data</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">title</span><span class="p">);</span>

                    <span class="kd">var</span> <span class="nx">contentId</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">#mainContent</span><span class="dl">'</span><span class="p">;</span>
                    <span class="nx">contentId</span> <span class="o">+=</span> <span class="p">(</span><span class="nx">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">);</span>
                    <span class="nx">$</span><span class="p">(</span><span class="nx">contentId</span><span class="p">).</span><span class="nx">html</span><span class="p">(</span><span class="nx">data</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">content</span><span class="p">);</span>

                    <span class="kd">var</span> <span class="nx">hrefId</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">#mainHref</span><span class="dl">'</span><span class="p">;</span>
                    <span class="nx">hrefId</span> <span class="o">+=</span> <span class="p">(</span><span class="nx">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">);</span>
                    <span class="nx">$</span><span class="p">(</span><span class="nx">hrefId</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="dl">'</span><span class="s1">href</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">./BoardContent.bo?num=</span><span class="dl">'</span><span class="o">+</span><span class="nx">data</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">num</span><span class="o">+</span><span class="dl">'</span><span class="s1">&amp;pageNum=1</span><span class="dl">'</span><span class="p">);</span>
                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">});</span>
<span class="p">}</span>
</code></pre></div></div>

<ul>
  <li>메인 화면이 로드되었을 때 다른 페이지 이동 없이 보여져야 하니까 <code class="language-plaintext highlighter-rouge">ajax</code>를 이용해 비동기 방식으로 보여줄 것이다.</li>
  <li>최대 <code class="language-plaintext highlighter-rouge">cnt</code>의 수만큼 게시물을 가져오되 내용물은 <code class="language-plaintext highlighter-rouge">len</code> 길이만큼만 가져오도록 했다.</li>
  <li>태그의 아이디는 맨 뒤에 숫자만 바껴서 <code class="language-plaintext highlighter-rouge">i</code> 값에 따라 변경되도록 했다.</li>
  <li>각 게시물마다 다른 글번호를 가진 페이지로 연결되어야 하기 때문에 게시글 하나를 불러올 때마다 해당 게시글의 <code class="language-plaintext highlighter-rouge">a</code> 태그의 <code class="language-plaintext highlighter-rouge">href</code>를 바꿔주었다.</li>
  <li>최신글 3개만 보여주기 때문에 페이지 번호는 1번으로 고정한다.</li>
</ul>

<h2 id="boardfrontcontrollerjava">BoardFrontController.java</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.project.cafe.board.action</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.servlet.RequestDispatcher</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.ServletException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServlet</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletRequest</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletResponse</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">com.project.cafe.action.Action</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.project.cafe.action.ActionForward</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">BoardFrontController</span> <span class="kd">extends</span> <span class="nc">HttpServlet</span>
<span class="o">{</span>
    <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">doProcess</span><span class="o">(</span><span class="nc">HttpServletRequest</span> <span class="n">request</span><span class="o">,</span> <span class="nc">HttpServletResponse</span> <span class="n">response</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">ServletException</span><span class="o">,</span> <span class="nc">IOException</span> 
    <span class="o">{</span>
        <span class="c1">// 1. 전달되는 가상주소 계산</span>
        <span class="c1">// .. 생략</span>
		
        <span class="c1">// 2. 가상주소 매핑</span>
        <span class="nc">Action</span> <span class="n">action</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
        <span class="nc">ActionForward</span> <span class="n">forward</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
		
        <span class="c1">// .. 생략</span>
        <span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="n">command</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"/GetFeed.bo"</span><span class="o">))</span>
        <span class="o">{</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"C : /GetFeed.bo 호출"</span><span class="o">);</span>
			
            <span class="n">action</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">GetFeed</span><span class="o">();</span>
			
            <span class="k">try</span> <span class="o">{</span>
                <span class="n">forward</span> <span class="o">=</span> <span class="n">action</span><span class="o">.</span><span class="na">execute</span><span class="o">(</span><span class="n">request</span><span class="o">,</span> <span class="n">response</span><span class="o">);</span>
            <span class="o">}</span>
            <span class="k">catch</span> <span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
            <span class="o">}</span>
        <span class="o">}</span>
		
        <span class="c1">// 3. 페이지 이동</span>
        <span class="c1">// .. 생략</span>
	<span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">컨트롤러</code>에서 <code class="language-plaintext highlighter-rouge">DB</code>에 접속해서 작업을 수행할 서블릿과 연결한다.</li>
</ul>

<h2 id="getfeedjava">GetFeed.java</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.project.cafe.board.action</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletRequest</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletResponse</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">org.json.simple.JSONArray</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.json.simple.JSONObject</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">com.project.cafe.action.Action</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.project.cafe.action.ActionForward</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.project.cafe.board.db.BoardDAO</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.project.cafe.board.db.BoardDTO</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">GetFeed</span> <span class="kd">implements</span> <span class="nc">Action</span> 
<span class="o">{</span>
    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="nc">ActionForward</span> <span class="nf">execute</span><span class="o">(</span><span class="nc">HttpServletRequest</span> <span class="n">request</span><span class="o">,</span> <span class="nc">HttpServletResponse</span> <span class="n">response</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">Exception</span> 
    <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"ajax 시작_GetFeed - execute() 호출"</span><span class="o">);</span>
		
        <span class="nc">BoardDAO</span> <span class="n">dao</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BoardDAO</span><span class="o">();</span>
        <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">BoardDTO</span><span class="o">&gt;</span> <span class="n">list</span> <span class="o">=</span> <span class="n">dao</span><span class="o">.</span><span class="na">getPosts</span>
                <span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"cnt"</span><span class="o">)),</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"len"</span><span class="o">)));</span>
		
        <span class="c1">// DB에서 가져온 데이터들을 json에 저장</span>
        <span class="nc">JSONArray</span> <span class="n">feedList</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">JSONArray</span><span class="o">();</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">list</span><span class="o">.</span><span class="na">size</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span>
        <span class="o">{</span>
            <span class="nc">JSONObject</span> <span class="n">feed</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">JSONObject</span><span class="o">();</span>
            <span class="n">feed</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"num"</span><span class="o">,</span> <span class="n">list</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">).</span><span class="na">getNum</span><span class="o">());</span>
            <span class="n">feed</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"title"</span><span class="o">,</span> <span class="n">list</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">).</span><span class="na">getTitle</span><span class="o">());</span>
            <span class="n">feed</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"content"</span><span class="o">,</span> <span class="n">list</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">).</span><span class="na">getContent</span><span class="o">());</span>
			
            <span class="n">feedList</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">feed</span><span class="o">);</span>
        <span class="o">}</span>
		
        <span class="c1">// 클라이언트에게 데이터 보내기</span>
        <span class="c1">// 한글처리</span>
        <span class="n">response</span><span class="o">.</span><span class="na">setCharacterEncoding</span><span class="o">(</span><span class="s">"UTF-8"</span><span class="o">);</span>
        <span class="c1">// json 데이터 넘김</span>
        <span class="n">response</span><span class="o">.</span><span class="na">getWriter</span><span class="o">().</span><span class="na">print</span><span class="o">(</span><span class="n">feedList</span><span class="o">.</span><span class="na">toJSONString</span><span class="o">());</span>
        <span class="n">response</span><span class="o">.</span><span class="na">getWriter</span><span class="o">().</span><span class="na">close</span><span class="o">();</span>
		
        <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>서블릿으로 연결해서 게시글들을 가져온다.</li>
  <li>데이터는 <code class="language-plaintext highlighter-rouge">json</code>에 담아서 보낸다.</li>
</ul>

<h2 id="boarddao---getpostscnt-len">BoardDAO - getPosts(cnt, len)</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">BoardDTO</span><span class="o">&gt;</span> <span class="nf">getPosts</span><span class="o">(</span><span class="kt">int</span> <span class="n">cnt</span><span class="o">,</span> <span class="kt">int</span> <span class="n">len</span><span class="o">)</span>
<span class="o">{</span>
    <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">BoardDTO</span><span class="o">&gt;</span> <span class="n">list</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">BoardDTO</span><span class="o">&gt;();</span>
		
    <span class="k">try</span> <span class="o">{</span>
        <span class="n">con</span> <span class="o">=</span> <span class="n">getCon</span><span class="o">();</span>
			
        <span class="n">sql</span> <span class="o">=</span> <span class="s">"select title, content from cafe_board order by num desc limit ?"</span><span class="o">;</span>
        <span class="n">pstmt</span> <span class="o">=</span> <span class="n">con</span><span class="o">.</span><span class="na">prepareStatement</span><span class="o">(</span><span class="n">sql</span><span class="o">);</span>
			
        <span class="n">pstmt</span><span class="o">.</span><span class="na">setInt</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="n">cnt</span><span class="o">);</span>
			
        <span class="n">rs</span> <span class="o">=</span> <span class="n">pstmt</span><span class="o">.</span><span class="na">executeQuery</span><span class="o">();</span>
			
        <span class="k">while</span> <span class="o">(</span><span class="n">rs</span><span class="o">.</span><span class="na">next</span><span class="o">())</span>
        <span class="o">{</span>
            <span class="nc">BoardDTO</span> <span class="n">dto</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BoardDTO</span><span class="o">();</span>
            <span class="n">dto</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="n">rs</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="s">"title"</span><span class="o">));</span>
				
            <span class="c1">// 문자열 일부만 저장</span>
            <span class="nc">String</span> <span class="n">content</span> <span class="o">=</span> <span class="n">rs</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="s">"content"</span><span class="o">);</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">len</span> <span class="o">&gt;</span> <span class="n">content</span><span class="o">.</span><span class="na">length</span><span class="o">())</span>
                <span class="n">content</span> <span class="o">=</span> <span class="n">content</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="n">content</span><span class="o">.</span><span class="na">length</span><span class="o">()</span> <span class="o">-</span> <span class="mi">1</span><span class="o">);</span>
            <span class="k">else</span>
            <span class="o">{</span>
                <span class="n">content</span> <span class="o">=</span> <span class="n">content</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="n">len</span><span class="o">);</span>
                <span class="n">content</span> <span class="o">=</span> <span class="n">content</span><span class="o">.</span><span class="na">concat</span><span class="o">(</span><span class="s">"..."</span><span class="o">);</span>
            <span class="o">}</span>
				
            <span class="n">dto</span><span class="o">.</span><span class="na">setContent</span><span class="o">(</span><span class="n">content</span><span class="o">);</span>
				
            <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">dto</span><span class="o">);</span>
        <span class="o">}</span>
			
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"DAO : 글 "</span><span class="o">+</span><span class="n">list</span><span class="o">.</span><span class="na">size</span><span class="o">()+</span><span class="s">"개 저장 완료"</span><span class="o">);</span>
    <span class="o">}</span>
    <span class="k">catch</span> <span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
    <span class="o">}</span>
    <span class="k">finally</span> <span class="o">{</span>
        <span class="n">closeDB</span><span class="o">();</span>
    <span class="o">}</span>
		
    <span class="k">return</span> <span class="n">list</span><span class="o">;</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>네이버 블로그 메인 페이지의 <code class="language-plaintext highlighter-rouge">html</code> 소스를 보니까 각 포스트별 미리보기 창에서 텍스트 자체는 일정 글자수 만큼만 출력하고 이상은 … 이 붙은 형태로 되어 있어서 이렇게 구현해 보았다.</li>
  <li>일단 구현한 후 학원 선생님한테 여쭤보니까 이런 방식으로 구현하면 된다고 하셔서 이대로 고정하기로 했다. 😄<br /><br /><br /></li>
</ul>

<h1 id="마감까지">마감까지</h1>
<ul>
  <li><code class="language-plaintext highlighter-rouge">D-7</code></li>
</ul>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="Project Log" /><category term="Project" /><category term="Cafe" /><category term="Log" /><summary type="html"><![CDATA[개발환경 MacBook Air (M1, 2020) OpenJDK 8 Eclipse 2021-12 tomcat 8.5 MySQL Workbench 8.0.19]]></summary></entry><entry><title type="html">컴퓨터 네트워크) REST</title><link href="http://localhost:4000/computer%20network/computer-network-restful/" rel="alternate" type="text/html" title="컴퓨터 네트워크) REST" /><published>2022-03-27T00:00:00+09:00</published><updated>2022-03-27T00:00:00+09:00</updated><id>http://localhost:4000/computer%20network/computer-network-restful</id><content type="html" xml:base="http://localhost:4000/computer%20network/computer-network-restful/"><![CDATA[<h1 id="-rest">👀 REST?</h1>
<ul>
  <li>서버가 클라이언트의 상태 정보를 가지고 있지 않는 것</li>
  <li><code class="language-plaintext highlighter-rouge">HTTP</code>를 통한 서버 클라이언트 모델에서 서버가 클라이언트의 위치와 같은 현재 상태를 유지하는 정보를 가지고 있으면 오버헤드가 크다.</li>
  <li>그래서 클라이언트의 상태 정보를 서버에 저장하지 않고 서버와 클라이언트 간에 주고받는 <code class="language-plaintext highlighter-rouge">HTTP</code> 메세지 안에 클라이언트의 상태 정보를 담고 그것을 해석할 수 있는 방법까지 담는다.</li>
  <li>서버는 특정 클라이언트에 대한 정보를 저장하고 있지 않아도 <code class="language-plaintext highlighter-rouge">HTTP request</code> 메세지만 보고 클라이언트의 상태를 알 수 있고 클라이언트는 <code class="language-plaintext highlighter-rouge">HTTP response</code> 메세지를 받으면 어떤 방식으로 메세지를 가져와야 할 지 알 수 있다.</li>
  <li>이런 아키텍처를 따르는 서비스를 <code class="language-plaintext highlighter-rouge">RESTful</code>이라 한다.<br /><br /></li>
</ul>

<h1 id="rest-요구사항">REST 요구사항</h1>
<ul>
  <li><code class="language-plaintext highlighter-rouge">클라이언트-서버</code> 구조로 이루어져야 한다.</li>
  <li><code class="language-plaintext highlighter-rouge">HTTP</code> 메세지 안에 모든 정보가 들어있어야 한다. (다른 데이터 스토리지 사용 X)</li>
  <li>서버의 response가 클라이언트 쪽 또는 어떤 웹 캐시에 저장할 수 있어야 한다.</li>
  <li>클라이언트가 웹 서버에 바로 연결되었든 다른 중간 지점을 거쳐서 연결이 되었든 클라이언트 입장에서는 서비스를 받는 데에 차이가 없어야 한다.</li>
  <li>자바스크립트와 같이 어떤 코드가 클라이언트 기기에 다운로드 되었을 때 클라이언트 기기에 그 코드를 해석할 수 있는 방법이 없어도 그것을 실행할 수 있게 해 주는 응용프로그램을 전달해야 한다.</li>
  <li>특정한 컴퓨터 아키텍처에 상관없이 어디서든 실행할 수 있어야 한다.<br /><br /><br /></li>
</ul>

<h1 id="출처">출처</h1>
<ul>
  <li><a href="http://www.kmooc.kr/courses/course-v1:PNUk+CN_C01+2021_KM_013/video">컴퓨터 네트워킹 - 부산대학교 K-MOOC 공개강의</a></li>
</ul>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="Computer Network" /><category term="CS" /><category term="Network" /><category term="Application" /><summary type="html"><![CDATA[👀 REST? 서버가 클라이언트의 상태 정보를 가지고 있지 않는 것 HTTP를 통한 서버 클라이언트 모델에서 서버가 클라이언트의 위치와 같은 현재 상태를 유지하는 정보를 가지고 있으면 오버헤드가 크다. 그래서 클라이언트의 상태 정보를 서버에 저장하지 않고 서버와 클라이언트 간에 주고받는 HTTP 메세지 안에 클라이언트의 상태 정보를 담고 그것을 해석할 수 있는 방법까지 담는다. 서버는 특정 클라이언트에 대한 정보를 저장하고 있지 않아도 HTTP request 메세지만 보고 클라이언트의 상태를 알 수 있고 클라이언트는 HTTP response 메세지를 받으면 어떤 방식으로 메세지를 가져와야 할 지 알 수 있다. 이런 아키텍처를 따르는 서비스를 RESTful이라 한다.]]></summary></entry><entry><title type="html">Python) 이것이 취업을 위한 코딩테스트다 04 실전문제 2. 왕실의 나이트</title><link href="http://localhost:4000/boj/CodingTestBook-04-h3-py/" rel="alternate" type="text/html" title="Python) 이것이 취업을 위한 코딩테스트다 04 실전문제 2. 왕실의 나이트" /><published>2022-03-27T00:00:00+09:00</published><updated>2022-03-27T00:00:00+09:00</updated><id>http://localhost:4000/boj/CodingTestBook-04-h3-py</id><content type="html" xml:base="http://localhost:4000/boj/CodingTestBook-04-h3-py/"><![CDATA[<h1 id="문제-출처">문제 출처</h1>
<hr />

<ul>
  <li>이것이 취업을 위한 코딩테스트다 with 파이썬</li>
  <li>Chapter 04 - 실전문제 2. 왕실의 나이트<br /><br /></li>
</ul>

<h1 id="제한">제한</h1>
<hr />

<ul>
  <li>시간 제한 : 1 초</li>
  <li>메모리 제한 : 128 MB<br /><br /></li>
</ul>

<h1 id="문제">문제</h1>
<hr />

<ul>
  <li>행복 왕국의 왕실 정원은 체스판과 같은 8 X 8 좌표 평면이다. 왕실 정원의 특정한 한 칸에 나이트가 서 있다. 나이트는 매우 충성스러운 신하로서 매일 무술을 연마한다.</li>
  <li>나이트는 말을 타고 있기 때문에 이동을 할 때는 L자 형태로만 이동할 수 있으며 정원 밖으로는 나갈 수 없다. 나이트는 특정한 위치에서 다음과 같은 2가지 경우로 이동할 수 있다.</li>
</ul>

<ol>
  <li>수평으로 두 칸 이동한 뒤에 수직으로 한 칸 이동하기</li>
  <li>수직으로 두 칸 이동한 뒤에 수평으로 한 칸 이동하기</li>
</ol>

<ul>
  <li>8 X 8 좌표 평면상에서 나이트의 위치가 주어졌을 때 나이트가 이동할 수 있는 경우의 수를 출력하는 프로그램을 작성하시오. 이때 왕실의 정원에서 행 위치를 표현할 때는 1부터 8로 표현하며, 열 위치를 표현할 때는 a부터 h로 표현한다.<br /><br /></li>
</ul>

<h1 id="입력">입력</h1>
<hr />

<ul>
  <li>첫째 줄에 8 X 8 좌표 평면상에서 현재 나이트가 위치한 곳의 좌표를 나타내는 두 문자로 구성된 문자열이 입력된다. 입력 문자는 a1처럼 열과 행으로 이뤄진다.<br /><br /></li>
</ul>

<h1 id="출력">출력</h1>
<hr />

<ul>
  <li>첫째 줄에 나이트가 이동할 수 있는 경우의 수를 출력하시오.<br /><br /><br /></li>
</ul>

<h1 id="-풀이">👀 풀이</h1>
<hr />

<ul>
  <li>나이트가 이동할 수 있는 모든 방향 쌍을 배열에 저장한 다음 반복문을 돌려 그 방향으로 이동했을 때 체스판 안 인지 확인해서 체스판 안일 때에만 경우의 수를 증가시키면 된다.</li>
  <li>입력 중 열은 a1과 같이 알파벳으로 주어지기 때문에 이걸 숫자로 바꿔주는 것이 계산하기 편하다.<br /><br /></li>
</ul>

<h1 id="코드">코드</h1>
<hr />

<script src="https://gist.github.com/miro7923/13a3a9a7105a54df2f0dd5bcbb99cdbe.js"></script>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="BOJ" /><category term="Algorithm" /><category term="Implementation" /><category term="Python" /><summary type="html"><![CDATA[문제 출처 이것이 취업을 위한 코딩테스트다 with 파이썬 Chapter 04 - 실전문제 2. 왕실의 나이트 제한 시간 제한 : 1 초 메모리 제한 : 128 MB]]></summary></entry><entry><title type="html">Python) 이것이 취업을 위한 코딩테스트다 04 연습문제 2. 시각</title><link href="http://localhost:4000/boj/CodingTestBook-04-e2-py/" rel="alternate" type="text/html" title="Python) 이것이 취업을 위한 코딩테스트다 04 연습문제 2. 시각" /><published>2022-03-27T00:00:00+09:00</published><updated>2022-03-27T00:00:00+09:00</updated><id>http://localhost:4000/boj/CodingTestBook-04-e2-py</id><content type="html" xml:base="http://localhost:4000/boj/CodingTestBook-04-e2-py/"><![CDATA[<h1 id="문제-출처">문제 출처</h1>
<hr />

<ul>
  <li>이것이 취업을 위한 코딩테스트다 with 파이썬</li>
  <li>Chapter 04 - 연습문제 2. 시각<br /><br /></li>
</ul>

<h1 id="제한">제한</h1>
<hr />

<ul>
  <li>시간 제한 : 2 초</li>
  <li>메모리 제한 : 128 MB<br /><br /></li>
</ul>

<h1 id="문제">문제</h1>
<hr />

<ul>
  <li>
    <p>정수 N이 입력되면 00시 00분 00초부터 N시 59분 59초까지의 모든 시각 중에서 3이 하나라도 포함되는 모든 경우의 수를 구하는 프로그램을 작성하시오. 예를 들어 1을 입력했을 때 다음은 3이 하나라도 포함되어 있으므로 세어야 하는 시각이다.</p>
  </li>
  <li>00시 00분 03초</li>
  <li>
    <p>00시 13분 30초</p>
  </li>
  <li>
    <p>반면에 다음은 3이 하나라도 포함되어 있지 않으므로 세면 안 되는 시각이다.</p>
  </li>
  <li>00시 02분 55초</li>
  <li>01시 27분 45초<br /><br /></li>
</ul>

<h1 id="입력">입력</h1>
<hr />

<ul>
  <li>첫째 줄에 정수 N이 입력된다. (0 &lt;= N &lt;= 23)<br /><br /></li>
</ul>

<h1 id="출력">출력</h1>
<hr />

<ul>
  <li>00시 00분 00초부터 N시 59분 59초까지의 모든 시각 중에서 3이 하나라도 포함되는 모든 경우의 수를 출력한다.<br /><br /><br /></li>
</ul>

<h1 id="-풀이">👀 풀이</h1>
<hr />

<ul>
  <li>하루는 86,400초로 00시 00분 00초 ~ 23시 59분 59초까지 생길 수 있는 경우의 수는 최대가 86,400개이다.</li>
  <li>그래서 모든 경우를 하나씩 탐색해 보아도 시간 안에 해결할 수 있다.</li>
  <li>00시 00분 00초부터 1초씩 늘려가면서 문자열로 바꾼 뒤 그 안에 <code class="language-plaintext highlighter-rouge">3</code>이 포함되어 있는지 확인하면 된다.</li>
  <li>먼저 시간 단위로 반복문을 돌고 그 안에서 분 단위로 반복문을 돌고 그 안에서 초 단위로 반복문을 도는 3중 반복문을 작성하면 쉽게 풀 수 있다.<br /><br /></li>
</ul>

<h1 id="코드">코드</h1>
<hr />

<script src="https://gist.github.com/miro7923/9f305c43e376492ae732db429ef468e1.js"></script>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="BOJ" /><category term="Algorithm" /><category term="Implementation" /><category term="Python" /><summary type="html"><![CDATA[문제 출처 이것이 취업을 위한 코딩테스트다 with 파이썬 Chapter 04 - 연습문제 2. 시각 제한 시간 제한 : 2 초 메모리 제한 : 128 MB]]></summary></entry><entry><title type="html">컴퓨터 네트워크) Application</title><link href="http://localhost:4000/computer%20network/computer-network-application/" rel="alternate" type="text/html" title="컴퓨터 네트워크) Application" /><published>2022-03-27T00:00:00+09:00</published><updated>2022-03-27T00:00:00+09:00</updated><id>http://localhost:4000/computer%20network/computer-network-application</id><content type="html" xml:base="http://localhost:4000/computer%20network/computer-network-application/"><![CDATA[<h1 id="-application">👀 Application?</h1>
<ul>
  <li>응용프로그램이라고도 하며 사용자가 직접 다루는 프로그램을 의미한다.</li>
  <li>그래서 네트워크 응용프로그램이라면 인터넷 상에서 통신을 할 때 사용자가 직접 다루게 되는 프로그램을 의미하게 된다.</li>
  <li>종류에는 이메일, 크롬과 같은 웹 브라우저, P2P 파일 공유 프로그램, SNS, 카카오톡과 같은 메신저, 온라인 게임, 유튜브와 같은 비디오 스트리밍 서비스 등이 있다.<br /><br /></li>
</ul>

<h1 id="application-structures">Application structures</h1>
<h2 id="client-sever-model">Client-sever model</h2>
<ul>
  <li>최초로 사용되었던 방식으로 중앙에 서버 하나가 있고 클라이언트들이 그 하나의 서버에 접속해서 데이터를 받는 형태이다.</li>
  <li>이 모델에서는 서버가 유일하게 데이터를 제공하는 장치이다.</li>
  <li>그래서 서버가 꺼져 있으면 데이터를 받을 수 없다. 그렇기 때문에 서버 컴퓨터는 항상 켜져 있어야 한다.</li>
  <li>클라이언트는 서버에 접속해야만 데이터를 받을 수 있기 때문에 서버의 <code class="language-plaintext highlighter-rouge">IP 주소</code>는 항상 같아야 한다.</li>
  <li>서버 하나에 너무 많은 클라이언트가 몰리면 서버의 성능이 떨어지기 때문에 부하를 분산하기 위해서 서버를 여러 개 둔다.</li>
  <li>클라이언트가 다른 클라이언트와 통신하고 싶다면 서버를 거쳐야만 한다. 직접 통신 불가능</li>
</ul>

<h2 id="perr-to-peer-p2p-model">Perr-to-peer (P2P) model</h2>
<ul>
  <li>서버를 거치지 않고 각 컴퓨터들이 직접 연결되어 있는 형태로 네트워크에 참여하는 모든 컴퓨터들이 데이터 제공자이자 소비자가 된다. 특정한 하나의 서버가 없다.</li>
  <li>그래서 모든 컴퓨터가 항상 켜져 있을 필요는 없다. 데이터를 주고받고자 할 때에만 켜도 된다.</li>
  <li>부하가 분산되기 때문에 클라이언트가 많아져도 안정적이고 지속적인 서비스가 가능하다.</li>
  <li>꼭 고정된 <code class="language-plaintext highlighter-rouge">IP 주소</code>를 가지지 않아도 된다.<br /><br /></li>
</ul>

<h1 id="application-layer-protocol">Application Layer Protocol</h1>
<ul>
  <li>인터넷 프로토콜은 5개의 층(layer)으로 이루어져 있는데 이 층 간에 통신을 할 때 필요한 규약이다.</li>
  <li>
    <p>우리가 서로 대화할 때 서로 이해 가능한 문법과 의미를 지켜서 얘기하는 것처럼 네트워크 응용프로그램도 서로 해석할 수 있는 프로토콜을 이용해 데이터를 주고받는다.</p>
  </li>
  <li><code class="language-plaintext highlighter-rouge">message syntax</code> : 요구하는 데이터가 무엇이고 이 데이터들을 어떻게 늘어놓을 것인지</li>
  <li><code class="language-plaintext highlighter-rouge">message semantics</code> : 이 데이터들을 어떻게 해석할 것인지</li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">message pragmatics</code> : 어떤 순서로 어떻게 응답할 것인지</p>
  </li>
  <li>응용프로그램 프로토콜에는 <code class="language-plaintext highlighter-rouge">Open protocol</code>과 <code class="language-plaintext highlighter-rouge">Proprietary protocol</code>이 있는데 <code class="language-plaintext highlighter-rouge">Open protocol</code>은 전체 규칙이 표준화되어 공개되어 있어(<code class="language-plaintext highlighter-rouge">HTTP</code>, <code class="language-plaintext highlighter-rouge">SMTP</code>) 누구나 접근해 그 규격에 맞는 메시지를 만들어 통신할 수 있다.</li>
  <li>반면에 <code class="language-plaintext highlighter-rouge">Proprietary protocol</code>은 기업에서 자체적으로 만들어 사용하는 고유한 프로토콜로 만든 곳에서 공개하지 않으면 알 수 없다.<br /><br /></li>
</ul>

<h1 id="transport-layer-protocol">Transport Layer Protocol</h1>
<ul>
  <li>데이터를 전송할 때엔 데이터가 손실되지 않는지, 전송속도는 얼마나 나오는지 등 데이터가 제대로 전송될 수 있도록 신경써야 하는 부분이 있다. 그런데 이런 것들을 응용프로그래머가 일일이 다루기는 어렵다.</li>
  <li>그래서 <code class="language-plaintext highlighter-rouge">Transport Layer</code>에서 이런 것들에 대한 요구사항을 만족시켜 준다.</li>
</ul>

<h2 id="tcp">TCP</h2>
<ul>
  <li>신뢰성 있는 전송</li>
  <li><code class="language-plaintext highlighter-rouge">Error control</code> : 에러가 없을 때까지 재전송</li>
  <li><code class="language-plaintext highlighter-rouge">Flow control</code> : 보내는 쪽은 받는 쪽이 받을 수 있을 만큼만 보낸다.</li>
  <li><code class="language-plaintext highlighter-rouge">Congestion control</code> : 라우터나 스위치에 데이터가 쌓이지 않도록 제어</li>
  <li>이메일, 웹, 파일 전송 등에서 사용</li>
</ul>

<h2 id="udp">UDP</h2>
<ul>
  <li>신뢰성 없는 전송</li>
  <li><code class="language-plaintext highlighter-rouge">TCP</code>가 제공하는 기능들을 제공하지 않는다.</li>
  <li>이렇게 보면 쓸모 없어보이지만 오디오/비디오와 같은 멀티미디어 데이터를 전송할 때 유용하게 사용될 수 있다.</li>
  <li>받은 데이터에 손실이 있어도 수정하지 않고 그대로 보내기 때문에 유튜브처럼 데이터에 손실이 좀 생겨도 보는데에 지장이 없는 서비스에서는 빠르게 전송할 수 있다.</li>
  <li>비디오 스트리밍 서비스나 통화 서비스 등에서 사용<br /><br /><br /></li>
</ul>

<h1 id="출처">출처</h1>
<ul>
  <li><a href="http://www.kmooc.kr/courses/course-v1:PNUk+CN_C01+2021_KM_013/video">컴퓨터 네트워킹 - 부산대학교 K-MOOC 공개강의</a></li>
</ul>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="Computer Network" /><category term="CS" /><category term="Network" /><category term="Application" /><summary type="html"><![CDATA[👀 Application? 응용프로그램이라고도 하며 사용자가 직접 다루는 프로그램을 의미한다. 그래서 네트워크 응용프로그램이라면 인터넷 상에서 통신을 할 때 사용자가 직접 다루게 되는 프로그램을 의미하게 된다. 종류에는 이메일, 크롬과 같은 웹 브라우저, P2P 파일 공유 프로그램, SNS, 카카오톡과 같은 메신저, 온라인 게임, 유튜브와 같은 비디오 스트리밍 서비스 등이 있다.]]></summary></entry><entry><title type="html">프로젝트) Cafe(웹 사이트) 만들기 16_1 - 게시판 답글 작성 알고리즘</title><link href="http://localhost:4000/project%20log/cafe-project-16_1/" rel="alternate" type="text/html" title="프로젝트) Cafe(웹 사이트) 만들기 16_1 - 게시판 답글 작성 알고리즘" /><published>2022-03-25T00:00:00+09:00</published><updated>2022-03-25T00:00:00+09:00</updated><id>http://localhost:4000/project%20log/cafe-project-16_1</id><content type="html" xml:base="http://localhost:4000/project%20log/cafe-project-16_1/"><![CDATA[<h1 id="개발환경">개발환경</h1>
<ul>
  <li>MacBook Air (M1, 2020)</li>
  <li>OpenJDK 8</li>
  <li>Eclipse 2021-12</li>
  <li>tomcat 8.5</li>
  <li>MySQL Workbench 8.0.19<br /><br /><br /></li>
</ul>

<h1 id="시작">시작</h1>
<ul>
  <li>2022.3.4 ~ <br /><br /><br /></li>
</ul>

<h1 id="주제">주제</h1>
<ul>
  <li>웹 백엔드 수업 중 중간 과제로 개인 프로젝트를 진행하게 되었다.</li>
  <li>회원가입/로그인/탈퇴 등 기본적인 회원관리 시스템을 가진 웹 사이트를 만드는 것이다. 주어진 기한은 <code class="language-plaintext highlighter-rouge">한 달</code></li>
  <li>나는 <code class="language-plaintext highlighter-rouge">다음 카페</code>를 소규모로 만들어 보기로 했다. 평소 자주 이용하기도 했고 과제의 평가 기준에서 요구하는 기능들을 다 담고 있기도 했기 때문에 이번 기회에 구현해 보면 그동안 배운 것들을 활용하기에 좋을 거 같았다.</li>
  <li>평가 기준에 사이트의 디자인 구현(HTML/CSS 등 프론트엔드)은 포함되지 않기 때문에 본인이 쓰고 싶은 HTML/CSS 템플릿을 구한 뒤 회원 관리 기능을 구현하면 된다.<br /><br /><br /></li>
</ul>

<h1 id="게시글-답글-작성-알고리즘">게시글 답글 작성 알고리즘</h1>
<ul>
  <li><code class="language-plaintext highlighter-rouge">re_ref</code> : 부모글과 그로부터 파생된 자식글들이 같은 값을 가지기 위한 필드</li>
  <li><code class="language-plaintext highlighter-rouge">re_lev</code> : 같은 <code class="language-plaintext highlighter-rouge">re_ref</code> 내에서의 들여쓰기 깊이</li>
  <li><code class="language-plaintext highlighter-rouge">re_seq</code> : 같은 <code class="language-plaintext highlighter-rouge">re_ref</code> 내에서의 순서</li>
</ul>

<h2 id="첫-번째-글쓰기-입력">첫 번째 글쓰기 입력</h2>
<ul>
  <li>처음엔 답글이 아닌 일반 글들이 각자 고유한 <code class="language-plaintext highlighter-rouge">re_ref</code> 번호를 가지고 등록된다.</li>
</ul>

<table>
  <thead>
    <tr>
      <th>num</th>
      <th>title</th>
      <th>re_ref</th>
      <th>re_lev</th>
      <th>re_seq</th>
      <th> </th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>1</td>
      <td>1st</td>
      <td>1</td>
      <td>0</td>
      <td>1</td>
      <td> </td>
    </tr>
    <tr>
      <td>2</td>
      <td>2nd</td>
      <td>2</td>
      <td>0</td>
      <td>1</td>
      <td> </td>
    </tr>
    <tr>
      <td>3</td>
      <td>3rd</td>
      <td>3</td>
      <td>0</td>
      <td>1</td>
      <td><br /></td>
    </tr>
  </tbody>
</table>

<h2 id="1번-글에-답변-글-달기">1번 글에 답변 글 달기</h2>
<p>순서1) <code class="language-plaintext highlighter-rouge">re_ref</code>값은 부모글 1st의 <code class="language-plaintext highlighter-rouge">re_ref</code>값을 사용한다.<br />
순서2) <code class="language-plaintext highlighter-rouge">re_seq</code>값은 부모글 1st에서 1 증가 한 값을 사용한다.<br />
순서3) <code class="language-plaintext highlighter-rouge">re_lev</code>값은 부모글 1st에서 1 증가 한 값을 사용한다.<br /></p>

<ul>
  <li>그러면 아래와 같이 글이 등록될 것이다.</li>
</ul>

<table>
  <thead>
    <tr>
      <th>num</th>
      <th>title</th>
      <th>re_ref</th>
      <th>re_lev</th>
      <th>re_seq</th>
      <th> </th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>1</td>
      <td>1st</td>
      <td>1</td>
      <td>0</td>
      <td>1</td>
      <td> </td>
    </tr>
    <tr>
      <td>2</td>
      <td>2nd</td>
      <td>2</td>
      <td>0</td>
      <td>1</td>
      <td> </td>
    </tr>
    <tr>
      <td>3</td>
      <td>3rd</td>
      <td>3</td>
      <td>0</td>
      <td>1</td>
      <td> </td>
    </tr>
    <tr>
      <td>4</td>
      <td>1st_re1</td>
      <td>1</td>
      <td>1</td>
      <td>2</td>
      <td><br /></td>
    </tr>
  </tbody>
</table>

<ul>
  <li><code class="language-plaintext highlighter-rouge">re_seq</code>값이 1인 글은 부모글, 1보다 크면 자식글이라는 것을 알 수 있다.</li>
</ul>

<h2 id="1번-글의-답변-글에-또-답변-글-달기">1번 글의 답변 글에 또 답변 글 달기</h2>
<ul>
  <li>1번 글에 답글을 달 때와 같은 순서로 작성하면 아래와 같이 등록될 것이다.</li>
</ul>

<table>
  <thead>
    <tr>
      <th>num</th>
      <th>title</th>
      <th>re_ref</th>
      <th>re_lev</th>
      <th>re_seq</th>
      <th> </th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>1</td>
      <td>1st</td>
      <td>1</td>
      <td>0</td>
      <td>1</td>
      <td> </td>
    </tr>
    <tr>
      <td>2</td>
      <td>2nd</td>
      <td>2</td>
      <td>0</td>
      <td>1</td>
      <td> </td>
    </tr>
    <tr>
      <td>3</td>
      <td>3rd</td>
      <td>3</td>
      <td>0</td>
      <td>1</td>
      <td> </td>
    </tr>
    <tr>
      <td>4</td>
      <td>1st_re1</td>
      <td>1</td>
      <td>1</td>
      <td>2</td>
      <td> </td>
    </tr>
    <tr>
      <td>5</td>
      <td>1st_re1_re1</td>
      <td>1</td>
      <td>2</td>
      <td>3</td>
      <td><br /></td>
    </tr>
  </tbody>
</table>

<h2 id="1번-글에-답변-글-달기-1">1번 글에 답변 글 달기</h2>
<p>순서1) <code class="language-plaintext highlighter-rouge">re_ref</code>값은 부모글 1st의 <code class="language-plaintext highlighter-rouge">re_ref</code>값을 사용한다.<br />
순서2) <code class="language-plaintext highlighter-rouge">re_seq</code>값은 부모글 1st에서 1 증가 한 값을 사용한다. 단 부모글을 제외한 값 <code class="language-plaintext highlighter-rouge">re_ref</code> 내에서 먼저 입력된 글은 <code class="language-plaintext highlighter-rouge">re_seq</code>값을 1 증가시킨다.<br />
순서3) <code class="language-plaintext highlighter-rouge">re_lev</code>값은 부모글 1st에서 1 증가 한 값을 사용한다.<br /></p>

<table>
  <thead>
    <tr>
      <th>num</th>
      <th>title</th>
      <th>re_ref</th>
      <th>re_lev</th>
      <th>re_seq</th>
      <th> </th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>1</td>
      <td>1st</td>
      <td>1</td>
      <td>0</td>
      <td>1</td>
      <td> </td>
    </tr>
    <tr>
      <td>2</td>
      <td>2nd</td>
      <td>2</td>
      <td>0</td>
      <td>1</td>
      <td> </td>
    </tr>
    <tr>
      <td>3</td>
      <td>3rd</td>
      <td>3</td>
      <td>0</td>
      <td>1</td>
      <td> </td>
    </tr>
    <tr>
      <td>4</td>
      <td>1st_re1</td>
      <td>1</td>
      <td>1</td>
      <td>3</td>
      <td> </td>
    </tr>
    <tr>
      <td>5</td>
      <td>1st_re1_re1</td>
      <td>1</td>
      <td>2</td>
      <td>4</td>
      <td> </td>
    </tr>
    <tr>
      <td>6</td>
      <td>1st_re2</td>
      <td>1</td>
      <td>1</td>
      <td>2</td>
      <td><br /></td>
    </tr>
  </tbody>
</table>

<ul>
  <li>그러면 위와 같은 값을 가지게 된다.</li>
  <li><code class="language-plaintext highlighter-rouge">re_ref</code>값을 기준으로 먼저 내림차순 정렬을 한 뒤 <code class="language-plaintext highlighter-rouge">re_ref</code>값 내에서 2차로 <code class="language-plaintext highlighter-rouge">re_seq</code>값을 기준으로 오름차순 정렬을 한다.</li>
</ul>

<table>
  <thead>
    <tr>
      <th>num</th>
      <th>title</th>
      <th>re_ref</th>
      <th>re_lev</th>
      <th>re_seq</th>
      <th> </th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>3</td>
      <td>3rd</td>
      <td>3</td>
      <td>0</td>
      <td>1</td>
      <td> </td>
    </tr>
    <tr>
      <td>2</td>
      <td>2nd</td>
      <td>2</td>
      <td>0</td>
      <td>1</td>
      <td> </td>
    </tr>
    <tr>
      <td>1</td>
      <td>1st</td>
      <td>1</td>
      <td>0</td>
      <td>1</td>
      <td> </td>
    </tr>
    <tr>
      <td>6</td>
      <td>1st_re2</td>
      <td>1</td>
      <td>1</td>
      <td>2</td>
      <td> </td>
    </tr>
    <tr>
      <td>4</td>
      <td>1st_re1</td>
      <td>1</td>
      <td>1</td>
      <td>3</td>
      <td> </td>
    </tr>
    <tr>
      <td>5</td>
      <td>1st_re1_re1</td>
      <td>1</td>
      <td>2</td>
      <td>4</td>
      <td><br /></td>
    </tr>
  </tbody>
</table>

<ul>
  <li>그러면 이렇게 최신 글이 가장 위로 올라오면서 들여쓰기 레벨에 따라 작성된 글을 볼 수 있다.<br /><br /><br /></li>
</ul>

<h1 id="마감까지">마감까지</h1>
<ul>
  <li><code class="language-plaintext highlighter-rouge">D-8</code></li>
</ul>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="Project Log" /><category term="Project" /><category term="Cafe" /><category term="Log" /><summary type="html"><![CDATA[개발환경 MacBook Air (M1, 2020) OpenJDK 8 Eclipse 2021-12 tomcat 8.5 MySQL Workbench 8.0.19]]></summary></entry><entry><title type="html">프로젝트) Cafe(웹 사이트) 만들기 15 - 게시글 삭제 기능 구현</title><link href="http://localhost:4000/project%20log/cafe-project-15/" rel="alternate" type="text/html" title="프로젝트) Cafe(웹 사이트) 만들기 15 - 게시글 삭제 기능 구현" /><published>2022-03-25T00:00:00+09:00</published><updated>2022-03-25T00:00:00+09:00</updated><id>http://localhost:4000/project%20log/cafe-project-15</id><content type="html" xml:base="http://localhost:4000/project%20log/cafe-project-15/"><![CDATA[<h1 id="개발환경">개발환경</h1>
<ul>
  <li>MacBook Air (M1, 2020)</li>
  <li>OpenJDK 8</li>
  <li>Eclipse 2021-12</li>
  <li>tomcat 8.5</li>
  <li>MySQL Workbench 8.0.19<br /><br /><br /></li>
</ul>

<h1 id="시작">시작</h1>
<ul>
  <li>2022.3.4 ~ <br /><br /><br /></li>
</ul>

<h1 id="주제">주제</h1>
<ul>
  <li>웹 백엔드 수업 중 중간 과제로 개인 프로젝트를 진행하게 되었다.</li>
  <li>회원가입/로그인/탈퇴 등 기본적인 회원관리 시스템을 가진 웹 사이트를 만드는 것이다. 주어진 기한은 <code class="language-plaintext highlighter-rouge">한 달</code></li>
  <li>나는 <code class="language-plaintext highlighter-rouge">다음 카페</code>를 소규모로 만들어 보기로 했다. 평소 자주 이용하기도 했고 과제의 평가 기준에서 요구하는 기능들을 다 담고 있기도 했기 때문에 이번 기회에 구현해 보면 그동안 배운 것들을 활용하기에 좋을 거 같았다.</li>
  <li>평가 기준에 사이트의 디자인 구현(HTML/CSS 등 프론트엔드)은 포함되지 않기 때문에 본인이 쓰고 싶은 HTML/CSS 템플릿을 구한 뒤 회원 관리 기능을 구현하면 된다.<br /><br /><br /></li>
</ul>

<h1 id="진행상황">진행상황</h1>
<ul>
  <li>게시글 삭제 기능을 만들었다.</li>
</ul>

<h2 id="boardcontentjsp">boardContent.jsp</h2>

<div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">"boardPage"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;%</span><span class="k">if</span> <span class="o">(</span><span class="kc">null</span> <span class="o">!=</span> <span class="n">id</span> <span class="o">&amp;&amp;</span> <span class="n">id</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">dto</span><span class="o">.</span><span class="na">getId</span><span class="o">()))</span> <span class="o">{</span> <span class="nt">%&gt;</span>
    <span class="nt">&lt;button</span> <span class="na">type=</span><span class="s">"button"</span> <span class="na">class=</span><span class="s">"btn"</span> 
      <span class="na">onclick=</span><span class="s">"location.href='./BoardModify.bo?num=</span><span class="nt">&lt;%=</span><span class="n">dto</span><span class="o">.</span><span class="na">getNum</span><span class="o">()</span><span class="nt">%&gt;</span><span class="s">&amp;pageNum=</span><span class="nt">&lt;%=</span><span class="n">pageNum</span><span class="nt">%&gt;</span><span class="s">';"</span><span class="nt">&gt;</span>수정하기<span class="nt">&lt;/button&gt;</span>
    <span class="nt">&lt;button</span> <span class="na">type=</span><span class="s">"button"</span> <span class="na">class=</span><span class="s">"btn"</span> 
      <span class="na">onclick=</span><span class="s">"location.href='./BoardDeleteConfirm.bo?num=</span><span class="nt">&lt;%=</span><span class="n">dto</span><span class="o">.</span><span class="na">getNum</span><span class="o">()</span><span class="nt">%&gt;</span><span class="s">&amp;pageNum=</span><span class="nt">&lt;%=</span><span class="n">pageNum</span><span class="nt">%&gt;</span><span class="s">';"</span><span class="nt">&gt;</span>삭제하기<span class="nt">&lt;/button&gt;</span>
  <span class="nt">&lt;%</span><span class="o">}</span> <span class="nt">%&gt;</span>
</code></pre></div></div>

<ul>
  <li>로그인 한 사용자 중 작성 글의 <code class="language-plaintext highlighter-rouge">ID</code>와 일치하는 사용자 본인일 때에만 <code class="language-plaintext highlighter-rouge">삭제하기</code> 버튼이 활성화 된다.</li>
  <li>버튼을 누르면 정말 삭제할 것인지 한 번 더 묻는 액션 페이지로 연결된다.</li>
</ul>

<h2 id="boardfrontcontrollerjava">BoardFrontController.java</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.project.cafe.board.action</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.servlet.RequestDispatcher</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.ServletException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServlet</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletRequest</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletResponse</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">com.project.cafe.action.Action</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.project.cafe.action.ActionForward</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">BoardFrontController</span> <span class="kd">extends</span> <span class="nc">HttpServlet</span>
<span class="o">{</span>
    <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">doProcess</span><span class="o">(</span><span class="nc">HttpServletRequest</span> <span class="n">request</span><span class="o">,</span> <span class="nc">HttpServletResponse</span> <span class="n">response</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">ServletException</span><span class="o">,</span> <span class="nc">IOException</span> 
    <span class="o">{</span>
        <span class="c1">// 1. 전달되는 가상주소 계산</span>
        <span class="c1">// .. 생략</span>
        
        <span class="c1">// 2. 가상주소 매핑</span>
        <span class="nc">Action</span> <span class="n">action</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
        <span class="nc">ActionForward</span> <span class="n">forward</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
		
        <span class="c1">// .. 생략</span>
        <span class="k">else</span> 
        <span class="o">{</span>
            <span class="n">forward</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ActionForward</span><span class="o">();</span>

			<span class="c1">// .. 생략			</span>
            <span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="n">command</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"/BoardDeleteConfirm.bo"</span><span class="o">))</span>
            <span class="o">{</span>
                <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"C : /BoardDeleteConfirm.bo 호출"</span><span class="o">);</span>
				
                <span class="n">forward</span><span class="o">.</span><span class="na">setPath</span><span class="o">(</span><span class="s">"./contents/boardDelete.jsp"</span><span class="o">);</span>
            <span class="o">}</span>

            <span class="n">forward</span><span class="o">.</span><span class="na">setRedirect</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
        <span class="o">}</span>
		
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"2. 가상주소 매핑 완료"</span><span class="o">);</span>
		
		
        <span class="c1">// 3. 페이지 이동</span>
        <span class="c1">// .. 생략</span>
	<span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>삭제 버튼을 누르면 컨트롤러에서 확인 동작을 수행하는 페이지로 연결한다.</li>
</ul>

<h2 id="boarddeletejsp">boardDelete.jsp</h2>

<div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;%@ page </span><span class="na">language=</span><span class="s">"java"</span><span class="na"> contentType=</span><span class="s">"text/html; charset=UTF-8"</span><span class="na">
    pageEncoding=</span><span class="s">"UTF-8"</span><span class="nt">%&gt;</span>
<span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="nt">&lt;html&gt;</span>
<span class="nt">&lt;head&gt;</span>
<span class="nt">&lt;meta</span> <span class="na">charset=</span><span class="s">"UTF-8"</span><span class="nt">&gt;</span>
<span class="nt">&lt;title&gt;</span>Insert title here<span class="nt">&lt;/title&gt;</span>
<span class="nt">&lt;script </span><span class="na">src=</span><span class="s">"${pageContext.request.contextPath }/js/jquery-3.6.0.js"</span><span class="nt">&gt;&lt;/script&gt;</span>
<span class="nt">&lt;/head&gt;</span>
<span class="nt">&lt;body&gt;</span>
<span class="nt">&lt;%</span>
	<span class="kt">int</span> <span class="n">num</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"num"</span><span class="o">));</span>
	<span class="nc">String</span> <span class="n">pageNum</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"pageNum"</span><span class="o">);</span>
<span class="nt">%&gt;</span>
<span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"hidden"</span> <span class="na">id=</span><span class="s">"num"</span> <span class="na">value=</span><span class="s">"</span><span class="nt">&lt;%=</span><span class="n">num</span><span class="nt">%&gt;</span><span class="s">"</span><span class="nt">&gt;</span>
<span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"hidden"</span> <span class="na">id=</span><span class="s">"pageNum"</span> <span class="na">value=</span><span class="s">"</span><span class="nt">&lt;%=</span><span class="n">pageNum</span><span class="nt">%&gt;</span><span class="s">"</span><span class="nt">&gt;</span>
<span class="nt">&lt;script </span><span class="na">type=</span><span class="s">"text/javascript"</span><span class="nt">&gt;</span>
	<span class="kd">function</span> <span class="nx">deleteCheck</span><span class="p">()</span>
	<span class="p">{</span>
		<span class="kd">var</span> <span class="nx">num</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">#num</span><span class="dl">'</span><span class="p">).</span><span class="nx">val</span><span class="p">();</span>
		<span class="kd">var</span> <span class="nx">pageNum</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">#pageNum</span><span class="dl">'</span><span class="p">).</span><span class="nx">val</span><span class="p">();</span>
		<span class="k">if</span> <span class="p">(</span><span class="nx">confirm</span><span class="p">(</span><span class="dl">'</span><span class="s1">정말 삭제 하시겠습니까?</span><span class="dl">'</span><span class="p">))</span>
			<span class="nx">location</span><span class="p">.</span><span class="nx">href</span><span class="o">=</span><span class="dl">'</span><span class="s1">./BoardDelete.bo?num=</span><span class="dl">'</span><span class="o">+</span><span class="nx">num</span><span class="o">+</span><span class="dl">'</span><span class="s1">&amp;pageNum=</span><span class="dl">'</span><span class="o">+</span><span class="nx">pageNum</span><span class="p">;</span>
		<span class="k">else</span> 
			<span class="nx">history</span><span class="p">.</span><span class="nx">back</span><span class="p">();</span>
	<span class="p">}</span>
	
	<span class="nx">deleteCheck</span><span class="p">();</span>
<span class="nt">&lt;/script&gt;</span>
<span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;</span>
</code></pre></div></div>

<ul>
  <li>자바 스크립트를 이용해 알림창을 띄운 후 최종 삭제 동작을 확인할 것이라서 <code class="language-plaintext highlighter-rouge">jsp</code> 페이지를 간단하게 만들어서 사용했다.</li>
  <li>취소 버튼을 누르면 게시글 본문 페이지로 돌아가고 확인 버튼을 누르면 삭제 동작을 수행하는 액션 클래스로 연결하기 위해 컨트롤러로 이동한다.</li>
</ul>

<h2 id="boardfrontcontrollerjava-1">BoardFrontController.java</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.project.cafe.board.action</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.servlet.RequestDispatcher</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.ServletException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServlet</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletRequest</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletResponse</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">com.project.cafe.action.Action</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.project.cafe.action.ActionForward</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">BoardFrontController</span> <span class="kd">extends</span> <span class="nc">HttpServlet</span>
<span class="o">{</span>
    <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">doProcess</span><span class="o">(</span><span class="nc">HttpServletRequest</span> <span class="n">request</span><span class="o">,</span> <span class="nc">HttpServletResponse</span> <span class="n">response</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">ServletException</span><span class="o">,</span> <span class="nc">IOException</span> 
    <span class="o">{</span>
        <span class="c1">// 1. 전달되는 가상주소 계산</span>
        <span class="c1">// .. 생략</span>
		
		
        <span class="c1">// 2. 가상주소 매핑</span>
        <span class="nc">Action</span> <span class="n">action</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
        <span class="nc">ActionForward</span> <span class="n">forward</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
		
		<span class="c1">// .. 생략</span>
		<span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="n">command</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"/BoardDelete.bo"</span><span class="o">))</span>
		<span class="o">{</span>
			<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"C : /BoardDelete.bo 호출"</span><span class="o">);</span>
			
			<span class="n">action</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BoardDeleteAction</span><span class="o">();</span>
			
			<span class="k">try</span> <span class="o">{</span>
				<span class="n">forward</span> <span class="o">=</span> <span class="n">action</span><span class="o">.</span><span class="na">execute</span><span class="o">(</span><span class="n">request</span><span class="o">,</span> <span class="n">response</span><span class="o">);</span>
			<span class="o">}</span>
			<span class="k">catch</span> <span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
				<span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
			<span class="o">}</span>
		<span class="o">}</span>
		
		
        <span class="c1">// 3. 페이지 이동</span>
        <span class="c1">// .. 생략</span>
	<span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>컨트롤러로 오면 게시글 삭제 동작을 수행할 액션 클래스로 연결한다.</li>
</ul>

<h2 id="boarddeleteactionjava">BoardDeleteAction.java</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.project.cafe.board.action</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.io.PrintWriter</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletRequest</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletResponse</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">com.project.cafe.action.Action</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.project.cafe.action.ActionForward</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.project.cafe.board.db.BoardDAO</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">BoardDeleteAction</span> <span class="kd">implements</span> <span class="nc">Action</span> 
<span class="o">{</span>
    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="nc">ActionForward</span> <span class="nf">execute</span><span class="o">(</span><span class="nc">HttpServletRequest</span> <span class="n">request</span><span class="o">,</span> <span class="nc">HttpServletResponse</span> <span class="n">response</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">Exception</span> 
    <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"M : BoardDeleteAction - execute() 호출"</span><span class="o">);</span>
		
        <span class="c1">// 파라메터 저장</span>
        <span class="kt">int</span> <span class="n">num</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"num"</span><span class="o">));</span>
        <span class="nc">String</span> <span class="n">pageNum</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"pageNum"</span><span class="o">);</span>
		
        <span class="c1">// DB 연결해서 해당 글 삭제</span>
        <span class="nc">BoardDAO</span> <span class="n">dao</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BoardDAO</span><span class="o">();</span>
        <span class="kt">int</span> <span class="n">result</span> <span class="o">=</span> <span class="n">dao</span><span class="o">.</span><span class="na">deletePost</span><span class="o">(</span><span class="n">num</span><span class="o">);</span>
		
        <span class="n">response</span><span class="o">.</span><span class="na">setContentType</span><span class="o">(</span><span class="s">"text/html; charset=UTF-8"</span><span class="o">);</span>
        <span class="nc">PrintWriter</span> <span class="n">out</span> <span class="o">=</span> <span class="n">response</span><span class="o">.</span><span class="na">getWriter</span><span class="o">();</span>
        <span class="c1">// 글 리스트 페이지로 이동</span>
        <span class="k">if</span> <span class="o">(</span><span class="mi">1</span> <span class="o">!=</span> <span class="n">result</span><span class="o">)</span>
        <span class="o">{</span>
            <span class="c1">// 해당 게시글 정보 없음</span>
            <span class="n">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"&lt;script&gt;"</span><span class="o">);</span>
            <span class="n">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"alert('해당 게시글 정보가 없습니다!');"</span><span class="o">);</span>
            <span class="n">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"location.href='./BoardList.bo';"</span><span class="o">);</span>
            <span class="n">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"&lt;/script&gt;"</span><span class="o">);</span>
			
            <span class="n">out</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
			
            <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
        <span class="o">}</span>

        <span class="n">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"&lt;script&gt;"</span><span class="o">);</span>
        <span class="n">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"alert('게시글 삭제가 완료되었습니다.');"</span><span class="o">);</span>
        <span class="n">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"location.href='./BoardList.bo?pageNum="</span><span class="o">+</span><span class="n">pageNum</span><span class="o">+</span><span class="s">"';"</span><span class="o">);</span>
        <span class="n">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"&lt;/script&gt;"</span><span class="o">);</span>
		
        <span class="n">out</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
		
        <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">DB</code>와 연결해서 글 정보를 확인한 후 삭제 동작을 수행한다.</li>
  <li>로그인 한 본인 글일 때에만 삭제 동작에 접근할 수 있어서 글 삭제에 실패하는 경우는 생기지 않을 것이라 생각하지만 혹시 모르니까 예외처리를 해 주었다.</li>
</ul>

<h2 id="boarddaojava---deletepostnum">BoardDAO.java - deletePost(num)</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kt">int</span> <span class="nf">deletePost</span><span class="o">(</span><span class="kt">int</span> <span class="n">num</span><span class="o">)</span>
<span class="o">{</span>
    <span class="kt">int</span> <span class="n">ret</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="o">;</span>
		
    <span class="k">try</span> <span class="o">{</span>
        <span class="n">con</span> <span class="o">=</span> <span class="n">getCon</span><span class="o">();</span>
			
        <span class="c1">// 삭제 대상 글 찾기</span>
        <span class="n">sql</span> <span class="o">=</span> <span class="s">"select * from cafe_board where num=?"</span><span class="o">;</span>
        <span class="n">pstmt</span> <span class="o">=</span> <span class="n">con</span><span class="o">.</span><span class="na">prepareStatement</span><span class="o">(</span><span class="n">sql</span><span class="o">);</span>
			
        <span class="n">pstmt</span><span class="o">.</span><span class="na">setInt</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="n">num</span><span class="o">);</span>
			
        <span class="n">rs</span> <span class="o">=</span> <span class="n">pstmt</span><span class="o">.</span><span class="na">executeQuery</span><span class="o">();</span>
			
        <span class="k">if</span> <span class="o">(</span><span class="n">rs</span><span class="o">.</span><span class="na">next</span><span class="o">())</span>
        <span class="o">{</span>
            <span class="n">sql</span> <span class="o">=</span> <span class="s">"delete from cafe_board where num=?"</span><span class="o">;</span>
            <span class="n">pstmt</span> <span class="o">=</span> <span class="n">con</span><span class="o">.</span><span class="na">prepareStatement</span><span class="o">(</span><span class="n">sql</span><span class="o">);</span>
				
            <span class="n">pstmt</span><span class="o">.</span><span class="na">setInt</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="n">num</span><span class="o">);</span>
				
            <span class="n">ret</span> <span class="o">=</span> <span class="n">pstmt</span><span class="o">.</span><span class="na">executeUpdate</span><span class="o">();</span>
				
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"DAO : 글 삭제 완료"</span><span class="o">);</span>
        <span class="o">}</span>
    <span class="o">}</span>
    <span class="k">catch</span> <span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
    <span class="o">}</span>
    <span class="k">finally</span> <span class="o">{</span>
        <span class="n">closeDB</span><span class="o">();</span>
    <span class="o">}</span>
		
    <span class="k">return</span> <span class="n">ret</span><span class="o">;</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>글 삭제가 완료되면 전체 게시글 목록으로 이동한다.</li>
  <li>
    <p>그러면 선택한 글이 삭제된 리스트를 볼 수 있다. <code class="language-plaintext highlighter-rouge">DB</code>에서도 삭제 완료 됨!</p>
  </li>
  <li>다음엔 답글 기능을 만들 것이다.<br /><br /><br /></li>
</ul>

<h1 id="마감까지">마감까지</h1>
<ul>
  <li><code class="language-plaintext highlighter-rouge">D-10</code></li>
</ul>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="Project Log" /><category term="Project" /><category term="Cafe" /><category term="Log" /><summary type="html"><![CDATA[개발환경 MacBook Air (M1, 2020) OpenJDK 8 Eclipse 2021-12 tomcat 8.5 MySQL Workbench 8.0.19]]></summary></entry><entry><title type="html">프로젝트) Cafe(웹 사이트) 만들기 16 - 답글 작성 기능 구현</title><link href="http://localhost:4000/project%20log/cafe-project-16/" rel="alternate" type="text/html" title="프로젝트) Cafe(웹 사이트) 만들기 16 - 답글 작성 기능 구현" /><published>2022-03-25T00:00:00+09:00</published><updated>2022-03-25T00:00:00+09:00</updated><id>http://localhost:4000/project%20log/cafe-project-16</id><content type="html" xml:base="http://localhost:4000/project%20log/cafe-project-16/"><![CDATA[<h1 id="개발환경">개발환경</h1>
<ul>
  <li>MacBook Air (M1, 2020)</li>
  <li>OpenJDK 8</li>
  <li>Eclipse 2021-12</li>
  <li>tomcat 8.5</li>
  <li>MySQL Workbench 8.0.19<br /><br /><br /></li>
</ul>

<h1 id="시작">시작</h1>
<ul>
  <li>2022.3.4 ~ <br /><br /><br /></li>
</ul>

<h1 id="주제">주제</h1>
<ul>
  <li>웹 백엔드 수업 중 중간 과제로 개인 프로젝트를 진행하게 되었다.</li>
  <li>회원가입/로그인/탈퇴 등 기본적인 회원관리 시스템을 가진 웹 사이트를 만드는 것이다. 주어진 기한은 <code class="language-plaintext highlighter-rouge">한 달</code></li>
  <li>나는 <code class="language-plaintext highlighter-rouge">다음 카페</code>를 소규모로 만들어 보기로 했다. 평소 자주 이용하기도 했고 과제의 평가 기준에서 요구하는 기능들을 다 담고 있기도 했기 때문에 이번 기회에 구현해 보면 그동안 배운 것들을 활용하기에 좋을 거 같았다.</li>
  <li>평가 기준에 사이트의 디자인 구현(HTML/CSS 등 프론트엔드)은 포함되지 않기 때문에 본인이 쓰고 싶은 HTML/CSS 템플릿을 구한 뒤 회원 관리 기능을 구현하면 된다.<br /><br /><br /></li>
</ul>

<h1 id="진행상황">진행상황</h1>
<ul>
  <li>게시글에 답글을 작성할 수 있는 기능을 만들었다.</li>
</ul>

<h2 id="boardcontentjsp">boardContent.jsp</h2>

<div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">"boardPage"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;%</span><span class="k">if</span> <span class="o">(</span><span class="kc">null</span> <span class="o">!=</span> <span class="n">id</span> <span class="o">&amp;&amp;</span> <span class="n">id</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">dto</span><span class="o">.</span><span class="na">getId</span><span class="o">()))</span> <span class="o">{</span> <span class="nt">%&gt;</span>
    <span class="nt">&lt;button</span> <span class="na">type=</span><span class="s">"button"</span> <span class="na">class=</span><span class="s">"btn"</span> 
      <span class="na">onclick=</span><span class="s">"location.href='./BoardModify.bo?num=</span><span class="nt">&lt;%=</span><span class="n">dto</span><span class="o">.</span><span class="na">getNum</span><span class="o">()</span><span class="nt">%&gt;</span><span class="s">&amp;pageNum=</span><span class="nt">&lt;%=</span><span class="n">pageNum</span><span class="nt">%&gt;</span><span class="s">';"</span><span class="nt">&gt;</span>수정하기<span class="nt">&lt;/button&gt;</span>
    <span class="nt">&lt;button</span> <span class="na">type=</span><span class="s">"button"</span> <span class="na">class=</span><span class="s">"btn"</span> 
      <span class="na">onclick=</span><span class="s">"location.href='./BoardDeleteConfirm.bo?num=</span><span class="nt">&lt;%=</span><span class="n">dto</span><span class="o">.</span><span class="na">getNum</span><span class="o">()</span><span class="nt">%&gt;</span><span class="s">&amp;pageNum=</span><span class="nt">&lt;%=</span><span class="n">pageNum</span><span class="nt">%&gt;</span><span class="s">';"</span><span class="nt">&gt;</span>삭제하기<span class="nt">&lt;/button&gt;</span>
  <span class="nt">&lt;%</span><span class="o">}</span> <span class="nt">%&gt;</span>
    <span class="nt">&lt;button</span> <span class="na">type=</span><span class="s">"button"</span> <span class="na">class=</span><span class="s">"btn"</span> 
      <span class="na">onclick=</span><span class="s">"location.href='./BoardReWrite.bo?num=</span><span class="nt">&lt;%=</span><span class="n">dto</span><span class="o">.</span><span class="na">getNum</span><span class="o">()</span><span class="nt">%&gt;</span><span class="s">&amp;re_ref=</span><span class="nt">&lt;%=</span><span class="n">dto</span><span class="o">.</span><span class="na">getRe_ref</span><span class="o">()</span><span class="nt">%&gt;</span><span class="s">&amp;re_lev=</span><span class="nt">&lt;%=</span><span class="n">dto</span><span class="o">.</span><span class="na">getRe_lev</span><span class="o">()</span><span class="nt">%&gt;</span><span class="s">&amp;re_seq=</span><span class="nt">&lt;%=</span><span class="n">dto</span><span class="o">.</span><span class="na">getRe_seq</span><span class="o">()</span><span class="nt">%&gt;</span><span class="s">';"</span><span class="nt">&gt;</span>답글쓰기<span class="nt">&lt;/button&gt;</span>
    <span class="nt">&lt;button</span> <span class="na">type=</span><span class="s">"button"</span> <span class="na">class=</span><span class="s">"btn"</span> 
      <span class="na">onclick=</span><span class="s">"location.href='./BoardList.bo?pageNum=</span><span class="nt">&lt;%=</span><span class="n">pageNum</span><span class="nt">%&gt;</span><span class="s">';"</span><span class="nt">&gt;</span>목록이동<span class="nt">&lt;/button&gt;</span>
<span class="nt">&lt;/div&gt;</span>
</code></pre></div></div>

<ul>
  <li>답글을 작성할 수 있는 페이지로 연결하는 링크를 추가했다.</li>
  <li>답글을 작성하려는 게시글 아래에 새로 작성한 답글을 배치할 것이기 때문에 작성하려는 답글 그룹의 정보인 <code class="language-plaintext highlighter-rouge">re_ref</code>, 답글의 들여쓰기 레벨 정보인 <code class="language-plaintext highlighter-rouge">re_lev</code>, 답글이 작성된 순서 정보인 <code class="language-plaintext highlighter-rouge">re_seq</code>들을 파라메터로 넘긴다.</li>
</ul>

<h2 id="boardfrontcontrollerjava">BoardFrontController.java</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.project.cafe.board.action</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.servlet.RequestDispatcher</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.ServletException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServlet</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletRequest</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletResponse</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">com.project.cafe.action.Action</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.project.cafe.action.ActionForward</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">BoardFrontController</span> <span class="kd">extends</span> <span class="nc">HttpServlet</span>
<span class="o">{</span>
    <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">doProcess</span><span class="o">(</span><span class="nc">HttpServletRequest</span> <span class="n">request</span><span class="o">,</span> <span class="nc">HttpServletResponse</span> <span class="n">response</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">ServletException</span><span class="o">,</span> <span class="nc">IOException</span> 
    <span class="o">{</span>
        <span class="c1">// 1. 전달되는 가상주소 계산</span>
        <span class="c1">// .. 생략</span>
		
        <span class="c1">// 2. 가상주소 매핑</span>
        <span class="nc">Action</span> <span class="n">action</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
        <span class="nc">ActionForward</span> <span class="n">forward</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
		
        <span class="c1">// .. 생략</span>
        <span class="k">else</span> 
        <span class="o">{</span>
            <span class="n">forward</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ActionForward</span><span class="o">();</span>

            <span class="c1">// .. 생략</span>
            <span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="n">command</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"/BoardReWrite.bo"</span><span class="o">))</span>
            <span class="o">{</span>
                <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"C : /BoardReWrite.bo 호출"</span><span class="o">);</span>
				
                <span class="n">forward</span><span class="o">.</span><span class="na">setPath</span><span class="o">(</span><span class="s">"./contents/boardReWrite.jsp"</span><span class="o">);</span>
            <span class="o">}</span>

            <span class="n">forward</span><span class="o">.</span><span class="na">setRedirect</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
        <span class="o">}</span>
		
        <span class="c1">// 3. 페이지 이동</span>
        <span class="c1">// .. 생략</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>컨트롤러에서 답글을 작성하는 페이지로 이동한다.</li>
</ul>

<h2 id="boardrewritejsp">boardReWrite.jsp</h2>

<div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;%@ page </span><span class="na">language=</span><span class="s">"java"</span><span class="na"> contentType=</span><span class="s">"text/html; charset=UTF-8"</span><span class="na">
    pageEncoding=</span><span class="s">"UTF-8"</span><span class="nt">%&gt;</span>
<span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="nt">&lt;html</span> <span class="na">lang=</span><span class="s">"en"</span><span class="nt">&gt;</span>

<span class="c">&lt;!-- Start Head --&gt;</span>
  <span class="nt">&lt;jsp:include </span><span class="na">page=</span><span class="s">"../inc/top.jsp"</span><span class="nt">&gt;&lt;/jsp:include&gt;</span>
  <span class="nt">&lt;script </span><span class="na">src=</span><span class="s">"${pageContext.request.contextPath }/js/boardWrite.js"</span><span class="nt">&gt;&lt;/script&gt;</span>
<span class="c">&lt;!-- End Head --&gt;</span>

<span class="nt">&lt;body</span> <span class="na">class=</span><span class="s">"modern"</span><span class="nt">&gt;</span>

<span class="c">&lt;!--
START MODULE AREA 2: Menu 1
--&gt;</span>
  <span class="nt">&lt;jsp:include </span><span class="na">page=</span><span class="s">"../inc/subTop.jsp"</span><span class="nt">&gt;&lt;/jsp:include&gt;</span>
<span class="c">&lt;!--
END MODULE AREA 2: Menu 1
--&gt;</span>

<span class="c">&lt;!--
START MODULE AREA 3: Sub Navigation 1
--&gt;</span>
<span class="nt">&lt;%</span>
    <span class="nc">String</span> <span class="n">id</span> <span class="o">=</span> <span class="o">(</span><span class="nc">String</span><span class="o">)</span><span class="n">session</span><span class="o">.</span><span class="na">getAttribute</span><span class="o">(</span><span class="s">"id"</span><span class="o">);</span>
    <span class="k">if</span> <span class="o">(</span><span class="kc">null</span> <span class="o">==</span> <span class="n">id</span><span class="o">)</span>
        <span class="n">response</span><span class="o">.</span><span class="na">sendRedirect</span><span class="o">(</span><span class="s">"./login.me"</span><span class="o">);</span>
<span class="nt">%&gt;</span>
<span class="nt">&lt;section</span> <span class="na">class=</span><span class="s">"MOD_SUBNAVIGATION1"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;div</span> <span class="na">data-layout=</span><span class="s">"_r"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;jsp:include </span><span class="na">page=</span><span class="s">"../inc/leftNav.jsp"</span><span class="nt">&gt;&lt;/jsp:include&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">data-layout=</span><span class="s">"al-o1 de-o2 de10"</span> <span class="na">class=</span><span class="s">"MOD_SUBNAVIGATION1_Page"</span><span class="nt">&gt;</span>
      <span class="nt">&lt;h2&gt;</span>답글 작성<span class="nt">&lt;/h2&gt;</span>
      <span class="nt">&lt;form</span> <span class="na">name=</span><span class="s">"write"</span> <span class="na">action=</span><span class="s">"./BoardReWriteAction.bo"</span> <span class="na">method=</span><span class="s">"post"</span> <span class="na">onsubmit=</span><span class="s">"return finalCheck();"</span><span class="nt">&gt;</span>
    	
        <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"hidden"</span> <span class="na">name=</span><span class="s">"id"</span> <span class="na">value=</span><span class="s">"</span><span class="nt">&lt;%=</span><span class="n">id</span><span class="nt">%&gt;</span><span class="s">"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"hidden"</span> <span class="na">name=</span><span class="s">"num"</span> <span class="na">value=</span><span class="s">"</span><span class="nt">&lt;%=</span><span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"num"</span><span class="o">)</span><span class="nt">%&gt;</span><span class="s">"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"hidden"</span> <span class="na">name=</span><span class="s">"re_ref"</span> <span class="na">value=</span><span class="s">"</span><span class="nt">&lt;%=</span><span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"re_ref"</span><span class="o">)</span><span class="nt">%&gt;</span><span class="s">"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"hidden"</span> <span class="na">name=</span><span class="s">"re_lev"</span> <span class="na">value=</span><span class="s">"</span><span class="nt">&lt;%=</span><span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"re_lev"</span><span class="o">)</span><span class="nt">%&gt;</span><span class="s">"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"hidden"</span> <span class="na">name=</span><span class="s">"re_seq"</span> <span class="na">value=</span><span class="s">"</span><span class="nt">&lt;%=</span><span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"re_seq"</span><span class="o">)</span><span class="nt">%&gt;</span><span class="s">"</span><span class="nt">&gt;</span>
    	
        <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"formRow"</span><span class="nt">&gt;</span>
          <span class="nt">&lt;label</span> <span class="na">for=</span><span class="s">"MOD_TEXTFORM_NameField"</span><span class="nt">&gt;</span>제목 <span class="nt">&lt;/label&gt;&lt;input</span> <span class="na">type=</span><span class="s">"text"</span> <span class="na">name=</span><span class="s">"title"</span> <span class="na">id=</span><span class="s">"title"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;/div&gt;</span>
        <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"formRow"</span><span class="nt">&gt;</span>
          <span class="nt">&lt;label</span> <span class="na">for=</span><span class="s">"MOD_TEXTFORM_MsgField"</span><span class="nt">&gt;</span>내용 <span class="nt">&lt;/label&gt;</span>
          <span class="nt">&lt;textarea</span> <span class="na">id=</span><span class="s">"MOD_TEXTFORM_MsgField"</span> <span class="na">name=</span><span class="s">"content"</span><span class="nt">&gt;&lt;/textarea&gt;</span>
        <span class="nt">&lt;/div&gt;</span>

        <span class="nt">&lt;button</span> <span class="na">type=</span><span class="s">"submit"</span> <span class="na">class=</span><span class="s">"btn"</span><span class="nt">&gt;</span>글 등록<span class="nt">&lt;/button&gt;</span>
      <span class="nt">&lt;/form&gt;</span>
    <span class="nt">&lt;/div&gt;</span>
  <span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/section&gt;</span>
<span class="c">&lt;!--
END MODULE AREA 3: Sub Navigation 1
--&gt;</span>

<span class="c">&lt;!--
START MODULE AREA 5: Footer 2
--&gt;</span>
  <span class="nt">&lt;jsp:include </span><span class="na">page=</span><span class="s">"../inc/bottom.jsp"</span><span class="nt">&gt;&lt;/jsp:include&gt;</span>
<span class="c">&lt;!--
END MODULE AREA 5: Footer 2
--&gt;</span>

<span class="nt">&lt;script </span><span class="na">src=</span><span class="s">"${pageContext.request.contextPath }/js/index.js"</span><span class="nt">&gt;&lt;/script&gt;</span>
<span class="nt">&lt;/body&gt;</span>

<span class="nt">&lt;/html&gt;</span>
</code></pre></div></div>

<ul>
  <li>게시글을 작성하는 페이지인 <code class="language-plaintext highlighter-rouge">boardWrite.jsp</code>와 크게 달라지는 것이 없어서 복사해서 썼다.</li>
  <li>답글 작성에 필요한 정보들만 추가로 저장하는 <code class="language-plaintext highlighter-rouge">input</code> 태그를 추가했다.</li>
</ul>

<h2 id="boardfrontcontrollerjava-1">BoardFrontController.java</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.project.cafe.board.action</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.servlet.RequestDispatcher</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.ServletException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServlet</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletRequest</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletResponse</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">com.project.cafe.action.Action</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.project.cafe.action.ActionForward</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">BoardFrontController</span> <span class="kd">extends</span> <span class="nc">HttpServlet</span>
<span class="o">{</span>
    <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">doProcess</span><span class="o">(</span><span class="nc">HttpServletRequest</span> <span class="n">request</span><span class="o">,</span> <span class="nc">HttpServletResponse</span> <span class="n">response</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">ServletException</span><span class="o">,</span> <span class="nc">IOException</span> 
    <span class="o">{</span>
        <span class="c1">// 1. 전달되는 가상주소 계산</span>
        <span class="c1">// .. 생략</span>
		
        <span class="c1">// 2. 가상주소 매핑</span>
        <span class="nc">Action</span> <span class="n">action</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
        <span class="nc">ActionForward</span> <span class="n">forward</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
		
        <span class="c1">// .. 생략</span>
        <span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="n">command</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"/BoardReWriteAction.bo"</span><span class="o">))</span>
        <span class="o">{</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"C : /BoardReWriteAction.bo 호출"</span><span class="o">);</span>
			
            <span class="n">action</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BoardReWriteAction</span><span class="o">();</span>
			
            <span class="k">try</span> <span class="o">{</span>
                <span class="n">forward</span> <span class="o">=</span> <span class="n">action</span><span class="o">.</span><span class="na">execute</span><span class="o">(</span><span class="n">request</span><span class="o">,</span> <span class="n">response</span><span class="o">);</span>
            <span class="o">}</span>
            <span class="k">catch</span> <span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
            <span class="o">}</span>
        <span class="o">}</span>
		
        <span class="c1">// 3. 페이지 이동</span>
        <span class="c1">// .. 생략</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">DB</code>에 접속해서 새 글을 삽입하는 동작을 수행해야 하니까 서블릿으로 연결한다.</li>
</ul>

<h2 id="boardrewriteactionjava">BoardReWriteAction.java</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.project.cafe.board.action</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletRequest</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletResponse</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">com.project.cafe.action.Action</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.project.cafe.action.ActionForward</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.project.cafe.board.db.BoardDAO</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.project.cafe.board.db.BoardDTO</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">BoardReWriteAction</span> <span class="kd">implements</span> <span class="nc">Action</span> 
<span class="o">{</span>
    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="nc">ActionForward</span> <span class="nf">execute</span><span class="o">(</span><span class="nc">HttpServletRequest</span> <span class="n">request</span><span class="o">,</span> <span class="nc">HttpServletResponse</span> <span class="n">response</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">Exception</span> 
    <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"M : BoardReWriteAction - execute() 호출"</span><span class="o">);</span>
		
        <span class="c1">// 한글처리</span>
        <span class="n">request</span><span class="o">.</span><span class="na">setCharacterEncoding</span><span class="o">(</span><span class="s">"UTF-8"</span><span class="o">);</span>
		
        <span class="c1">// 파라메터 저장</span>
        <span class="nc">BoardDTO</span> <span class="n">dto</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BoardDTO</span><span class="o">();</span>
        <span class="n">dto</span><span class="o">.</span><span class="na">setContent</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"content"</span><span class="o">));</span>
        <span class="n">dto</span><span class="o">.</span><span class="na">setId</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"id"</span><span class="o">));</span>
        <span class="n">dto</span><span class="o">.</span><span class="na">setIp</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getRemoteAddr</span><span class="o">());</span>
        <span class="n">dto</span><span class="o">.</span><span class="na">setNum</span><span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"num"</span><span class="o">)));</span>
        <span class="n">dto</span><span class="o">.</span><span class="na">setRe_lev</span><span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"re_lev"</span><span class="o">)));</span>
        <span class="n">dto</span><span class="o">.</span><span class="na">setRe_ref</span><span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"re_ref"</span><span class="o">)));</span>
        <span class="n">dto</span><span class="o">.</span><span class="na">setRe_seq</span><span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"re_seq"</span><span class="o">)));</span>
        <span class="n">dto</span><span class="o">.</span><span class="na">setReadcount</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
        <span class="n">dto</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"title"</span><span class="o">));</span>
		
        <span class="c1">// DB 연결해서 글 저장</span>
        <span class="nc">BoardDAO</span> <span class="n">dao</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BoardDAO</span><span class="o">();</span>
        <span class="n">dao</span><span class="o">.</span><span class="na">reWritePost</span><span class="o">(</span><span class="n">dto</span><span class="o">);</span>
		
        <span class="c1">// 게시글 목록으로 이동</span>
        <span class="nc">ActionForward</span> <span class="n">forward</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ActionForward</span><span class="o">();</span>
        <span class="n">forward</span><span class="o">.</span><span class="na">setPath</span><span class="o">(</span><span class="s">"./BoardList.bo"</span><span class="o">);</span>
        <span class="n">forward</span><span class="o">.</span><span class="na">setRedirect</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
		
        <span class="k">return</span> <span class="n">forward</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>새 글을 삽입하는 동작이기 때문에 기본적인 틀은 <code class="language-plaintext highlighter-rouge">BoardWriteAction.java</code>와 같지만 부모가 되는 게시글을 설정해 주어야 하기 때문에 <code class="language-plaintext highlighter-rouge">DAO</code> 객체의 호출 함수가 다르다.</li>
</ul>

<h2 id="boarddaojava---rewritepostdto">BoardDAO.java - reWritePost(dto)</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kt">void</span> <span class="nf">reWritePost</span><span class="o">(</span><span class="nc">BoardDTO</span> <span class="n">dto</span><span class="o">)</span>
<span class="o">{</span>
    <span class="kt">int</span> <span class="n">curNum</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="c1">// 이번에 쓸 글 번호</span>
		
    <span class="k">try</span> <span class="o">{</span>
        <span class="n">con</span> <span class="o">=</span> <span class="n">getCon</span><span class="o">();</span>
			
        <span class="c1">// 글 번호 계산</span>
        <span class="n">sql</span> <span class="o">=</span> <span class="s">"select max(num) from cafe_board"</span><span class="o">;</span>
        <span class="n">pstmt</span> <span class="o">=</span> <span class="n">con</span><span class="o">.</span><span class="na">prepareStatement</span><span class="o">(</span><span class="n">sql</span><span class="o">);</span>
			
        <span class="n">rs</span> <span class="o">=</span> <span class="n">pstmt</span><span class="o">.</span><span class="na">executeQuery</span><span class="o">();</span>
			
        <span class="k">if</span> <span class="o">(</span><span class="n">rs</span><span class="o">.</span><span class="na">next</span><span class="o">())</span>
            <span class="n">curNum</span> <span class="o">=</span> <span class="n">rs</span><span class="o">.</span><span class="na">getInt</span><span class="o">(</span><span class="mi">1</span><span class="o">)</span> <span class="o">+</span> <span class="mi">1</span><span class="o">;</span>
			
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"DAO : 답글번호 : "</span><span class="o">+</span><span class="n">curNum</span><span class="o">);</span>
			
        <span class="c1">// 답글순서 재배치(seq 변경)</span>
        <span class="c1">// re_ref 가 같은 그룹내에서 update 동작 수행 - re_seq값이 기존값보다 큰 값이 있을 때 re_seq + 1</span>
        <span class="c1">// 없으면(0) 정렬할 게 없으니까 그냥 지나갈 것임</span>
        <span class="n">sql</span> <span class="o">=</span> <span class="s">"update cafe_board set re_seq = re_seq + 1 where re_ref = ? and re_seq &gt; ?"</span><span class="o">;</span>
        <span class="n">pstmt</span> <span class="o">=</span> <span class="n">con</span><span class="o">.</span><span class="na">prepareStatement</span><span class="o">(</span><span class="n">sql</span><span class="o">);</span>
			
        <span class="n">pstmt</span><span class="o">.</span><span class="na">setInt</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="n">dto</span><span class="o">.</span><span class="na">getRe_ref</span><span class="o">());</span>
        <span class="n">pstmt</span><span class="o">.</span><span class="na">setInt</span><span class="o">(</span><span class="mi">2</span><span class="o">,</span> <span class="n">dto</span><span class="o">.</span><span class="na">getRe_seq</span><span class="o">());</span>
			
        <span class="kt">int</span> <span class="n">result</span> <span class="o">=</span> <span class="n">pstmt</span><span class="o">.</span><span class="na">executeUpdate</span><span class="o">();</span>
        <span class="k">if</span> <span class="o">(</span><span class="mi">0</span> <span class="o">&lt;</span> <span class="n">result</span><span class="o">)</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"DAO : 답글 순서 재배치"</span><span class="o">);</span>
			
        <span class="c1">// 답글 저장 동작 수행</span>
        <span class="n">sql</span> <span class="o">=</span> <span class="s">"insert into cafe_board(num, id, title, content, readcount, re_ref, re_lev, re_seq, date, ip, file)"</span>
            <span class="o">+</span> <span class="s">" values(?,?,?,?,?,?,?,?,now(),?,?)"</span><span class="o">;</span>
        <span class="n">pstmt</span> <span class="o">=</span> <span class="n">con</span><span class="o">.</span><span class="na">prepareStatement</span><span class="o">(</span><span class="n">sql</span><span class="o">);</span>
			
        <span class="n">pstmt</span><span class="o">.</span><span class="na">setInt</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="n">curNum</span><span class="o">);</span>
        <span class="n">pstmt</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="mi">2</span><span class="o">,</span> <span class="n">dto</span><span class="o">.</span><span class="na">getId</span><span class="o">());</span>
        <span class="n">pstmt</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="mi">3</span><span class="o">,</span> <span class="n">dto</span><span class="o">.</span><span class="na">getTitle</span><span class="o">());</span>
        <span class="n">pstmt</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="mi">4</span><span class="o">,</span> <span class="n">dto</span><span class="o">.</span><span class="na">getContent</span><span class="o">());</span>
        <span class="n">pstmt</span><span class="o">.</span><span class="na">setInt</span><span class="o">(</span><span class="mi">5</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span>
			
        <span class="n">pstmt</span><span class="o">.</span><span class="na">setInt</span><span class="o">(</span><span class="mi">6</span><span class="o">,</span> <span class="n">dto</span><span class="o">.</span><span class="na">getRe_ref</span><span class="o">());</span> <span class="c1">// 게시글 그룹</span>
        <span class="n">pstmt</span><span class="o">.</span><span class="na">setInt</span><span class="o">(</span><span class="mi">7</span><span class="o">,</span> <span class="n">dto</span><span class="o">.</span><span class="na">getRe_lev</span><span class="o">()</span> <span class="o">+</span> <span class="mi">1</span><span class="o">);</span> <span class="c1">// 들여쓰기 - 기준글 + 1</span>
        <span class="n">pstmt</span><span class="o">.</span><span class="na">setInt</span><span class="o">(</span><span class="mi">8</span><span class="o">,</span> <span class="n">dto</span><span class="o">.</span><span class="na">getRe_seq</span><span class="o">()</span> <span class="o">+</span> <span class="mi">1</span><span class="o">);</span> <span class="c1">// 그룹 내 순서 - 기준글 + 1</span>
			
        <span class="n">pstmt</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="mi">9</span><span class="o">,</span> <span class="n">dto</span><span class="o">.</span><span class="na">getIp</span><span class="o">());</span>
        <span class="n">pstmt</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="mi">10</span><span class="o">,</span> <span class="n">dto</span><span class="o">.</span><span class="na">getFile</span><span class="o">());</span>
			
        <span class="n">pstmt</span><span class="o">.</span><span class="na">executeUpdate</span><span class="o">();</span>
			
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"DAO : 답글 작성 완료"</span><span class="o">);</span>
    <span class="o">}</span>
    <span class="k">catch</span> <span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
    <span class="o">}</span>
    <span class="k">finally</span> <span class="o">{</span>
        <span class="n">closeDB</span><span class="o">();</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>답글을 작성할 때 <code class="language-plaintext highlighter-rouge">re_ref</code> 필드를 이용해 부모 글을 설정해 준 다음 들여쓰기 레벨과 게시글 그룹 내 순서를 설정해 준다.</li>
  <li>자세한 알고리즘은 <a href="https://miro7923.github.io/project%20log/cafe-project-17/">프로젝트) Cafe(웹 사이트) 만들기 17 - 게시판 답글 작성 알고리즘</a> 포스트에 따로 작성했다.</li>
</ul>

<h2 id="boardlistjsp">boardList.jsp</h2>

<div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;thead&gt;</span>
  <span class="nt">&lt;tr&gt;</span>
    <span class="nt">&lt;th</span> <span class="na">scope=</span><span class="s">"cols"</span><span class="nt">&gt;</span>No.<span class="nt">&lt;/th&gt;</span>
    <span class="nt">&lt;th</span> <span class="na">scope=</span><span class="s">"cols"</span><span class="nt">&gt;</span>제목<span class="nt">&lt;/th&gt;</span>
    <span class="nt">&lt;th</span> <span class="na">scope=</span><span class="s">"cols"</span><span class="nt">&gt;</span>작성자<span class="nt">&lt;/th&gt;</span>
    <span class="nt">&lt;th</span> <span class="na">scope=</span><span class="s">"cols"</span><span class="nt">&gt;</span>작성일<span class="nt">&lt;/th&gt;</span>
    <span class="nt">&lt;th</span> <span class="na">scope=</span><span class="s">"cols"</span><span class="nt">&gt;</span>조회수<span class="nt">&lt;/th&gt;</span>
  <span class="nt">&lt;/tr&gt;</span>
<span class="nt">&lt;/thead&gt;</span>
<span class="nt">&lt;tbody&gt;</span>
<span class="nt">&lt;%</span>
    <span class="k">if</span> <span class="o">(</span><span class="kc">null</span> <span class="o">!=</span> <span class="n">postList</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">postList</span><span class="o">.</span><span class="na">size</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span> 
        <span class="o">{</span>
            <span class="nc">BoardDTO</span> <span class="n">dto</span> <span class="o">=</span> <span class="n">postList</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
<span class="nt">%&gt;</span>
  <span class="nt">&lt;tr&gt;</span>
    <span class="nt">&lt;th</span> <span class="na">scope=</span><span class="s">"row"</span><span class="nt">&gt;&lt;%=</span><span class="n">dto</span><span class="o">.</span><span class="na">getNum</span><span class="o">()</span> <span class="nt">%&gt;&lt;/th&gt;</span>
    <span class="nt">&lt;td&gt;</span>
    <span class="nt">&lt;%</span>
        <span class="kt">int</span> <span class="n">width</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="k">if</span> <span class="o">(</span><span class="mi">0</span> <span class="o">&lt;</span> <span class="n">dto</span><span class="o">.</span><span class="na">getRe_lev</span><span class="o">())</span> <span class="c1">// 답글일 때</span>
        <span class="o">{</span>
            <span class="n">width</span> <span class="o">=</span> <span class="mi">10</span> <span class="o">*</span> <span class="n">dto</span><span class="o">.</span><span class="na">getRe_lev</span><span class="o">();</span>
    <span class="nt">%&gt;</span>
      <span class="nt">&lt;img</span> <span class="na">class=</span><span class="s">"reImg"</span> <span class="na">src=</span><span class="s">"./contents/level.gif"</span> <span class="na">width=</span><span class="s">"</span><span class="nt">&lt;%=</span><span class="n">width</span><span class="nt">%&gt;</span><span class="s">"</span> <span class="na">height=</span><span class="s">"15"</span><span class="nt">&gt;</span>
      <span class="nt">&lt;img</span> <span class="na">class=</span><span class="s">"reImg"</span> <span class="na">src=</span><span class="s">"./contents/re.gif"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;%</span>
        <span class="o">}</span>
    <span class="nt">%&gt;</span>
      <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"./BoardContent.bo?num=</span><span class="nt">&lt;%=</span><span class="n">dto</span><span class="o">.</span><span class="na">getNum</span><span class="o">()</span><span class="nt">%&gt;</span><span class="s">&amp;pageNum=</span><span class="nt">&lt;%=</span><span class="n">pageNum</span><span class="nt">%&gt;</span><span class="s">"</span><span class="nt">&gt;&lt;%=</span><span class="n">dto</span><span class="o">.</span><span class="na">getTitle</span><span class="o">()</span> <span class="nt">%&gt;&lt;/a&gt;</span>
    <span class="nt">&lt;/td&gt;</span>
    <span class="nt">&lt;td&gt;&lt;%=</span><span class="n">dto</span><span class="o">.</span><span class="na">getId</span><span class="o">()</span> <span class="nt">%&gt;&lt;/td&gt;</span>
    <span class="nt">&lt;td&gt;&lt;%=</span><span class="n">dto</span><span class="o">.</span><span class="na">getDate</span><span class="o">()</span> <span class="nt">%&gt;&lt;/td&gt;</span>
    <span class="nt">&lt;td&gt;&lt;%=</span><span class="n">dto</span><span class="o">.</span><span class="na">getReadcount</span><span class="o">()</span> <span class="nt">%&gt;&lt;/td&gt;</span>
  <span class="nt">&lt;/tr&gt;</span>
<span class="nt">&lt;%</span><span class="o">}}</span> <span class="nt">%&gt;</span>
<span class="nt">&lt;/tbody&gt;</span>
</code></pre></div></div>

<ul>
  <li>새 글 삽입 과정이 끝나고 나면 게시글 목록에서 새로 작성된 답글을 확인할 수 있다.</li>
  <li>답글은 따로 표시하기 위해서 이미지를 추가했다.</li>
  <li>이 때 더미 이미지(<code class="language-plaintext highlighter-rouge">level.gif</code>)를 이용해 들여쓰기 레벨에 따라 들여쓰기를 먼저 한 뒤 답글 이미지(<code class="language-plaintext highlighter-rouge">re.gif</code>)를 표시하고 제목을 출력한다.</li>
</ul>

<p align="center"><img src="../../assets/images/replyList.png" width="600" /></p>

<ul>
  <li>다음에 만들 기능은 파일 업로드 기능!<br /><br /><br /></li>
</ul>

<h1 id="마감까지">마감까지</h1>
<ul>
  <li><code class="language-plaintext highlighter-rouge">D-10</code></li>
</ul>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="Project Log" /><category term="Project" /><category term="Cafe" /><category term="Log" /><summary type="html"><![CDATA[개발환경 MacBook Air (M1, 2020) OpenJDK 8 Eclipse 2021-12 tomcat 8.5 MySQL Workbench 8.0.19]]></summary></entry></feed>