<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2022-03-13T23:36:11+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Yujin Dev Log</title><subtitle>개발 공부하는 블로그</subtitle><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><entry><title type="html">프로젝트) Cafe(웹 사이트) 만들기 7 - 로그인 기능 구현</title><link href="http://localhost:4000/project%20log/cafe-project-07/" rel="alternate" type="text/html" title="프로젝트) Cafe(웹 사이트) 만들기 7 - 로그인 기능 구현" /><published>2022-03-13T00:00:00+09:00</published><updated>2022-03-13T00:00:00+09:00</updated><id>http://localhost:4000/project%20log/cafe-project-07</id><content type="html" xml:base="http://localhost:4000/project%20log/cafe-project-07/"><![CDATA[<h1 id="개발환경">개발환경</h1>
<ul>
  <li>MacBook Air (M1, 2020)</li>
  <li>OpenJDK 8</li>
  <li>Eclipse 2021-12</li>
  <li>tomcat 8.5<br /><br /><br /></li>
</ul>

<h1 id="시작">시작</h1>
<ul>
  <li>2022.3.4 ~ <br /><br /><br /></li>
</ul>

<h1 id="주제">주제</h1>
<ul>
  <li>웹 백엔드 수업 중 중간 과제로 개인 프로젝트를 진행하게 되었다.</li>
  <li>회원가입/로그인/탈퇴 등 기본적인 회원관리 시스템을 가진 웹 사이트를 만드는 것이다. 주어진 기한은 <code class="language-plaintext highlighter-rouge">한 달</code></li>
  <li>나는 <code class="language-plaintext highlighter-rouge">다음 카페</code>를 소규모로 만들어 보기로 했다. 평소 자주 이용하기도 했고 과제의 평가 기준에서 요구하는 기능들을 다 담고 있기도 했기 때문에 이번 기회에 구현해 보면 그동안 배운 것들을 활용하기에 좋을 거 같았다.</li>
  <li>평가 기준에 사이트의 디자인 구현(HTML/CSS 등 프론트엔드)은 포함되지 않기 때문에 본인이 쓰고 싶은 HTML/CSS 템플릿을 구한 뒤 회원 관리 기능을 구현하면 된다.<br /><br /><br /></li>
</ul>

<h1 id="진행상황">진행상황</h1>
<ul>
  <li>오늘은 로그인 기능을 만들었다.</li>
</ul>

<h2 id="1-loginjsp-페이지-준비">1. login.jsp 페이지 준비</h2>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code>...
생략

<span class="nt">&lt;h3&gt;</span>로그인<span class="nt">&lt;/h3&gt;</span>
<span class="nt">&lt;form</span> <span class="na">name=</span><span class="s">"login"</span> <span class="na">action=</span><span class="s">"./main.me"</span> <span class="na">method=</span><span class="s">"post"</span> <span class="na">onsubmit=</span><span class="s">"return finalCheck();"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"formRow"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;label</span> <span class="na">for=</span><span class="s">"MOD_TEXTFORM_NameField"</span><span class="nt">&gt;</span>아이디 <span class="nt">&lt;/label&gt;&lt;input</span> <span class="na">id=</span><span class="s">"id"</span> <span class="na">type=</span><span class="s">"text"</span> <span class="na">name=</span><span class="s">"id"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;/div&gt;</span>
        <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"formRow"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;label</span> <span class="na">for=</span><span class="s">"MOD_TEXTFORM_NameField"</span><span class="nt">&gt;</span>비밀번호 <span class="nt">&lt;/label&gt;&lt;input</span> <span class="na">id=</span><span class="s">"pass"</span> <span class="na">type=</span><span class="s">"password"</span> <span class="na">name=</span><span class="s">"pass"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;/div&gt;</span>
    <span class="nt">&lt;button</span> <span class="na">type=</span><span class="s">"submit"</span> <span class="na">class=</span><span class="s">"btn"</span><span class="nt">&gt;</span>Login<span class="nt">&lt;/button&gt;</span>
<span class="nt">&lt;/form&gt;</span>

...
생략
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">submit</code> 버튼을 누르면 메인페이지로 이동하되 <code class="language-plaintext highlighter-rouge">DB</code> 조회 결과 확인 후 이동하도록 <code class="language-plaintext highlighter-rouge">onsubmit</code> 조건을 걸어주었다.</li>
</ul>

<h2 id="2-loginjs-생성">2. login.js 생성</h2>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">$login</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>

<span class="kd">function</span> <span class="nx">loginCheck</span><span class="p">()</span> 
<span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">loginCheck() 호출</span><span class="dl">"</span><span class="p">);</span>
    <span class="nx">$</span><span class="p">.</span><span class="nx">ajax</span><span class="p">({</span>
        <span class="na">type</span><span class="p">:</span> <span class="dl">'</span><span class="s1">POST</span><span class="dl">'</span><span class="p">,</span>
        <span class="na">async</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
        <span class="na">url</span><span class="p">:</span> <span class="dl">"</span><span class="s2">./LoginCheck.me</span><span class="dl">"</span><span class="p">,</span>
        <span class="na">data</span><span class="p">:</span> <span class="p">{</span>
            <span class="dl">'</span><span class="s1">id</span><span class="dl">'</span><span class="p">:</span> <span class="nx">$</span><span class="p">(</span><span class="dl">"</span><span class="s2">#id</span><span class="dl">"</span><span class="p">).</span><span class="nx">val</span><span class="p">(),</span>
            <span class="dl">'</span><span class="s1">pass</span><span class="dl">'</span><span class="p">:</span> <span class="nx">$</span><span class="p">(</span><span class="dl">"</span><span class="s2">#pass</span><span class="dl">"</span><span class="p">).</span><span class="nx">val</span><span class="p">()</span>
        <span class="p">},</span>
        <span class="na">dataType</span><span class="p">:</span> <span class="dl">'</span><span class="s1">text</span><span class="dl">'</span><span class="p">,</span>
        <span class="na">success</span><span class="p">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">data</span><span class="p">)</span> 
        <span class="p">{</span>
            <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">success data : </span><span class="dl">"</span> <span class="o">+</span> <span class="nx">data</span><span class="p">);</span>
            <span class="k">if</span> <span class="p">(</span><span class="mi">1</span> <span class="o">==</span> <span class="nx">data</span><span class="p">)</span> 
            <span class="p">{</span>
                <span class="c1">// 회원</span>
                <span class="nx">$login</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
                <span class="nx">alert</span><span class="p">(</span><span class="dl">"</span><span class="s2">로그인 성공!</span><span class="dl">"</span><span class="p">);</span>
                <span class="nx">location</span><span class="p">.</span><span class="nx">href</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">./main.me</span><span class="dl">"</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="mi">0</span> <span class="o">==</span> <span class="nx">data</span><span class="p">)</span> 
            <span class="p">{</span>
                <span class="c1">// 비밀번호 오류</span>
                <span class="nx">alert</span><span class="p">(</span><span class="dl">"</span><span class="s2">아이디 혹은 비밀번호가 일치하지 않습니다!</span><span class="dl">"</span><span class="p">);</span>
                <span class="nx">$login</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="k">else</span> 
            <span class="p">{</span>
                <span class="c1">// 비회원</span>
                <span class="nx">alert</span><span class="p">(</span><span class="dl">"</span><span class="s2">회원이 아닙니다.</span><span class="dl">"</span><span class="p">);</span>
                <span class="nx">$login</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">},</span>
        <span class="na">error</span><span class="p">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">data</span><span class="p">)</span> 
        <span class="p">{</span>
            <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">error</span><span class="dl">"</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="p">});</span>
<span class="p">}</span>

<span class="kd">function</span> <span class="nx">finalCheck</span><span class="p">()</span> 
<span class="p">{</span>
    <span class="nx">loginCheck</span><span class="p">();</span>
    <span class="k">if</span> <span class="p">(</span><span class="nx">$login</span><span class="p">)</span>
        <span class="k">return</span> <span class="kc">true</span><span class="p">;</span>
    <span class="k">else</span>
        <span class="k">return</span> <span class="kc">false</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">Ajax</code>로 <code class="language-plaintext highlighter-rouge">DB</code> 조회 결과를 알아오도록 했다.</li>
</ul>

<h2 id="3-db-조회-결과를-알려줄-서블릿-생성">3. DB 조회 결과를 알려줄 서블릿 생성</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.PrintWriter</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.servlet.ServletException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.annotation.WebServlet</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServlet</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletRequest</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletResponse</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpSession</span><span class="o">;</span>

<span class="nd">@WebServlet</span><span class="o">(</span><span class="s">"/LoginCheck.me"</span><span class="o">)</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">LoginCheck</span> <span class="kd">extends</span> <span class="nc">HttpServlet</span>
<span class="o">{</span>
    <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">doProcess</span><span class="o">(</span><span class="nc">HttpServletRequest</span> <span class="n">req</span><span class="o">,</span> <span class="nc">HttpServletResponse</span> <span class="n">resp</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">ServletException</span><span class="o">,</span> <span class="nc">IOException</span> 
    <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"M : LoginCheck - doProcess() 호출"</span><span class="o">);</span>
		
        <span class="n">req</span><span class="o">.</span><span class="na">setCharacterEncoding</span><span class="o">(</span><span class="s">"UTF-8"</span><span class="o">);</span>
        <span class="n">resp</span><span class="o">.</span><span class="na">setContentType</span><span class="o">(</span><span class="s">"text/html; charset=utf-8"</span><span class="o">);</span>
		
        <span class="nc">PrintWriter</span> <span class="n">out</span> <span class="o">=</span> <span class="n">resp</span><span class="o">.</span><span class="na">getWriter</span><span class="o">();</span>
        <span class="nc">HttpSession</span> <span class="n">session</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
        <span class="nc">MemberDAO</span> <span class="n">dao</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">MemberDAO</span><span class="o">();</span>
		
        <span class="nc">MemberDTO</span> <span class="n">dto</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">MemberDTO</span><span class="o">();</span>
        <span class="n">dto</span><span class="o">.</span><span class="na">setId</span><span class="o">(</span><span class="n">req</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"id"</span><span class="o">));</span>
        <span class="n">dto</span><span class="o">.</span><span class="na">setPass</span><span class="o">(</span><span class="n">req</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"pass"</span><span class="o">));</span>
		
        <span class="kt">int</span> <span class="n">result</span> <span class="o">=</span> <span class="n">dao</span><span class="o">.</span><span class="na">loginCheck</span><span class="o">(</span><span class="n">dto</span><span class="o">);</span>
        <span class="k">if</span> <span class="o">(</span><span class="mi">1</span> <span class="o">==</span> <span class="n">result</span><span class="o">)</span>
        <span class="o">{</span>
            <span class="n">session</span> <span class="o">=</span> <span class="n">req</span><span class="o">.</span><span class="na">getSession</span><span class="o">();</span>
            <span class="n">session</span><span class="o">.</span><span class="na">setAttribute</span><span class="o">(</span><span class="s">"id"</span><span class="o">,</span> <span class="n">dto</span><span class="o">.</span><span class="na">getId</span><span class="o">());</span>
        <span class="o">}</span>
		
        <span class="n">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="n">result</span><span class="o">);</span>
		
        <span class="n">out</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
    <span class="o">}</span>
	
    <span class="nd">@Override</span>
    <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">doGet</span><span class="o">(</span><span class="nc">HttpServletRequest</span> <span class="n">req</span><span class="o">,</span> <span class="nc">HttpServletResponse</span> <span class="n">resp</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">ServletException</span><span class="o">,</span> <span class="nc">IOException</span> 
    <span class="o">{</span>
        <span class="n">doProcess</span><span class="o">(</span><span class="n">req</span><span class="o">,</span> <span class="n">resp</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="nd">@Override</span>
    <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">doPost</span><span class="o">(</span><span class="nc">HttpServletRequest</span> <span class="n">req</span><span class="o">,</span> <span class="nc">HttpServletResponse</span> <span class="n">resp</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">ServletException</span><span class="o">,</span> <span class="nc">IOException</span> 
    <span class="o">{</span>
        <span class="n">doProcess</span><span class="o">(</span><span class="n">req</span><span class="o">,</span> <span class="n">resp</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>로그인에 성공했을 때에만 세션 값을 설정해 주었다.</li>
</ul>

<h2 id="4-topjsp에서-로그인-유무에-따라-상단-메뉴-다르게-출력하기">4. top.jsp에서 로그인 유무에 따라 상단 메뉴 다르게 출력하기</h2>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;p</span> <span class="na">class=</span><span class="s">"MOD_HEADER1_Phone"</span><span class="nt">&gt;</span>
<span class="nt">&lt;</span><span class="err">%</span>
    <span class="na">String</span> <span class="na">id = </span><span class="s">(String)session.getAttribute("id");</span>
    <span class="na">System.out.println</span><span class="err">("</span><span class="na">session</span> <span class="na">id</span> <span class="na">:</span> <span class="err">"</span> <span class="err">+</span> <span class="na">id</span><span class="err">);</span>
		
    <span class="na">if</span> <span class="na">(null =</span><span class="s">=</span> <span class="na">id</span><span class="err">)</span>
    <span class="err">{</span>
        <span class="err">%</span><span class="nt">&gt;</span>
            <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"./login.me"</span><span class="nt">&gt;</span>로그인<span class="nt">&lt;/a&gt;</span><span class="ni">&amp;nbsp;&amp;nbsp;&amp;nbsp;</span>
            <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"./join.me"</span><span class="nt">&gt;</span>회원가입<span class="nt">&lt;/a&gt;</span>
        <span class="nt">&lt;</span><span class="err">%</span>
    <span class="err">}</span>
    <span class="na">else</span> 
    <span class="err">{</span>
        <span class="err">%</span><span class="nt">&gt;</span>
            <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"./logout.me"</span><span class="nt">&gt;</span>로그아웃<span class="nt">&lt;/a&gt;</span><span class="ni">&amp;nbsp;&amp;nbsp;&amp;nbsp;</span>
            <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"./myPage.me"</span><span class="nt">&gt;</span>마이페이지<span class="nt">&lt;/a&gt;</span>
        <span class="nt">&lt;</span><span class="err">%</span>
    <span class="err">}</span>
<span class="err">%</span><span class="nt">&gt;</span>
<span class="nt">&lt;/p&gt;</span>
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">top.jsp</code>는 상단 메뉴 부분을 출력하는 파일이다. 모든 <code class="language-plaintext highlighter-rouge">html/jsp</code> 페이지마다 상단 메뉴를 출력하는 코드를 써 놓으면 관리하기 힘들고 중복되는 부분도 많이 생기니까 <code class="language-plaintext highlighter-rouge">Header</code>와 <code class="language-plaintext highlighter-rouge">Footer</code> 부분을 따로 분리해서 각 페이지마다 <code class="language-plaintext highlighter-rouge">top.jsp</code>와 <code class="language-plaintext highlighter-rouge">bottom.jsp</code>를 <code class="language-plaintext highlighter-rouge">JSP</code> 액션태그를 이용해 <code class="language-plaintext highlighter-rouge">include</code> 해 주었다.</li>
  <li>로그인 결과를 받아오면서 저장한 세션 값을 바탕으로 상단 메뉴를 다르게 출력한다.</li>
</ul>

<p align="center"><img src="../../assets/images/loginMenu.png" width="400" /></p>

<ul>
  <li>로그인 성공 시 출력하는 상단 메뉴</li>
</ul>

<h2 id="5-logoutactionjava-생성">5. LogoutAction.java 생성</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.servlet.ServletException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.annotation.WebServlet</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServlet</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletRequest</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletResponse</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpSession</span><span class="o">;</span>

<span class="nd">@WebServlet</span><span class="o">(</span><span class="s">"/logout.me"</span><span class="o">)</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">LogoutAction</span> <span class="kd">extends</span> <span class="nc">HttpServlet</span> 
<span class="o">{</span>
    <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">doProcess</span><span class="o">(</span><span class="nc">HttpServletRequest</span> <span class="n">req</span><span class="o">,</span> <span class="nc">HttpServletResponse</span> <span class="n">resp</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">ServletException</span><span class="o">,</span> <span class="nc">IOException</span> 
    <span class="o">{</span>
        <span class="nc">HttpSession</span> <span class="n">session</span> <span class="o">=</span> <span class="n">req</span><span class="o">.</span><span class="na">getSession</span><span class="o">();</span>
        <span class="k">if</span> <span class="o">(</span><span class="kc">null</span> <span class="o">!=</span> <span class="n">session</span><span class="o">)</span>
            <span class="n">session</span><span class="o">.</span><span class="na">invalidate</span><span class="o">();</span>
		
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"로그아웃 완료"</span><span class="o">);</span>
        <span class="n">resp</span><span class="o">.</span><span class="na">sendRedirect</span><span class="o">(</span><span class="s">"./main.me"</span><span class="o">);</span>
    <span class="o">}</span>
	
    <span class="nd">@Override</span>
    <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">doGet</span><span class="o">(</span><span class="nc">HttpServletRequest</span> <span class="n">req</span><span class="o">,</span> <span class="nc">HttpServletResponse</span> <span class="n">resp</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">ServletException</span><span class="o">,</span> <span class="nc">IOException</span> 
    <span class="o">{</span>
        <span class="n">doProcess</span><span class="o">(</span><span class="n">req</span><span class="o">,</span> <span class="n">resp</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="nd">@Override</span>
    <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">doPost</span><span class="o">(</span><span class="nc">HttpServletRequest</span> <span class="n">req</span><span class="o">,</span> <span class="nc">HttpServletResponse</span> <span class="n">resp</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">ServletException</span><span class="o">,</span> <span class="nc">IOException</span> 
    <span class="o">{</span>
        <span class="n">doProcess</span><span class="o">(</span><span class="n">req</span><span class="o">,</span> <span class="n">resp</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>로그아웃 동작을 수행할 서블릿도 만들었다.</li>
</ul>

<p align="center"><img src="../../assets/images/logoutMenu.png" width="400" /></p>

<ul>
  <li>로그아웃 완료 시 출력하는 상단 메뉴</li>
  <li>이제 마이페이지에서 내 정보를 조회하는 기능을 만들어야겠다! ☺️<br /><br /><br /></li>
</ul>

<h1 id="마감까지">마감까지</h1>
<ul>
  <li><code class="language-plaintext highlighter-rouge">D-22</code></li>
</ul>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="Project Log" /><category term="Project" /><category term="Cafe" /><category term="Log" /><summary type="html"><![CDATA[개발환경 MacBook Air (M1, 2020) OpenJDK 8 Eclipse 2021-12 tomcat 8.5]]></summary></entry><entry><title type="html">C++) BOJ 1213. 팰린드롬 만들기</title><link href="http://localhost:4000/boj/boj1213-cpp/" rel="alternate" type="text/html" title="C++) BOJ 1213. 팰린드롬 만들기" /><published>2022-03-12T00:00:00+09:00</published><updated>2022-03-12T00:00:00+09:00</updated><id>http://localhost:4000/boj/boj1213-cpp</id><content type="html" xml:base="http://localhost:4000/boj/boj1213-cpp/"><![CDATA[<h1 id="문제-링크">문제 링크</h1>
<hr />

<ul>
  <li><a href="https://www.acmicpc.net/problem/1213">https://www.acmicpc.net/problem/1213</a><br /><br /></li>
</ul>

<h1 id="제한">제한</h1>
<hr />

<ul>
  <li>시간 제한 : 2 초</li>
  <li>메모리 제한 : 128 MB<br /><br /></li>
</ul>

<h1 id="문제">문제</h1>
<hr />

<ul>
  <li>
    <p>임한수와 임문빈은 서로 사랑하는 사이이다.</p>
  </li>
  <li>
    <p>임한수는 세상에서 팰린드롬인 문자열을 너무 좋아하기 때문에, 둘의 백일을 기념해서 임문빈은 팰린드롬을 선물해주려고 한다.</p>
  </li>
  <li>
    <p>임문빈은 임한수의 영어 이름으로 팰린드롬을 만들려고 하는데, 임한수의 영어 이름의 알파벳 순서를 적절히 바꿔서 팰린드롬을 만들려고 한다.</p>
  </li>
  <li>
    <p>임문빈을 도와 임한수의 영어 이름을 팰린드롬으로 바꾸는 프로그램을 작성하시오.<br /><br /></p>
  </li>
</ul>

<h1 id="입력">입력</h1>
<hr />

<ul>
  <li>첫째 줄에 임한수의 영어 이름이 있다. 알파벳 대문자로만 된 최대 50글자이다.<br /><br /></li>
</ul>

<h1 id="출력">출력</h1>
<hr />

<ul>
  <li>첫째 줄에 문제의 정답을 출력한다. 만약 불가능할 때는 “I’m Sorry Hansoo”를 출력한다. 정답이 여러 개일 경우에는 사전순으로 앞서는 것을 출력한다.<br /><br /><br /></li>
</ul>

<h1 id="-풀이">👀 풀이</h1>
<hr />

<ul>
  <li>
    <p>예전에 팰린드롬인지 판별하는 문제를 풀었던 기억이 나서 판별하는 알고리즘에다 팰린드롬 문자열을 출력하는 알고리즘을 추가로 구현했다.<br /></p>
  </li>
  <li>주어진 문자열이 팰린드롬인지 판별하는 방법은</li>
  <li>
    <p>문자열의 길이가 짝수일 때엔 같은 알파벳의 갯수가 모두 짝수여야 한다. 예제 입력의 AABB와 같은 문자열은 A 2개 B 2개로 모든 구성 요소가 각각 짝수개 있기 때문에 팰린드롬이다. 하나라도 홀수면 팰린드롬이 될 수 없다.<br /></p>
  </li>
  <li>
    <p>문자열의 길이가 홀수일 때엔 알파벳 하나만 홀수개여야 하고 나머지는 모두 짝수개가 있어야 한다. ABCC와 같이 홀수개인 문자가 2개 있으면 팰린드롬을 만들 수 없다.<br /></p>
  </li>
  <li>
    <p>그래서 입력으로 주어지는 문자열을 한 번 순회하면서 각 알파벳의 갯수를 센다.<br /><br /></p>
  </li>
  <li>그 다음 센 갯수를 바탕으로 주어진 문자열이 팰린드롬인지 아닌지 판별한다.</li>
  <li>팰린드롬이라면</li>
  <li>
    <p>길이가 짝수일 땐 알파벳의 갯수를 센 배열을 앞에서부터 순회하면서 각 알파벳들의 절반 횟수만큼만 먼저 정답 문자열에 더해준 뒤 저걸 복사해서 반대로 뒤집은 다음 정답 문자열에 더한다.<br /></p>
  </li>
  <li>길이가 홀수일 땐 짝수와 비슷하게 하는데 갯수가 홀수인 문자는 1을 뺀 값에서 절반만큼만 정답 문자열에 더해준다.</li>
  <li>짝수 갯수인 문자들은 문자열의 길이가 짝수일 때와 마찬가지로 더해준다.</li>
  <li>
    <p>다 더했으면 역시 복사한 뒤 뒤집어서 정답에 마저 더해준다.<br /></p>
  </li>
  <li>팰린드롬이 여러 개일 때엔 사전순으로 빠른 순서대로 출력하라고 했으므로 위와 같이 구하면 정답이다.<br /><br /></li>
</ul>

<h1 id="결과">결과</h1>
<hr />

<ul>
  <li>시간 : 0 ms</li>
  <li>메모리 : 2028 KB<br /><br /></li>
</ul>

<h1 id="코드">코드</h1>
<hr />

<script src="https://gist.github.com/miro7923/0e431e2a9e5963c84a699a83ca8af0a4.js"></script>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="BOJ" /><category term="Algorithm" /><category term="BOJ" /><category term="No1213" /><category term="String" /><category term="C++" /><summary type="html"><![CDATA[문제 링크 https://www.acmicpc.net/problem/1213 제한 시간 제한 : 2 초 메모리 제한 : 128 MB]]></summary></entry><entry><title type="html">C++) BOJ 10610. 30</title><link href="http://localhost:4000/boj/boj10610-cpp/" rel="alternate" type="text/html" title="C++) BOJ 10610. 30" /><published>2022-03-11T00:00:00+09:00</published><updated>2022-03-11T00:00:00+09:00</updated><id>http://localhost:4000/boj/boj10610-cpp</id><content type="html" xml:base="http://localhost:4000/boj/boj10610-cpp/"><![CDATA[<h1 id="문제-링크">문제 링크</h1>
<hr />

<ul>
  <li><a href="https://www.acmicpc.net/problem/10610">https://www.acmicpc.net/problem/10610</a><br /><br /></li>
</ul>

<h1 id="제한">제한</h1>
<hr />

<ul>
  <li>시간 제한 : 1 초</li>
  <li>메모리 제한 : 256 MB<br /><br /></li>
</ul>

<h1 id="문제">문제</h1>
<hr />

<ul>
  <li>
    <p>어느 날, 미르코는 우연히 길거리에서 양수 N을 보았다. 미르코는 30이란 수를 존경하기 때문에, 그는 길거리에서 찾은 수에 포함된 숫자들을 섞어 30의 배수가 되는 가장 큰 수를 만들고 싶어한다.</p>
  </li>
  <li>
    <p>미르코를 도와 그가 만들고 싶어하는 수를 계산하는 프로그램을 작성하라.<br /><br /></p>
  </li>
</ul>

<h1 id="입력">입력</h1>
<hr />

<ul>
  <li>N을 입력받는다. N는 최대 105개의 숫자로 구성되어 있으며, 0으로 시작하지 않는다.<br /><br /></li>
</ul>

<h1 id="출력">출력</h1>
<hr />

<ul>
  <li>미르코가 만들고 싶어하는 수가 존재한다면 그 수를 출력하라. 그 수가 존재하지 않는다면, -1을 출력하라.<br /><br /><br /></li>
</ul>

<h1 id="-풀이">👀 풀이</h1>
<hr />

<ul>
  <li>
    <p>참고 풀이 : <a href="https://ongveloper.tistory.com/114">https://ongveloper.tistory.com/114</a></p>
  </li>
  <li>
    <p>문제 이해를 잘못해서.. 자꾸 틀려서 구글링했다.<br /></p>
  </li>
  <li>입력으로 주어지는 N이 자릿수를 말하는 것이 아니라 N개의 수이기 때문에 최대 10^5개의 숫자가 입력으로 주어진다.</li>
  <li>
    <p>그래서 정수형으로는 절대 받을 수 없는 숫자였던 것이다… 문자열로 입력을 받아야 했음 - 틀린 이유 1<br /></p>
  </li>
  <li>입력을 해결하고 나면 이제 이 수들의 배치를 바꿔가며 30의 배수가 되는지 확인해야 하는데 처음에는 문제 이해 자체를 잘못했기 때문에 입력받은 수를 배열로 바꿔서 prev_permutation으로 순열을 구한 다음 30의 배수인지 구하는 코드를 작성했다. 물론 입력 자체가 잘못되었기 때문에 틑림</li>
  <li>입력의 최대값이 아주 크기 때문에 처음에 작성했던 것처럼 완전 탐색 방식으로는 시간초과를 받을 수 밖에 없고 규칙을 찾아서 적용해야 한다.</li>
  <li>
    <p>일단 30의 배수가 되려면 맨 마지막 자릿수가 0이어야 하고 3으로 나누어 떨어지려면 각 자릿수를 더한 값이 3의 배수가 되어야 한다.<br /></p>
  </li>
  <li>
    <ol>
      <li>입력받은 수를 내림차순으로 정렬한 후 맨 마지막 원소가 0인지 검사 후 0이 아니면 -1 출력</li>
    </ol>
  </li>
  <li>
    <ol>
      <li>1번을 통과했으면 각 자릿수를 더해서 3의 배수가 되는지 확인한 후 결과값 출력<br /></li>
    </ol>
  </li>
  <li>언제쯤.. 무난하게 풀 수 있을까…<br /><br /></li>
</ul>

<h1 id="결과">결과</h1>
<hr />

<ul>
  <li>시간 : 4 ms</li>
  <li>메모리 : 2300 KB<br /><br /></li>
</ul>

<h1 id="코드">코드</h1>
<hr />

<script src="https://gist.github.com/miro7923/55212f123cfa1b4e659191c74ac6ef3e.js"></script>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="BOJ" /><category term="Algorithm" /><category term="BOJ" /><category term="No10610" /><category term="Greedy" /><category term="C++" /><summary type="html"><![CDATA[문제 링크 https://www.acmicpc.net/problem/10610 제한 시간 제한 : 1 초 메모리 제한 : 256 MB]]></summary></entry><entry><title type="html">프로젝트) Cafe(웹 사이트) 만들기 6 - 휴대폰 인증기능 구현</title><link href="http://localhost:4000/project%20log/cafe-project-06/" rel="alternate" type="text/html" title="프로젝트) Cafe(웹 사이트) 만들기 6 - 휴대폰 인증기능 구현" /><published>2022-03-11T00:00:00+09:00</published><updated>2022-03-11T00:00:00+09:00</updated><id>http://localhost:4000/project%20log/cafe-project-06</id><content type="html" xml:base="http://localhost:4000/project%20log/cafe-project-06/"><![CDATA[<h1 id="개발환경">개발환경</h1>
<ul>
  <li>MacBook Air (M1, 2020)</li>
  <li>OpenJDK 8</li>
  <li>Eclipse 2021-12</li>
  <li>tomcat 8.5<br /><br /><br /></li>
</ul>

<h1 id="시작">시작</h1>
<ul>
  <li>2022.3.4 ~ <br /><br /><br /></li>
</ul>

<h1 id="주제">주제</h1>
<ul>
  <li>웹 백엔드 수업 중 중간 과제로 개인 프로젝트를 진행하게 되었다.</li>
  <li>회원가입/로그인/탈퇴 등 기본적인 회원관리 시스템을 가진 웹 사이트를 만드는 것이다. 주어진 기한은 <code class="language-plaintext highlighter-rouge">한 달</code></li>
  <li>나는 <code class="language-plaintext highlighter-rouge">다음 카페</code>를 소규모로 만들어 보기로 했다. 평소 자주 이용하기도 했고 과제의 평가 기준에서 요구하는 기능들을 다 담고 있기도 했기 때문에 이번 기회에 구현해 보면 그동안 배운 것들을 활용하기에 좋을 거 같았다.</li>
  <li>평가 기준에 사이트의 디자인 구현(HTML/CSS 등 프론트엔드)은 포함되지 않기 때문에 본인이 쓰고 싶은 HTML/CSS 템플릿을 구한 뒤 회원 관리 기능을 구현하면 된다.<br /><br /><br /></li>
</ul>

<h1 id="진행상황">진행상황</h1>
<ul>
  <li><code class="language-plaintext highlighter-rouge">openAPI</code> 사용법을 익히고 싶어서 휴대폰 번호 인증하기 기능을 만들어 보았다.</li>
  <li>그동안 <code class="language-plaintext highlighter-rouge">openAPI</code> 쓰면 쉽게 만들 수 있다, 개발이 편해진다 하는 말을 참 많이 들었는데 직접 해 보니까 쉽지 않아서 많이 헤멨다… 😔 처음 해 보는 것이라 그런걸까?</li>
  <li>그리고 아직 <code class="language-plaintext highlighter-rouge">Spring framework</code>는 배우지 않은 상태라서 <code class="language-plaintext highlighter-rouge">Java</code>와 <code class="language-plaintext highlighter-rouge">Servlet</code>을 이용해 <code class="language-plaintext highlighter-rouge">MVC Model2</code> 패턴으로 구현해야 하는데 대부분의 자료는 <code class="language-plaintext highlighter-rouge">Spring framework</code>를 이용한 것이라 더 어렵게 느껴졌던 것 같다. 하지만 지금까지는 코드로 일일이 구현해 왔던 것을 <code class="language-plaintext highlighter-rouge">Spring</code>에서는 어노테이션으로 처리할 수 있는 것을 보니까 빨리 <code class="language-plaintext highlighter-rouge">Spring</code>을 배워 보고 싶어졌다.</li>
  <li>그래도 이번 구현을 통해 휴대폰 번호 인증 로직이 어떻게 돌아가는 지 알게 되었고 <code class="language-plaintext highlighter-rouge">openAPI</code>도 어떤 방식으로 사용하는지 어느 정도 알게 되어서 좋은 경험이었다고 생각한다.</li>
</ul>

<h2 id="1-네이버-클라우드-회원가입-하기">1. 네이버 클라우드 회원가입 하기</h2>
<ul>
  <li>
    <p>대부분의 휴대폰 번호 인증 API는 유료였는데 네이버 클라우드의 API는 한 달에 50건까지 무료라서 사용했다.<br /></p>
  </li>
  <li><a href="https://giron.tistory.com/75">NAVER CLOUD PlATFORM[SENS API] - 네이버 문자 인증</a></li>
  <li>기본적인 프로젝트 생성 방법은 이 블로그 글을 참고했다.</li>
  <li>처음엔 <code class="language-plaintext highlighter-rouge">Products &amp; Services</code> 탭에서 활성화 된 메뉴가 아주 적을 수 있는데 결제 수단을 등록해 주면 모든 메뉴를 볼 수 있다.</li>
</ul>

<h2 id="2-joinjsp에-휴대폰-번호-인증란-추가">2. join.jsp에 휴대폰 번호 인증란 추가</h2>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!-- join.jsp --&gt;</span>

...
생략

<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"formRow"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;label</span> <span class="na">for=</span><span class="s">"MOD_TEXTFORM_TelField"</span><span class="nt">&gt;</span>휴대폰 번호 <span class="nt">&lt;/label&gt;</span>
    <span class="nt">&lt;label</span> <span class="na">class=</span><span class="s">"phone"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;input</span> <span class="na">id=</span><span class="s">"phone1"</span> <span class="na">type=</span><span class="s">"tel"</span> <span class="na">name=</span><span class="s">"phone1"</span> <span class="na">size=</span><span class="s">"1"</span> <span class="na">maxlength=</span><span class="s">"3"</span> <span class="na">oninput=</span><span class="s">"tabCursor(1)"</span><span class="nt">&gt;</span> - 
    <span class="nt">&lt;input</span> <span class="na">id=</span><span class="s">"phone2"</span> <span class="na">type=</span><span class="s">"tel"</span> <span class="na">name=</span><span class="s">"phone2"</span> <span class="na">size=</span><span class="s">"3"</span> <span class="na">maxlength=</span><span class="s">"4"</span> <span class="na">oninput=</span><span class="s">"tabCursor(2)"</span><span class="nt">&gt;</span> - 
    <span class="nt">&lt;input</span> <span class="na">id=</span><span class="s">"phone3"</span> <span class="na">type=</span><span class="s">"tel"</span> <span class="na">name=</span><span class="s">"phone3"</span> <span class="na">size=</span><span class="s">"3"</span> <span class="na">maxlength=</span><span class="s">"4"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;button</span> <span class="na">id=</span><span class="s">"requestBtn"</span> <span class="na">class=</span><span class="s">"btn"</span> <span class="na">type=</span><span class="s">"submit"</span> <span class="na">name=</span><span class="s">"requestBtn"</span><span class="nt">&gt;</span>휴대폰인증<span class="nt">&lt;/button&gt;</span>
    <span class="nt">&lt;/label&gt;</span>
<span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">"phoneMsg"</span><span class="nt">&gt;&lt;/div&gt;</span>
<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"formRow"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;label</span> <span class="na">for=</span><span class="s">"MOD_TEXTFORM_EmailField"</span><span class="nt">&gt;</span>인증번호 <span class="nt">&lt;/label&gt;</span>
    <span class="nt">&lt;label</span> <span class="na">class=</span><span class="s">"phone"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"text"</span> <span class="na">name=</span><span class="s">"validateNum"</span> <span class="na">id=</span><span class="s">"validateNum"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;button</span> <span class="na">id=</span><span class="s">"validateBtn"</span> <span class="na">class=</span><span class="s">"btn"</span> <span class="na">type=</span><span class="s">"submit"</span> <span class="na">name=</span><span class="s">"validateBtn"</span><span class="nt">&gt;</span>인증번호 확인<span class="nt">&lt;/button&gt;</span>
    <span class="nt">&lt;/label&gt;</span>
<span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">"validateMsg"</span><span class="nt">&gt;&lt;/div&gt;</span>

...
생략
</code></pre></div></div>

<h2 id="3-휴대폰-번호-인증을-처리하는-클래스-만들기">3. 휴대폰 번호 인증을 처리하는 클래스 만들기</h2>
<ul>
  <li><a href="https://bemind.tistory.com/66">네이버 클라우드 플랫폼 SMS API 사용법 전체 코드, 예제 코드, Java, Spring, 스프링, Simple &amp; Easy Notification Service, SENS</a></li>
  <li>
    <p>이 블로그 글을 참고해서 구현했다. 지금까지 수업에서 <code class="language-plaintext highlighter-rouge">JSON</code>을 배운 적이 없어서 처음 <code class="language-plaintext highlighter-rouge">API</code> 문서를 봤을 때 굉장히 난감했는데 이 글 덕분에 코드를 분석하며 <code class="language-plaintext highlighter-rouge">JSON</code>을 무슨 용도로, 어떻게 사용하는 지 알 수 있었다.<br /></p>
  </li>
  <li><a href="https://blog.naver.com/PostView.naver?blogId=n_cloudplatform&amp;logNo=222475388473&amp;parentCategoryNo=&amp;categoryNo=12&amp;viewDate=&amp;isShowPopularPosts=false&amp;from=postView">[이렇게 사용하세요!] SMS 문자 메시지 발송 앱 사용하기 (SENS API 활용법)</a></li>
  <li>API의 각 항목에 대한 가이드는 공식 블로그를 참고했다. 여기만 확인해도 서비스 아이디가 뭔지, uri는 또 무슨 용도인지… 등등을 알 수 있다.</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// SmsService.java</span>

<span class="kn">import</span> <span class="nn">java.io.BufferedReader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.DataOutputStream</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.InputStreamReader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.UnsupportedEncodingException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.net.HttpURLConnection</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.net.URL</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.security.InvalidKeyException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.security.NoSuchAlgorithmException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Base64</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Random</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.crypto.Mac</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.crypto.spec.SecretKeySpec</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">org.json.simple.JSONArray</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.json.simple.JSONObject</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">SmsService</span> 
<span class="o">{</span>
    <span class="kd">private</span> <span class="nc">String</span> <span class="nf">makeSignature</span><span class="o">(</span><span class="nc">String</span> <span class="n">method</span><span class="o">,</span> <span class="nc">String</span> <span class="n">url</span><span class="o">,</span> <span class="nc">String</span> <span class="n">timestamp</span><span class="o">,</span> <span class="nc">String</span> <span class="n">accessKey</span><span class="o">,</span> <span class="nc">String</span> <span class="n">secretKey</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">UnsupportedEncodingException</span><span class="o">,</span> <span class="nc">NoSuchAlgorithmException</span><span class="o">,</span> <span class="nc">InvalidKeyException</span>
    <span class="o">{</span>
        <span class="nc">String</span> <span class="n">space</span> <span class="o">=</span> <span class="s">" "</span><span class="o">;</span>					<span class="c1">// one space</span>
        <span class="nc">String</span> <span class="n">newLine</span> <span class="o">=</span> <span class="s">"\n"</span><span class="o">;</span>					<span class="c1">// new line</span>
		
        <span class="nc">String</span> <span class="n">message</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringBuilder</span><span class="o">()</span>
            <span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">method</span><span class="o">)</span>
            <span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">space</span><span class="o">)</span>
            <span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">url</span><span class="o">)</span>
            <span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">newLine</span><span class="o">)</span>
            <span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">timestamp</span><span class="o">)</span>
            <span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">newLine</span><span class="o">)</span>
            <span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">accessKey</span><span class="o">)</span>
            <span class="o">.</span><span class="na">toString</span><span class="o">();</span>
		
        <span class="nc">SecretKeySpec</span> <span class="n">signingKey</span><span class="o">;</span>
        <span class="nc">String</span> <span class="n">encodeBase64String</span><span class="o">;</span>
        <span class="k">try</span> <span class="o">{</span>
            <span class="n">signingKey</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SecretKeySpec</span><span class="o">(</span><span class="n">secretKey</span><span class="o">.</span><span class="na">getBytes</span><span class="o">(</span><span class="s">"UTF-8"</span><span class="o">),</span> <span class="s">"HmacSHA256"</span><span class="o">);</span>
            <span class="nc">Mac</span> <span class="n">mac</span> <span class="o">=</span> <span class="nc">Mac</span><span class="o">.</span><span class="na">getInstance</span><span class="o">(</span><span class="s">"HmacSHA256"</span><span class="o">);</span>
            <span class="n">mac</span><span class="o">.</span><span class="na">init</span><span class="o">(</span><span class="n">signingKey</span><span class="o">);</span>
            <span class="kt">byte</span><span class="o">[]</span> <span class="n">rawHmac</span> <span class="o">=</span> <span class="n">mac</span><span class="o">.</span><span class="na">doFinal</span><span class="o">(</span><span class="n">message</span><span class="o">.</span><span class="na">getBytes</span><span class="o">(</span><span class="s">"UTF-8"</span><span class="o">));</span>
            <span class="n">encodeBase64String</span> <span class="o">=</span> <span class="nc">Base64</span><span class="o">.</span><span class="na">getEncoder</span><span class="o">().</span><span class="na">encodeToString</span><span class="o">(</span><span class="n">rawHmac</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="k">catch</span> <span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">encodeBase64String</span> <span class="o">=</span> <span class="n">e</span><span class="o">.</span><span class="na">toString</span><span class="o">();</span>
        <span class="o">}</span>
		
    <span class="k">return</span> <span class="n">encodeBase64String</span><span class="o">;</span>
<span class="o">}</span>
	
<span class="c1">//	{</span>
<span class="c1">//    "type":"(SMS | LMS | MMS)", // sms 타입</span>
<span class="c1">//    "contentType":"(COMM | AD)", // 메세지 타입</span>
<span class="c1">//    "countryCode":"string", // 국가번호</span>
<span class="c1">//    "from":"string",		// 발신번호</span>
<span class="c1">//    "subject":"string",		// 기본 메시지 제목</span>
<span class="c1">//    "content":"string",		// 기본 메시지 내용</span>
<span class="c1">//    "messages":[			// 메시지 정보(Object) - 최대 1000개</span>
<span class="c1">//        {</span>
<span class="c1">//            "to":"string",	// 수신번호(String)</span>
<span class="c1">//            "subject":"string", // 개별 메시지 제목(String)</span>
<span class="c1">//            "content":"string"  // 개별 메시지 내용(String)</span>
<span class="c1">//        }</span>
<span class="c1">//    ]</span>
<span class="c1">//}</span>
	
    <span class="nd">@SuppressWarnings</span><span class="o">(</span><span class="s">"unchecked"</span><span class="o">)</span>
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">sendSms</span><span class="o">(</span><span class="nc">String</span> <span class="n">dstPhoneNumber</span><span class="o">)</span>
    <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"sendSms() 호출"</span><span class="o">);</span>
		
        <span class="nc">String</span> <span class="n">method</span> <span class="o">=</span> <span class="s">"POST"</span><span class="o">;</span>					<span class="c1">// method</span>
        <span class="nc">String</span> <span class="n">smsUrl</span> <span class="o">=</span> <span class="s">"https://sens.apigw.ntruss.com"</span><span class="o">;</span>	<span class="c1">// url (include query string)</span>
        <span class="nc">String</span> <span class="n">requestUrl</span> <span class="o">=</span> <span class="s">"/sms/v2/services/"</span><span class="o">;</span>
        <span class="nc">String</span> <span class="n">requestUrlType</span> <span class="o">=</span> <span class="s">"/messages"</span><span class="o">;</span>
        <span class="nc">String</span> <span class="n">accessKey</span> <span class="o">=</span> <span class="s">"{user access key id}"</span><span class="o">;</span>			<span class="c1">// access key id (from portal or Sub Account)</span>
        <span class="nc">String</span> <span class="n">secretKey</span> <span class="o">=</span> <span class="s">"{user secret key}"</span><span class="o">;</span>
        <span class="nc">String</span> <span class="n">serviceId</span> <span class="o">=</span> <span class="s">"{user service id}"</span><span class="o">;</span>
        <span class="nc">String</span> <span class="n">timestamp</span> <span class="o">=</span> <span class="nc">Long</span><span class="o">.</span><span class="na">toString</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">());</span>			<span class="c1">// current timestamp (epoch)</span>
		
        <span class="n">requestUrl</span> <span class="o">+=</span> <span class="n">serviceId</span> <span class="o">+</span> <span class="n">requestUrlType</span><span class="o">;</span>
        <span class="nc">String</span> <span class="n">apiUrl</span> <span class="o">=</span> <span class="n">smsUrl</span> <span class="o">+</span> <span class="n">requestUrl</span><span class="o">;</span>
		
        <span class="nc">JSONObject</span> <span class="n">bodyJson</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">JSONObject</span><span class="o">();</span>
        <span class="nc">JSONObject</span> <span class="n">toJson</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">JSONObject</span><span class="o">();</span>
        <span class="nc">JSONArray</span> <span class="n">toArr</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">JSONArray</span><span class="o">();</span>
		
        <span class="n">toJson</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"to"</span><span class="o">,</span> <span class="n">dstPhoneNumber</span><span class="o">);</span>
        <span class="n">toArr</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">toJson</span><span class="o">);</span>
		
        <span class="n">bodyJson</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"type"</span><span class="o">,</span> <span class="s">"SMS"</span><span class="o">);</span>
        <span class="n">bodyJson</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"contentType"</span><span class="o">,</span> <span class="s">"COMM"</span><span class="o">);</span>
        <span class="n">bodyJson</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"countryCode"</span><span class="o">,</span> <span class="s">"82"</span><span class="o">);</span>
        <span class="n">bodyJson</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"from"</span><span class="o">,</span> <span class="s">"발신번호로 등록한 폰번호"</span><span class="o">);</span>
        <span class="n">bodyJson</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"subject"</span><span class="o">,</span> <span class="s">"[Web 발신]"</span><span class="o">);</span>

        <span class="c1">// 난수 생성</span>
        <span class="kt">int</span> <span class="n">min</span> <span class="o">=</span> <span class="mi">1000</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">max</span> <span class="o">=</span> <span class="mi">9999</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">validateNum</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="o">(</span><span class="nc">Math</span><span class="o">.</span><span class="na">random</span><span class="o">()</span> <span class="o">*</span> <span class="o">(</span><span class="n">max</span> <span class="o">-</span> <span class="n">min</span> <span class="o">+</span> <span class="mi">1</span><span class="o">))</span> <span class="o">+</span> <span class="n">min</span><span class="o">;</span>
        <span class="n">bodyJson</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"content"</span><span class="o">,</span> <span class="s">"인증번호 : "</span> <span class="o">+</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">toString</span><span class="o">(</span><span class="n">validateNum</span><span class="o">));</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"validateNum : "</span> <span class="o">+</span> <span class="n">validateNum</span><span class="o">);</span>
		
        <span class="n">bodyJson</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"messages"</span><span class="o">,</span> <span class="n">toArr</span><span class="o">);</span>
		
        <span class="nc">String</span> <span class="n">body</span> <span class="o">=</span> <span class="n">bodyJson</span><span class="o">.</span><span class="na">toString</span><span class="o">();</span>
		
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"body : "</span> <span class="o">+</span> <span class="n">body</span><span class="o">);</span>
		
        <span class="k">try</span> <span class="o">{</span>
            <span class="no">URL</span> <span class="n">url</span> <span class="o">=</span> <span class="k">new</span> <span class="no">URL</span><span class="o">(</span><span class="n">apiUrl</span><span class="o">);</span>
			
            <span class="nc">HttpURLConnection</span> <span class="n">con</span> <span class="o">=</span> <span class="o">(</span><span class="nc">HttpURLConnection</span><span class="o">)</span> <span class="n">url</span><span class="o">.</span><span class="na">openConnection</span><span class="o">();</span>
            <span class="n">con</span><span class="o">.</span><span class="na">setUseCaches</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
            <span class="n">con</span><span class="o">.</span><span class="na">setDoOutput</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
            <span class="n">con</span><span class="o">.</span><span class="na">setDoInput</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
            <span class="n">con</span><span class="o">.</span><span class="na">setRequestProperty</span><span class="o">(</span><span class="s">"Content-Type"</span><span class="o">,</span> <span class="s">"application/json"</span><span class="o">);</span>
            <span class="n">con</span><span class="o">.</span><span class="na">setRequestProperty</span><span class="o">(</span><span class="s">"x-ncp-apigw-timestamp"</span><span class="o">,</span> <span class="n">timestamp</span><span class="o">);</span>
            <span class="n">con</span><span class="o">.</span><span class="na">setRequestProperty</span><span class="o">(</span><span class="s">"x-ncp-iam-access-key"</span><span class="o">,</span> <span class="n">accessKey</span><span class="o">);</span>
            <span class="n">con</span><span class="o">.</span><span class="na">setRequestProperty</span><span class="o">(</span><span class="s">"x-ncp-apigw-signature-v2"</span><span class="o">,</span> <span class="n">makeSignature</span><span class="o">(</span><span class="n">method</span><span class="o">,</span> <span class="n">requestUrl</span><span class="o">,</span> <span class="n">timestamp</span><span class="o">,</span> <span class="n">accessKey</span><span class="o">,</span> <span class="n">secretKey</span><span class="o">));</span>
            <span class="n">con</span><span class="o">.</span><span class="na">setRequestMethod</span><span class="o">(</span><span class="n">method</span><span class="o">);</span>
            <span class="n">con</span><span class="o">.</span><span class="na">setDoOutput</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
            <span class="nc">DataOutputStream</span> <span class="n">dos</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">DataOutputStream</span><span class="o">(</span><span class="n">con</span><span class="o">.</span><span class="na">getOutputStream</span><span class="o">());</span>
			
            <span class="n">dos</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">body</span><span class="o">.</span><span class="na">getBytes</span><span class="o">());</span>
            <span class="n">dos</span><span class="o">.</span><span class="na">flush</span><span class="o">();</span>
            <span class="n">dos</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
			
            <span class="kt">int</span> <span class="n">responseCode</span> <span class="o">=</span> <span class="n">con</span><span class="o">.</span><span class="na">getResponseCode</span><span class="o">();</span>
            <span class="nc">BufferedReader</span> <span class="n">br</span><span class="o">;</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"responseCode : "</span> <span class="o">+</span> <span class="n">responseCode</span><span class="o">);</span>
            <span class="k">if</span> <span class="o">(</span><span class="mi">202</span> <span class="o">==</span> <span class="n">responseCode</span><span class="o">)</span>
            <span class="o">{</span>
                <span class="c1">// 정상호출</span>
                <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="n">con</span><span class="o">.</span><span class="na">getInputStream</span><span class="o">()));</span>
            <span class="o">}</span>
            <span class="k">else</span> 
            <span class="o">{</span>
                <span class="c1">// 에러발생</span>
                <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="n">con</span><span class="o">.</span><span class="na">getErrorStream</span><span class="o">()));</span>
            <span class="o">}</span>
			
            <span class="nc">String</span> <span class="n">inputLine</span><span class="o">;</span>
            <span class="nc">StringBuffer</span> <span class="n">response</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringBuffer</span><span class="o">();</span>
            <span class="k">while</span> <span class="o">(</span><span class="kc">null</span> <span class="o">!=</span> <span class="o">(</span><span class="n">inputLine</span> <span class="o">=</span> <span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">()))</span>
                <span class="n">response</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">inputLine</span><span class="o">);</span>
			
            <span class="n">br</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
			
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">response</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
        <span class="o">}</span>
        <span class="k">catch</span> <span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">e</span><span class="o">);</span>
        <span class="o">}</span>
		
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"sendSms() 끝"</span><span class="o">);</span>
		
        <span class="k">return</span> <span class="n">validateNum</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>난수를 발생시켜서 인증번호를 만들었으며 사용자가 입력한 번호와 비교하기 위해서 생성된 난수를 리턴하도록 했다.</li>
  <li>난수는 4자리 숫자를 만들도록 범위를 지정해 주었다.</li>
</ul>

<h2 id="4-문자-전송-결과를-받아올-서블릿-생성">4. 문자 전송 결과를 받아올 서블릿 생성</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.PrintWriter</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.servlet.ServletException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.annotation.WebServlet</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServlet</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletRequest</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletResponse</span><span class="o">;</span>

<span class="nd">@WebServlet</span><span class="o">(</span><span class="s">"/validatePhone.me"</span><span class="o">)</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">ValidatePhone</span> <span class="kd">extends</span> <span class="nc">HttpServlet</span> 
<span class="o">{</span>
	<span class="kd">protected</span> <span class="kt">void</span> <span class="nf">doProcess</span><span class="o">(</span><span class="nc">HttpServletRequest</span> <span class="n">req</span><span class="o">,</span> <span class="nc">HttpServletResponse</span> <span class="n">resp</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">ServletException</span><span class="o">,</span> <span class="nc">IOException</span> 
	<span class="o">{</span>
		<span class="n">resp</span><span class="o">.</span><span class="na">setContentType</span><span class="o">(</span><span class="s">"text/html; charset=utf-8"</span><span class="o">);</span>
		
		<span class="nc">SmsService</span> <span class="n">smsService</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SmsService</span><span class="o">();</span>
		<span class="nc">PrintWriter</span> <span class="n">out</span> <span class="o">=</span> <span class="n">resp</span><span class="o">.</span><span class="na">getWriter</span><span class="o">();</span>
		
		<span class="kt">int</span> <span class="n">validateNum</span> <span class="o">=</span> <span class="n">smsService</span><span class="o">.</span><span class="na">sendSms</span><span class="o">(</span><span class="n">req</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"phone"</span><span class="o">));</span>
		<span class="n">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="n">validateNum</span><span class="o">);</span>
		
		<span class="n">out</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
	<span class="o">}</span>
	
	<span class="nd">@Override</span>
	<span class="kd">protected</span> <span class="kt">void</span> <span class="nf">doGet</span><span class="o">(</span><span class="nc">HttpServletRequest</span> <span class="n">req</span><span class="o">,</span> <span class="nc">HttpServletResponse</span> <span class="n">resp</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">ServletException</span><span class="o">,</span> <span class="nc">IOException</span> 
	<span class="o">{</span>
		<span class="n">doProcess</span><span class="o">(</span><span class="n">req</span><span class="o">,</span> <span class="n">resp</span><span class="o">);</span>
	<span class="o">}</span>

	<span class="nd">@Override</span>
	<span class="kd">protected</span> <span class="kt">void</span> <span class="nf">doPost</span><span class="o">(</span><span class="nc">HttpServletRequest</span> <span class="n">req</span><span class="o">,</span> <span class="nc">HttpServletResponse</span> <span class="n">resp</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">ServletException</span><span class="o">,</span> <span class="nc">IOException</span> 
	<span class="o">{</span>
		<span class="n">doProcess</span><span class="o">(</span><span class="n">req</span><span class="o">,</span> <span class="n">resp</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>문자 전송 후 발생된 난수를 받아와 출력 스트림을 이용해 <code class="language-plaintext highlighter-rouge">response</code> 객체로 전달하도록 했다.</li>
</ul>

<h2 id="5-joinjs에서-joinjsp와-인증-페이지를-연결하는-코드-작성">5. join.js에서 join.jsp와 인증 페이지를 연결하는 코드 작성</h2>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">...</span>
<span class="nx">생략</span>

<span class="kd">var</span> <span class="nx">$validateNum</span><span class="p">;</span>
<span class="kd">var</span> <span class="nx">$checkValidate</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
 
<span class="nx">$</span><span class="p">(</span><span class="nb">document</span><span class="p">).</span><span class="nx">ready</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span>
<span class="p">{</span>
    <span class="p">...</span>
    <span class="nx">중략</span>
    
    <span class="nx">getToken</span><span class="p">();</span>
    <span class="nx">checkValidateNum</span><span class="p">();</span>
<span class="p">});</span>

<span class="kd">function</span> <span class="nx">getToken</span><span class="p">()</span>
<span class="p">{</span>
    <span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">#requestBtn</span><span class="dl">'</span><span class="p">).</span><span class="nx">click</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="nx">phoneCheck</span><span class="p">();</span>
        <span class="k">if</span> <span class="p">(</span><span class="nx">$phone</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="kd">var</span> <span class="nx">phoneNum</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">#phone1</span><span class="dl">'</span><span class="p">).</span><span class="nx">val</span><span class="p">()</span> <span class="o">+</span> <span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">#phone2</span><span class="dl">'</span><span class="p">).</span><span class="nx">val</span><span class="p">()</span> <span class="o">+</span> <span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">#phone3</span><span class="dl">'</span><span class="p">).</span><span class="nx">val</span><span class="p">();</span>
            <span class="nx">$</span><span class="p">.</span><span class="nx">ajax</span><span class="p">({</span>
                <span class="na">type</span><span class="p">:</span> <span class="dl">'</span><span class="s1">POST</span><span class="dl">'</span><span class="p">,</span>
                <span class="na">async</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
                <span class="na">url</span><span class="p">:</span> <span class="dl">'</span><span class="s1">./validatePhone.me</span><span class="dl">'</span><span class="p">,</span>
                <span class="na">data</span><span class="p">:</span> <span class="p">{</span>
                    <span class="dl">'</span><span class="s1">phone</span><span class="dl">'</span><span class="p">:</span> <span class="nx">phoneNum</span>
                <span class="p">},</span>
                <span class="na">dataType</span><span class="p">:</span> <span class="dl">'</span><span class="s1">text</span><span class="dl">'</span><span class="p">,</span>
                <span class="na">success</span><span class="p">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">data</span><span class="p">)</span>
                <span class="p">{</span>
                    <span class="nx">alert</span><span class="p">(</span><span class="dl">'</span><span class="s1">인증번호 전송 완료!</span><span class="dl">'</span><span class="p">);</span>
                    <span class="nx">$validateNum</span> <span class="o">=</span> <span class="nx">data</span><span class="p">;</span>
                <span class="p">}</span>
            <span class="p">});</span>					
        <span class="p">}</span>
    <span class="p">});</span>
<span class="p">}</span>

<span class="kd">function</span> <span class="nx">checkValidateNum</span><span class="p">()</span>
<span class="p">{</span>
    <span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">#validateBtn</span><span class="dl">'</span><span class="p">).</span><span class="nx">click</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="kd">var</span> <span class="nx">userInput</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="dl">"</span><span class="s2">#validateNum</span><span class="dl">"</span><span class="p">).</span><span class="nx">val</span><span class="p">();</span>
        <span class="k">if</span> <span class="p">(</span><span class="nx">$validateNum</span> <span class="o">===</span> <span class="nx">userInput</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="nx">$checkValidate</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
            <span class="nx">$</span><span class="p">(</span><span class="dl">"</span><span class="s2">#validateMsg</span><span class="dl">"</span><span class="p">).</span><span class="nx">text</span><span class="p">(</span><span class="dl">"</span><span class="s2">인증이 완료되었습니다!</span><span class="dl">"</span><span class="p">);</span>
            <span class="nx">$</span><span class="p">(</span><span class="dl">"</span><span class="s2">#validateMsg</span><span class="dl">"</span><span class="p">).</span><span class="nx">css</span><span class="p">(</span><span class="dl">"</span><span class="s2">color</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">green</span><span class="dl">"</span><span class="p">);</span>
            <span class="nx">$</span><span class="p">(</span><span class="dl">"</span><span class="s2">#validateBtn</span><span class="dl">"</span><span class="p">).</span><span class="nx">prop</span><span class="p">(</span><span class="dl">"</span><span class="s2">disabled</span><span class="dl">"</span><span class="p">,</span> <span class="kc">true</span><span class="p">);</span>
            <span class="nx">$</span><span class="p">(</span><span class="dl">"</span><span class="s2">#requestBtn</span><span class="dl">"</span><span class="p">).</span><span class="nx">prop</span><span class="p">(</span><span class="dl">"</span><span class="s2">disabled</span><span class="dl">"</span><span class="p">,</span> <span class="kc">true</span><span class="p">);</span>
            <span class="nx">$</span><span class="p">(</span><span class="dl">"</span><span class="s2">#validateBtn</span><span class="dl">"</span><span class="p">).</span><span class="nx">css</span><span class="p">(</span><span class="dl">"</span><span class="s2">background</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">gray</span><span class="dl">"</span><span class="p">);</span>
            <span class="nx">$</span><span class="p">(</span><span class="dl">"</span><span class="s2">#requestBtn</span><span class="dl">"</span><span class="p">).</span><span class="nx">css</span><span class="p">(</span><span class="dl">"</span><span class="s2">background</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">gray</span><span class="dl">"</span><span class="p">);</span>
        <span class="p">}</span>
        <span class="k">else</span> 
        <span class="p">{</span>
            <span class="nx">$checkValidate</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
            <span class="nx">$</span><span class="p">(</span><span class="dl">"</span><span class="s2">#validateMsg</span><span class="dl">"</span><span class="p">).</span><span class="nx">text</span><span class="p">(</span><span class="dl">"</span><span class="s2">인증번호가 일치하지 않습니다.</span><span class="dl">"</span><span class="p">);</span>
            <span class="nx">$</span><span class="p">(</span><span class="dl">"</span><span class="s2">#validateMsg</span><span class="dl">"</span><span class="p">).</span><span class="nx">css</span><span class="p">(</span><span class="dl">"</span><span class="s2">color</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">red</span><span class="dl">"</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="p">});</span>
<span class="p">}</span>

<span class="c1">// 마지막 제출 전에 유효성 검사하는 함수</span>
<span class="kd">function</span> <span class="nx">finalCheck</span><span class="p">()</span> 
<span class="p">{</span>
    <span class="kd">var</span> <span class="nx">join</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">join</span><span class="p">;</span>
    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">$id</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nx">join</span><span class="p">.</span><span class="nx">id</span><span class="p">.</span><span class="nx">focus</span><span class="p">();</span>
        <span class="k">return</span> <span class="kc">false</span><span class="p">;</span>
    <span class="p">}</span>
		
    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">$pass</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nx">join</span><span class="p">.</span><span class="nx">pass</span><span class="p">.</span><span class="nx">focus</span><span class="p">();</span>
        <span class="k">return</span> <span class="kc">false</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">$passConfirm</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nx">join</span><span class="p">.</span><span class="nx">confirm</span><span class="p">.</span><span class="nx">focus</span><span class="p">();</span>
        <span class="k">return</span> <span class="kc">false</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">$name</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nx">join</span><span class="p">.</span><span class="nx">name</span><span class="p">.</span><span class="nx">focus</span><span class="p">();</span>
        <span class="k">return</span> <span class="kc">false</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">$birth</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nx">join</span><span class="p">.</span><span class="nx">birth</span><span class="p">.</span><span class="nx">focus</span><span class="p">();</span>
        <span class="k">return</span> <span class="kc">false</span><span class="p">;</span>
    <span class="p">}</span>
	
    <span class="nx">genderCheck</span><span class="p">();</span>
    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">$gender</span><span class="p">)</span>
        <span class="k">return</span> <span class="kc">false</span><span class="p">;</span>

    <span class="nx">cityCheck</span><span class="p">();</span>
    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">$city</span><span class="p">)</span>
        <span class="k">return</span> <span class="kc">false</span><span class="p">;</span>
	
    <span class="nx">phoneCheck</span><span class="p">();</span>
    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">$phone</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nx">join</span><span class="p">.</span><span class="nx">phone1</span><span class="p">.</span><span class="nx">focus</span><span class="p">();</span>
        <span class="k">return</span> <span class="kc">false</span><span class="p">;</span>
    <span class="p">}</span>
	
    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">$checkValidate</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nx">join</span><span class="p">.</span><span class="nx">validateNum</span><span class="p">.</span><span class="nx">focus</span><span class="p">();</span>
        <span class="k">return</span> <span class="kc">false</span><span class="p">;</span>
    <span class="p">}</span>
	
    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">$email</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nx">join</span><span class="p">.</span><span class="nx">email</span><span class="p">.</span><span class="nx">focus</span><span class="p">();</span>
        <span class="k">return</span> <span class="kc">false</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span> 

<span class="p">...</span>
<span class="nx">생략</span>
</code></pre></div></div>

<ul>
  <li>서블릿을 이용해 문자 전송 요청을 보내고 발생된 난수를 받아올 것이기 때문에 <code class="language-plaintext highlighter-rouge">Ajax</code>를 이용했다.</li>
  <li>인증번호 확인 버튼을 누르면 서블릿에서 받아온 번호와 비교해서 일치하는지 아닌지 확인 후 결과를 알려준다.<br /><br /></li>
</ul>

<p align="center"><img src="../../assets/images/validatePhone.png" width="400" /></p>
<p><br /><br /></p>

<h1 id="오늘-얻은-팁">오늘 얻은 팁</h1>
<ul>
  <li>만약 css 변경 사항이 적용되지 않을 때에는 css 파일 경로 설정하는 부분의 맨 뒤에 <code class="language-plaintext highlighter-rouge">?</code>를 붙여주면 된다.</li>
</ul>

<div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&lt;</span><span class="nt">link</span> <span class="nt">rel</span><span class="o">=</span><span class="s1">"stylesheet"</span> <span class="nt">href</span><span class="o">=</span><span class="s1">"${pageContext.request.contextPath}/css/modules.css?after"</span><span class="o">&gt;</span>
</code></pre></div></div>

<ul>
  <li>
    <p>이런 식으로 맨 뒤에 <code class="language-plaintext highlighter-rouge">?</code>를 붙이고 다음에는 아무 말이나 입력해도 되고 입력하지 않아도 된다.</p>
  </li>
  <li>
    <p>이제 로그인 기능 만들어야지… <br /><br /><br /></p>
  </li>
</ul>

<h1 id="마감까지">마감까지</h1>
<ul>
  <li><code class="language-plaintext highlighter-rouge">D-24</code></li>
</ul>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="Project Log" /><category term="Project" /><category term="Cafe" /><category term="Log" /><summary type="html"><![CDATA[개발환경 MacBook Air (M1, 2020) OpenJDK 8 Eclipse 2021-12 tomcat 8.5]]></summary></entry><entry><title type="html">DB) 관계 데이터 모델링</title><link href="http://localhost:4000/database/db-05-relation/" rel="alternate" type="text/html" title="DB) 관계 데이터 모델링" /><published>2022-03-11T00:00:00+09:00</published><updated>2022-03-11T00:00:00+09:00</updated><id>http://localhost:4000/database/db-05-relation</id><content type="html" xml:base="http://localhost:4000/database/db-05-relation/"><![CDATA[<h1 id="-관계-데이터-모델의-개념">👀 관계 데이터 모델의 개념</h1>
<ul>
  <li>개념적 구조를 논리적 구조로 표현하는 논리적 데이터 모델</li>
  <li>하나의 개체에 대한 데이터를 하나의 릴레이션에 저장</li>
</ul>

<h2 id="기본-용어">기본 용어</h2>
<h3 id="릴레이션relation">릴레이션(relation)</h3>
<ul>
  <li>하나의 개체에 대한 데이터를 2차원 테이블의 구조로 저장한 것</li>
  <li>파일 관리 시스템 관점에서 파일(file)에 대응</li>
</ul>

<h3 id="속성attribute">속성(attribute)</h3>
<ul>
  <li>릴레이션의 열, 애트리뷰트로 <code class="language-plaintext highlighter-rouge">세로줄!</code></li>
  <li>파일 관리 시스템 관점에서 필드(field)에 대응</li>
</ul>

<h3 id="투플tuple">투플(tuple)</h3>
<ul>
  <li>릴레이션의 행. <code class="language-plaintext highlighter-rouge">가로줄!</code></li>
  <li>파일 관리 시스템 관점에서 레코드(record)에 대응</li>
</ul>

<h3 id="도메인domain">도메인(domain)</h3>
<ul>
  <li>하나의 속성이 가질 수 있는 모든 값의 집합</li>
  <li>속성 값을 입력 및 수정할 때 적합성의 판단 기준이 됨</li>
  <li>일반적으로 속성의 특성을 고려한 데이터 타입으로 정의</li>
</ul>

<h3 id="널null">널(null)</h3>
<ul>
  <li>속성 값을 아직 모르거나 해당되는 값이 없음을 표현</li>
</ul>

<h3 id="차수degree">차수(degree)</h3>
<ul>
  <li>하나의 릴레이션에서 속성의 전체 개수</li>
</ul>

<h3 id="카디널리티cardinality">카디널리티(cardinality)</h3>
<ul>
  <li>하나의 릴레이션에서 투플의 전체 개수<br /><br /></li>
</ul>

<h2 id="릴레이션의-구성">릴레이션의 구성</h2>
<h3 id="릴레이션-스키마relation-schema">릴레이션 스키마(relation schema)</h3>
<ul>
  <li>릴레이션의 논리적 구조. 뼈대라 할 수 있다.</li>
  <li>릴레이션의 이름과 릴레이션이 포함된 모든 속성 이름으로 정의
    <ul>
      <li>예) 고객(고객 아이디, 고객 이름, 나이, 등급, 직업, 적립금)</li>
    </ul>
  </li>
  <li>릴레이션 내포(relation intension)라고도 함</li>
  <li>정적인 특징이 있음</li>
</ul>

<h3 id="릴레이션-인스턴스relation-instance">릴레이션 인스턴스(relation instance)</h3>
<ul>
  <li>어느 한 시점에 릴레이션에 존재하는 투플들의 집합. 릴레이션 안에 실제로 들어있는 값이다.</li>
  <li>릴레이션 외연(relation extension)이라고도 함</li>
  <li>시간이 흐름에 따라 투플이 계속 추가되거나 삭제될 수 있기 때문에 동적인 특징이 있다.<br /><br /></li>
</ul>

<h2 id="데이터베이스의-구성">데이터베이스의 구성</h2>
<h3 id="데이터베이스-스키마database-schema">데이터베이스 스키마(database schema)</h3>
<ul>
  <li>데이터베이스의 전체 구조</li>
  <li>데이터베이스를 구성하는 릴레이션 스키마의 모음</li>
</ul>

<h3 id="데이터베이스-인스턴스database-instance">데이터베이스 인스턴스(database instance)</h3>
<ul>
  <li>데이터베이스를 구성하는 릴레이션 인스턴스의 모음<br /><br /></li>
</ul>

<h2 id="릴레이션의-특성">릴레이션의 특성</h2>
<ul>
  <li>투플의 유일성
    <ul>
      <li>하나의 릴레이션에는 동일한 투플이 존재할 수 없다.</li>
    </ul>
  </li>
  <li>투플의 무순서
    <ul>
      <li>하나의 릴레이션에서 투플 사이의 순서는 무의미하다.</li>
    </ul>
  </li>
  <li>속성의 무순서
    <ul>
      <li>하나의 릴레이션에서 속성 사이의 순서는 무의미하다.</li>
    </ul>
  </li>
  <li>속성의 원자성
    <ul>
      <li>속성 값으로 원자 값만 사용할 수 있다. 즉 한 속성 필드에 값이 2개 이상 들어갈 수 없음!<br /><br /></li>
    </ul>
  </li>
</ul>

<h2 id="키key">키(key)</h2>
<ul>
  <li>릴레이션에서 투플들을 유일하게 구별하는 속성 또는 속성들의 집합</li>
</ul>

<h3 id="키의-특성">키의 특성</h3>
<ul>
  <li>유일성(uniqueness)
    <ul>
      <li>하나의 릴레이션에서 모든 투플은 서로 다른 키 값을 가져야 함</li>
    </ul>
  </li>
  <li>최소성(minimality)
    <ul>
      <li>꼭 필요한 최소한의 속성들로만 키를 구성</li>
    </ul>
  </li>
</ul>

<h3 id="키의-종류">키의 종류</h3>
<h4 id="슈퍼키super-key">슈퍼키(super key)</h4>
<ul>
  <li>유일성을 만족하는 속성 또는 속성들의 집합</li>
  <li>예) 고객 릴레이션의 슈퍼키 : 고객아이디, (고객아이디, 고객이름), (고객이름, 주소) 등</li>
</ul>

<h4 id="후보키candidate-key">후보키(candidate key)</h4>
<ul>
  <li>유일성과 최소성을 만족하는 속성 또는 속성들의 집합</li>
  <li>예) 고객 릴레이션의 후보키 : 고객아이디, (고객이름, 주소) 등</li>
</ul>

<h4 id="기본키primary-key">기본키(primary key)</h4>
<ul>
  <li>후보키 중에서 기본적으로 사용하기 위해 선택한 키</li>
  <li>널값을 가질 수 있는 속성이 포함된 후보키는 부적합</li>
  <li>값이 자주 변경될 수 있는 속성이 포함된 후보키는 부적합</li>
  <li>단순한 후보키를 선택</li>
  <li>예) 고객 릴레이션의 기본키 : 고객아이디</li>
</ul>

<h4 id="대체키alternate-key">대체키(alternate key)</h4>
<ul>
  <li>기본키로 선택되지 못한 후보키</li>
  <li>예) 고객 릴레이션의 대체키 : (고객이름, 주소)</li>
</ul>

<h4 id="외래키foreign-key">외래키(foreign key)</h4>
<ul>
  <li>다른 릴레이션의 기본키를 참조하는 속성 또는 속성들의 집합</li>
  <li>릴레이션들 간의 관계를 표현</li>
  <li>참조하는 릴레이션 : 외래키를 가진 릴레이션(주문 릴레이션)</li>
  <li>참조되는 릴레이션 : 외래키가 참조하는 기본키를 가진 릴레이션(고객 릴레이션)</li>
  <li>역할
    <ul>
      <li>고객 릴레이션과 주문 릴레이션이 관계를 맺어 주문 릴레이션의 투플과 연관성 있는 고객 릴레이션의 투플을 연결할 수 있음</li>
      <li>외래키 속성과 그것이 참조하는 기본키 속성의 이름은 달라도 되지만 도메인은 같아야 한다.</li>
    </ul>
  </li>
  <li>하나의 릴레이션에는 외래키가 여러 개 존재할 수도 있고 외래키를 기본키로 사용할 수도 있다.</li>
  <li>같은 릴레이션의 기본키를 참조하는 외래키도 정의할 수 있다.</li>
  <li>외래키 속성은 널 값을 가질 수도 있다.<br /><br /></li>
</ul>

<h2 id="무결성-제약조건integrity-constraint">무결성 제약조건(integrity constraint)</h2>
<ul>
  <li>데이터의 무결성을 보장하고 일관된 상태로 유지하기 위한 규칙</li>
  <li>무결성 : 데이터를 결함이 없는 상태, 즉 정확하고 유효하게 유지하는 것</li>
</ul>

<h3 id="개체-무결성-제약조건entity-integrity-constraint">개체 무결성 제약조건(entity integrity constraint)</h3>
<ul>
  <li>기본키를 구성하는 모든 속성은 널 값을 가질 수 없는 규칙</li>
</ul>

<h3 id="참조-무결성-제약조건referential-integrity-constraint">참조 무결성 제약조건(referential integrity constraint)</h3>
<ul>
  <li>외래키는 참조할 수 없는 값을 가질 수 없는 규칙</li>
  <li>널 값은 가질 수 있지만 널 값이 아닌데 참조하려는 테이블에는 해당 값이 없으면 외래키로 사용할 수 없다.<br /><br /><br /></li>
</ul>

<h1 id="출처">출처</h1>
<ul>
  <li><a href="http://www.kocw.net/home/search/kemView.do?kemId=1163794">데이터베이스의 원리와 응용 - 한양대학교 KOCW 공개 강의</a></li>
</ul>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="Database" /><category term="DB" /><summary type="html"><![CDATA[👀 관계 데이터 모델의 개념 개념적 구조를 논리적 구조로 표현하는 논리적 데이터 모델 하나의 개체에 대한 데이터를 하나의 릴레이션에 저장]]></summary></entry><entry><title type="html">프로젝트) Cafe(웹 사이트) 만들기 4</title><link href="http://localhost:4000/project%20log/cafe-project-04/" rel="alternate" type="text/html" title="프로젝트) Cafe(웹 사이트) 만들기 4" /><published>2022-03-10T00:00:00+09:00</published><updated>2022-03-10T00:00:00+09:00</updated><id>http://localhost:4000/project%20log/cafe-project-04</id><content type="html" xml:base="http://localhost:4000/project%20log/cafe-project-04/"><![CDATA[<h1 id="개발환경">개발환경</h1>
<ul>
  <li>OpenJDK 8</li>
  <li>Eclipse 2021-12</li>
  <li>tomcat 8.5<br /><br /><br /></li>
</ul>

<h1 id="시작">시작</h1>
<ul>
  <li>2022.3.4 ~ <br /><br /><br /></li>
</ul>

<h1 id="주제">주제</h1>
<ul>
  <li>웹 백엔드 수업 중 중간 과제로 개인 프로젝트를 진행하게 되었다.</li>
  <li>회원가입/로그인/탈퇴 등 기본적인 회원관리 시스템을 가진 웹 사이트를 만드는 것이다. 주어진 기한은 <code class="language-plaintext highlighter-rouge">한 달</code></li>
  <li>나는 <code class="language-plaintext highlighter-rouge">다음 카페</code>를 소규모로 만들어 보기로 했다. 평소 자주 이용하기도 했고 과제의 평가 기준에서 요구하는 기능들을 다 담고 있기도 했기 때문에 이번 기회에 구현해 보면 그동안 배운 것들을 활용하기에 좋을 거 같았다.</li>
  <li>평가 기준에 사이트의 디자인 구현(HTML/CSS 등 프론트엔드)은 포함되지 않기 때문에 본인이 쓰고 싶은 HTML/CSS 템플릿을 구한 뒤 회원 관리 기능을 구현하면 된다.<br /><br /><br /></li>
</ul>

<h1 id="진행상황-1">진행상황 1</h1>
<ul>
  <li>오늘은 저번에 구현한 기본적인 회원가입 틀에서 사용자가 입력한 정보의 유효성을 검사하는 코드를 추가했다.</li>
  <li><code class="language-plaintext highlighter-rouge">Ajax</code>를 이용해 비동기방식으로 사용자가 입력한 아이디의 중복체크를 하려 했는데 학원 선생님이 워낙 짧게 알려주고 수업 시간이 다 끝나버린 데다 나도 웹 개발은 처음이라 당초 예상과 다르게 아이디 유효성 체크를 구현하는 데에 오랜 시간이 소요되었다.</li>
  <li>그래도 숱한 구글링 끝에 아이디 중복체크 부분은 내가 원하는대로 구현이 되었다!</li>
  <li>내가 모티브로 잡고 구현했던 기능은 <code class="language-plaintext highlighter-rouge">네이버 회원가입 페이지의 아이디 중복검사</code> 기능이다.</li>
</ul>

<h2 id="1-회원가입-페이지에-아이디-중복여부를-알려주는-문구-추가">1. 회원가입 페이지에 아이디 중복여부를 알려주는 문구 추가</h2>

<ul>
  <li>join.jsp</li>
</ul>

<div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;jsp:include </span><span class="na">page=</span><span class="s">"../inc/top.jsp"</span><span class="nt">&gt;&lt;/jsp:include&gt;</span>
<span class="c">&lt;!-- jQuery 라이브러리 로드 부분은 top.jsp에 있음 --&gt;</span>
<span class="nt">&lt;script </span><span class="na">src=</span><span class="s">"${pageContext.request.contextPath}/js/join.js"</span><span class="nt">&gt;&lt;/script&gt;</span>

...
중간 생략

<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"formRow"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;label</span> <span class="na">for=</span><span class="s">"MOD_TEXTFORM_NameField"</span><span class="nt">&gt;</span>아이디 <span class="nt">&lt;/label&gt;&lt;input</span> <span class="na">type=</span><span class="s">"text"</span> <span class="na">name=</span><span class="s">"id"</span> <span class="na">id=</span><span class="s">"id"</span> <span class="na">placeholder=</span><span class="s">"5~10자 이내의 영문+숫자만 입력하세요."</span><span class="nt">&gt;</span>
    <span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">"idMsg"</span><span class="nt">&gt;&lt;/div&gt;</span>
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">jQuery</code>를 이용해서 <code class="language-plaintext highlighter-rouge">&lt;div id="idMsg"&gt;&lt;/div&gt;</code> 태그에 중복인지 아닌지 알려주는 메세지를 삽입할 것이다.</li>
</ul>

<h2 id="2-memeberdao에서-db에-아이디-존재여부를-확인하는-함수-작성">2. MemeberDAO에서 DB에 아이디 존재여부를 확인하는 함수 작성</h2>

<ul>
  <li>MemberDAO.java</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// isExist(id)</span>
<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">isExist</span><span class="o">(</span><span class="nc">String</span> <span class="n">id</span><span class="o">)</span>
<span class="o">{</span>
	<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"DAO : isExist() 호출"</span><span class="o">);</span>
		
	<span class="k">try</span> 
	<span class="o">{</span>
		<span class="c1">// 1. 2. DB 연결</span>
		<span class="n">con</span> <span class="o">=</span> <span class="n">getCon</span><span class="o">();</span>
			
		<span class="c1">// 3. sql 작성 &amp; pstmt 연결</span>
		<span class="n">sql</span> <span class="o">=</span> <span class="s">"select id from cafe_members where id=?"</span><span class="o">;</span>
		<span class="n">pstmt</span> <span class="o">=</span> <span class="n">con</span><span class="o">.</span><span class="na">prepareStatement</span><span class="o">(</span><span class="n">sql</span><span class="o">);</span>
		<span class="n">pstmt</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="n">id</span><span class="o">);</span>
			
		<span class="c1">// 4. sql 실행</span>
		<span class="n">rs</span> <span class="o">=</span> <span class="n">pstmt</span><span class="o">.</span><span class="na">executeQuery</span><span class="o">();</span>
			
		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"DAO : 아이디 정보 조회 완료"</span><span class="o">);</span>
			
		<span class="k">if</span> <span class="o">(</span><span class="n">rs</span><span class="o">.</span><span class="na">next</span><span class="o">())</span> <span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
		<span class="k">else</span> <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
	<span class="o">}</span> 
	<span class="k">catch</span> <span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">)</span> 
	<span class="o">{</span>
		<span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
	<span class="o">}</span>
	<span class="k">finally</span> 
	<span class="o">{</span>
		<span class="nc">CloseDB</span><span class="o">();</span>
	<span class="o">}</span>
		
	<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"DAO : isExist(id) 끝!!!"</span><span class="o">);</span>
		
	<span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
<span class="o">}</span>
<span class="c1">// isExist(id)</span>
</code></pre></div></div>

<ul>
  <li>매개변수로 받은 아이디를 이용해 DB에서 조회한 후 해당 아이디가 존재한다면 <code class="language-plaintext highlighter-rouge">true</code>를, 존재하지 않으면 <code class="language-plaintext highlighter-rouge">false</code>를 리턴하도록 했다.</li>
  <li>매개변수로 받은 아이디가 존재하지 않을 때에만(<code class="language-plaintext highlighter-rouge">return false</code>) 모든 정보를 입력했을 때에 회원가입 프로세스가 진행되도록 할 것이기 때문에 기본 리턴값은 <code class="language-plaintext highlighter-rouge">true</code>로 설정했다.</li>
</ul>

<h2 id="3-서블릿-만들어서-중복체크-확인하는-동작-수행">3. 서블릿 만들어서 중복체크 확인하는 동작 수행</h2>
<ul>
  <li>IdCheck.java</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@WebServlet</span><span class="o">(</span><span class="s">"/idCheck.me"</span><span class="o">)</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">IdCheck</span> <span class="kd">extends</span> <span class="nc">HttpServlet</span>
<span class="o">{</span>
	<span class="kd">protected</span> <span class="kt">void</span> <span class="nf">doProcess</span><span class="o">(</span><span class="nc">HttpServletRequest</span> <span class="n">req</span><span class="o">,</span> <span class="nc">HttpServletResponse</span> <span class="n">resp</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">ServletException</span><span class="o">,</span> <span class="nc">IOException</span> 
	<span class="o">{</span>
		<span class="n">req</span><span class="o">.</span><span class="na">setCharacterEncoding</span><span class="o">(</span><span class="s">"UTF-8"</span><span class="o">);</span>
		<span class="n">resp</span><span class="o">.</span><span class="na">setContentType</span><span class="o">(</span><span class="s">"text/html; charset=utf-8"</span><span class="o">);</span>
		
		<span class="nc">MemberDAO</span> <span class="n">dao</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">MemberDAO</span><span class="o">();</span>
		<span class="nc">PrintWriter</span> <span class="n">out</span> <span class="o">=</span> <span class="n">resp</span><span class="o">.</span><span class="na">getWriter</span><span class="o">();</span>
		<span class="kt">boolean</span> <span class="n">result</span> <span class="o">=</span> <span class="n">dao</span><span class="o">.</span><span class="na">isExist</span><span class="o">(</span><span class="n">req</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"id"</span><span class="o">));</span>
		<span class="k">if</span> <span class="o">(</span><span class="n">result</span><span class="o">)</span>
		<span class="o">{</span>
			<span class="n">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="s">"false"</span><span class="o">);</span>
		<span class="o">}</span>
		<span class="k">else</span> 
		<span class="o">{</span>
			<span class="n">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="s">"true"</span><span class="o">);</span>
		<span class="o">}</span>
        
		<span class="n">out</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
	<span class="o">}</span>
	
	<span class="nd">@Override</span>
	<span class="kd">protected</span> <span class="kt">void</span> <span class="nf">doGet</span><span class="o">(</span><span class="nc">HttpServletRequest</span> <span class="n">req</span><span class="o">,</span> <span class="nc">HttpServletResponse</span> <span class="n">resp</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">ServletException</span><span class="o">,</span> <span class="nc">IOException</span> 
	<span class="o">{</span>
		<span class="n">doProcess</span><span class="o">(</span><span class="n">req</span><span class="o">,</span> <span class="n">resp</span><span class="o">);</span>
	<span class="o">}</span>

	<span class="nd">@Override</span>
	<span class="kd">protected</span> <span class="kt">void</span> <span class="nf">doPost</span><span class="o">(</span><span class="nc">HttpServletRequest</span> <span class="n">req</span><span class="o">,</span> <span class="nc">HttpServletResponse</span> <span class="n">resp</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">ServletException</span><span class="o">,</span> <span class="nc">IOException</span> 
	<span class="o">{</span>
		<span class="n">doProcess</span><span class="o">(</span><span class="n">req</span><span class="o">,</span> <span class="n">resp</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>처음엔 <code class="language-plaintext highlighter-rouge">jsp</code> 페이지를 만들어서 아주 간단하게 만들었는데 생각보다 잘 안 되서 구글링 후 서블릿으로 만들었다.</li>
  <li><code class="language-plaintext highlighter-rouge">PrintWriter</code>를 이용해 출력 스트림을 만들어 DB 검색 결과를 보내도록 했다. 검색 결과가 있다면 중복되는 아이디가 있어서 사용할 수 없는 아이디니까 <code class="language-plaintext highlighter-rouge">false</code>, 없다면 중복되는 아이디가 없어서 사용 가능한 아이디니까 <code class="language-plaintext highlighter-rouge">true</code></li>
  <li>이 부분을 구현하면서 출력 스트림에 대해 다시 공부하게 되어서 좋았다! 역시 그냥 배우는 것 보다는 직접 써 봐야 머리에 잘 들어온다.</li>
</ul>

<h2 id="4-jquery로-아이디-중복체크-하는-함수-구현">4. jQuery로 아이디 중복체크 하는 함수 구현</h2>
<ul>
  <li>join.js</li>
</ul>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">$</span><span class="p">(</span><span class="nb">document</span><span class="p">).</span><span class="nx">ready</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span>
	<span class="kd">var</span> <span class="nx">$idCheck</span> <span class="o">=</span> <span class="nx">idCheck</span><span class="p">();</span>
<span class="p">});</span>

<span class="kd">function</span> <span class="nx">idCheck</span><span class="p">()</span>
<span class="p">{</span>
	<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">idCheck() 호출</span><span class="dl">"</span><span class="p">);</span>
	
	<span class="kd">var</span> <span class="nx">ret</span><span class="p">;</span>
	
	<span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">#id</span><span class="dl">'</span><span class="p">).</span><span class="nx">blur</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span>
		<span class="nx">$</span><span class="p">.</span><span class="nx">ajax</span><span class="p">({</span>
			<span class="na">type</span><span class="p">:</span> <span class="dl">'</span><span class="s1">POST</span><span class="dl">'</span><span class="p">,</span>
			<span class="na">async</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
			<span class="na">url</span><span class="p">:</span> <span class="dl">'</span><span class="s1">./idCheck.me</span><span class="dl">'</span><span class="p">,</span>
			<span class="na">data</span><span class="p">:</span> <span class="p">{</span>
				<span class="dl">'</span><span class="s1">id</span><span class="dl">'</span><span class="p">:</span> <span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">#id</span><span class="dl">'</span><span class="p">).</span><span class="nx">val</span><span class="p">()</span>
			<span class="p">},</span>
			<span class="na">dataType</span><span class="p">:</span> <span class="dl">'</span><span class="s1">text</span><span class="dl">'</span><span class="p">,</span>
			<span class="na">success</span><span class="p">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">data</span><span class="p">)</span> <span class="p">{</span>
				<span class="k">if</span> <span class="p">(</span><span class="nx">data</span> <span class="o">===</span> <span class="dl">'</span><span class="s1">true</span><span class="dl">'</span><span class="p">)</span>
				<span class="p">{</span>
					<span class="kd">var</span> <span class="nx">userId</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">#id</span><span class="dl">'</span><span class="p">).</span><span class="nx">val</span><span class="p">();</span>
					<span class="k">if</span> <span class="p">(</span><span class="mi">5</span> <span class="o">&gt;</span> <span class="nx">userId</span><span class="p">.</span><span class="nx">length</span> <span class="o">||</span> <span class="mi">10</span> <span class="o">&lt;</span> <span class="nx">userId</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span>
					<span class="p">{</span>
						<span class="nx">$id</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
						<span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">#idMsg</span><span class="dl">'</span><span class="p">).</span><span class="nx">text</span><span class="p">(</span><span class="dl">'</span><span class="s1">5자리 이상 10자리 이하로 입력해 주세요.</span><span class="dl">'</span><span class="p">);</span>
						<span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">#idMsg</span><span class="dl">'</span><span class="p">).</span><span class="nx">css</span><span class="p">(</span><span class="dl">'</span><span class="s1">color</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">red</span><span class="dl">'</span><span class="p">);</span>
					<span class="p">}</span>
					<span class="k">else</span> 
					<span class="p">{</span>
						<span class="nx">ret</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
						<span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">#idMsg</span><span class="dl">'</span><span class="p">).</span><span class="nx">text</span><span class="p">(</span><span class="dl">'</span><span class="s1">사용할 수 있는 아이디입니다.</span><span class="dl">'</span><span class="p">);</span>
						<span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">#idMsg</span><span class="dl">'</span><span class="p">).</span><span class="nx">css</span><span class="p">(</span><span class="dl">'</span><span class="s1">color</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">green</span><span class="dl">'</span><span class="p">);</span>
					<span class="p">}</span>
				<span class="p">}</span>
				<span class="k">else</span> 
				<span class="p">{</span>
					<span class="nx">ret</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
					<span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">#idMsg</span><span class="dl">'</span><span class="p">).</span><span class="nx">text</span><span class="p">(</span><span class="dl">'</span><span class="s1">이미 존재하는 아이디입니다.</span><span class="dl">'</span><span class="p">);</span>
					<span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">#idMsg</span><span class="dl">'</span><span class="p">).</span><span class="nx">css</span><span class="p">(</span><span class="dl">'</span><span class="s1">color</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">red</span><span class="dl">'</span><span class="p">);</span>
				<span class="p">}</span>
			<span class="p">},</span>
			<span class="na">error</span><span class="p">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">data</span><span class="p">)</span> <span class="p">{</span>
				<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">error</span><span class="dl">'</span><span class="p">);</span>
			<span class="p">}</span>
		<span class="p">});</span>
	<span class="p">});</span>
	
	<span class="k">return</span> <span class="nx">ret</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">IdCheck</code>에서 출력 스트림으로 받은 결과값을 이용해 아이디 입력란 하단에 출력할 메세지를 결정하는데 리턴값이 <code class="language-plaintext highlighter-rouge">false</code>라면 사용불가 메세지를 바로 출력하면 되지만 <code class="language-plaintext highlighter-rouge">true</code>인 경우에 사용가능 메세지를 바로 출력하니까 아이디를 입력하지 않고 입력란 바깥을 클릭했을 때에도 사용가능한 아이디라는 메세지가 출력되었다. 아이디를 입력하지 않았을 때에도 DB에서 검색되지 않을 테니까 최종적으로 사용이 가능하다는 파라미터가 리턴될 것이다.</li>
  <li>그래서 리턴값이 <code class="language-plaintext highlighter-rouge">true</code>인 경우에는 아이디 입력란에 입력되어 있는 문자열의 길이를 검사한 후 그에 따라 분기를 나누었다.</li>
  <li>여기까지 해서 <code class="language-plaintext highlighter-rouge">네이버 회원가입 페이지</code>의 아이디 중복검사 기능과 같게 구현했다! 뿌듯뿌듯 ☺️</li>
</ul>
<p align="center"><img src="../../assets/images/existId.png" width="400" /></p>
<p align="center"><img src="../../assets/images/nonExistId.png" width="400" /></p>
<p align="center"><img src="../../assets/images/tooLong.png" width="400" /></p>
<p align="center"><img src="../../assets/images/tooShort.png" width="400" /></p>
<p><br /><br /></p>

<h1 id="진행상황-2">진행상황 2</h1>

<p align="center"><img src="../../assets/images/inputPhone.png" width="400" /></p>

<ul>
  <li>휴대폰 번호 입력받는 부분을 세 칸으로 나누었기 때문에 각 필드마다 정해진 자리수만큼 입력하면 다음 칸으로 자동으로 커서가 넘어가도록 하는 부분을 구현했다.</li>
</ul>

<h2 id="1-사용자에게서-휴대폰-번호-입력받는-부분-수정">1. 사용자에게서 휴대폰 번호 입력받는 부분 수정</h2>
<ul>
  <li>join.jsp</li>
</ul>

<div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"formRow"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;label</span> <span class="na">for=</span><span class="s">"MOD_TEXTFORM_TelField"</span><span class="nt">&gt;</span>휴대폰 번호 <span class="nt">&lt;/label&gt;</span>
    <span class="nt">&lt;label</span> <span class="na">class=</span><span class="s">"phone"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;input</span> <span class="na">id=</span><span class="s">"phone1"</span> <span class="na">type=</span><span class="s">"tel"</span> <span class="na">name=</span><span class="s">"phone1"</span> <span class="na">size=</span><span class="s">"1"</span> <span class="na">maxlength=</span><span class="s">"3"</span> <span class="na">oninput=</span><span class="s">"tabCursor(1)"</span><span class="nt">&gt;</span> - 
    <span class="nt">&lt;input</span> <span class="na">id=</span><span class="s">"phone2"</span> <span class="na">type=</span><span class="s">"tel"</span> <span class="na">name=</span><span class="s">"phone2"</span> <span class="na">size=</span><span class="s">"3"</span> <span class="na">maxlength=</span><span class="s">"4"</span> <span class="na">oninput=</span><span class="s">"tabCursor(2)"</span><span class="nt">&gt;</span> - 
    <span class="nt">&lt;input</span> <span class="na">id=</span><span class="s">"phone3"</span> <span class="na">type=</span><span class="s">"tel"</span> <span class="na">name=</span><span class="s">"phone3"</span> <span class="na">size=</span><span class="s">"3"</span> <span class="na">maxlength=</span><span class="s">"4"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;/label&gt;</span>
<span class="nt">&lt;/div&gt;</span>
</code></pre></div></div>

<h2 id="2-javascript로-커서-이동하는-함수-구현">2. javascript로 커서 이동하는 함수 구현</h2>
<ul>
  <li>join.js</li>
</ul>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// 휴대폰 번호 필드 1, 2번 칸에서 지정된 숫자만큼 입력하면 다음 칸으로 커서 넘기는 함수</span>
<span class="kd">function</span> <span class="nx">tabCursor</span><span class="p">(</span><span class="nx">_section</span><span class="p">)</span>
<span class="p">{</span>
	<span class="kd">var</span> <span class="nx">ph</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
	<span class="k">switch</span> <span class="p">(</span><span class="nx">_section</span><span class="p">)</span>
	<span class="p">{</span>
		<span class="k">case</span> <span class="mi">1</span><span class="p">:</span>
			<span class="nx">ph</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">join</span><span class="p">.</span><span class="nx">phone1</span><span class="p">.</span><span class="nx">value</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span>
			<span class="k">if</span> <span class="p">(</span><span class="mi">3</span> <span class="o">===</span> <span class="nx">ph</span><span class="p">)</span>
				<span class="nx">join</span><span class="p">.</span><span class="nx">phone2</span><span class="p">.</span><span class="nx">focus</span><span class="p">();</span>
			<span class="k">break</span><span class="p">;</span>
		
		<span class="k">case</span> <span class="mi">2</span><span class="p">:</span>
			<span class="nx">ph</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">join</span><span class="p">.</span><span class="nx">phone2</span><span class="p">.</span><span class="nx">value</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span>
			<span class="k">if</span> <span class="p">(</span><span class="mi">4</span> <span class="o">===</span> <span class="nx">ph</span><span class="p">)</span>
				<span class="nx">join</span><span class="p">.</span><span class="nx">phone3</span><span class="p">.</span><span class="nx">focus</span><span class="p">();</span>
			<span class="k">break</span><span class="p">;</span>
	<span class="p">}</span>
<span class="p">}</span> 
</code></pre></div></div>

<ul>
  <li>처음에 내 뜻대로 구현되지 않을 때에는 머리를 많이 쥐어뜯었지만 구현을 완료하고 나니까 참 뿌듯하다 😄<br /><br /><br /></li>
</ul>

<h1 id="마감까지">마감까지</h1>
<ul>
  <li><code class="language-plaintext highlighter-rouge">D-26</code></li>
</ul>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="Project Log" /><category term="Project" /><category term="Cafe" /><category term="Log" /><summary type="html"><![CDATA[개발환경 OpenJDK 8 Eclipse 2021-12 tomcat 8.5]]></summary></entry><entry><title type="html">프로젝트) Cafe(웹 사이트) 만들기 5 - 회원가입 유효성 검사 구현 완료</title><link href="http://localhost:4000/project%20log/cafe-project-05/" rel="alternate" type="text/html" title="프로젝트) Cafe(웹 사이트) 만들기 5 - 회원가입 유효성 검사 구현 완료" /><published>2022-03-10T00:00:00+09:00</published><updated>2022-03-10T00:00:00+09:00</updated><id>http://localhost:4000/project%20log/cafe-project-05</id><content type="html" xml:base="http://localhost:4000/project%20log/cafe-project-05/"><![CDATA[<h1 id="개발환경">개발환경</h1>
<ul>
  <li>MacBook Air (M1, 2020)</li>
  <li>OpenJDK 8</li>
  <li>Eclipse 2021-12</li>
  <li>tomcat 8.5<br /><br /><br /></li>
</ul>

<h1 id="시작">시작</h1>
<ul>
  <li>2022.3.4 ~ <br /><br /><br /></li>
</ul>

<h1 id="주제">주제</h1>
<ul>
  <li>웹 백엔드 수업 중 중간 과제로 개인 프로젝트를 진행하게 되었다.</li>
  <li>회원가입/로그인/탈퇴 등 기본적인 회원관리 시스템을 가진 웹 사이트를 만드는 것이다. 주어진 기한은 <code class="language-plaintext highlighter-rouge">한 달</code></li>
  <li>나는 <code class="language-plaintext highlighter-rouge">다음 카페</code>를 소규모로 만들어 보기로 했다. 평소 자주 이용하기도 했고 과제의 평가 기준에서 요구하는 기능들을 다 담고 있기도 했기 때문에 이번 기회에 구현해 보면 그동안 배운 것들을 활용하기에 좋을 거 같았다.</li>
  <li>평가 기준에 사이트의 디자인 구현(HTML/CSS 등 프론트엔드)은 포함되지 않기 때문에 본인이 쓰고 싶은 HTML/CSS 템플릿을 구한 뒤 회원 관리 기능을 구현하면 된다.<br /><br /><br /></li>
</ul>

<h1 id="진행상황-1">진행상황 1</h1>
<ul>
  <li>어제 회원가입 페이지에서 사용자가 입력한 아이디의 유효성을 검증하는 부분까지 구현했다.</li>
  <li>그리고 오늘 회원가입 시 사용자가 입력한 정보가 유효한지 검증하는 로직을 모두 구현했다!</li>
</ul>

<h2 id="1-joinjsp">1. join.jsp</h2>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;h3&gt;</span>회원가입<span class="nt">&lt;/h3&gt;&lt;br&gt;</span>
<span class="nt">&lt;form</span> <span class="na">name=</span><span class="s">"join"</span> <span class="na">action=</span><span class="s">"./MemberJoinAction.me"</span> <span class="na">method=</span><span class="s">"post"</span> <span class="na">onsubmit=</span><span class="s">"return finalCheck();"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"formRow"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;label</span> <span class="na">for=</span><span class="s">"MOD_TEXTFORM_NameField"</span><span class="nt">&gt;</span>아이디 <span class="nt">&lt;/label&gt;&lt;input</span> <span class="na">type=</span><span class="s">"text"</span> <span class="na">name=</span><span class="s">"id"</span> <span class="na">id=</span><span class="s">"id"</span> <span class="na">placeholder=</span><span class="s">"5~10자 이내의 영문+숫자 조합"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;/div&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">"idMsg"</span><span class="nt">&gt;&lt;/div&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"formRow"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;label</span> <span class="na">for=</span><span class="s">"MOD_TEXTFORM_NameField"</span><span class="nt">&gt;</span>비밀번호 <span class="nt">&lt;/label&gt;&lt;input</span> <span class="na">type=</span><span class="s">"password"</span> <span class="na">name=</span><span class="s">"pass"</span> <span class="na">id=</span><span class="s">"pass"</span> <span class="na">placeholder=</span><span class="s">"8~20자 영문+숫자+특수문자 조합"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;/div&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">"passMsg"</span><span class="nt">&gt;&lt;/div&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"formRow"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;label</span> <span class="na">for=</span><span class="s">"MOD_TEXTFORM_NameField"</span><span class="nt">&gt;</span>비밀번호 확인 <span class="nt">&lt;/label&gt;&lt;input</span> <span class="na">type=</span><span class="s">"password"</span> <span class="na">name=</span><span class="s">"confirm"</span> <span class="na">id=</span><span class="s">"confirm"</span> <span class="na">placeholder=</span><span class="s">"비밀번호를 다시 입력하세요."</span><span class="nt">&gt;</span>
    <span class="nt">&lt;/div&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">"confirmMsg"</span><span class="nt">&gt;&lt;/div&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"formRow"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;label</span> <span class="na">for=</span><span class="s">"MOD_TEXTFORM_NameField"</span><span class="nt">&gt;</span>이름 <span class="nt">&lt;/label&gt;&lt;input</span> <span class="na">id=</span><span class="s">"MOD_TEXTFORM_NameField"</span> <span class="na">type=</span><span class="s">"text"</span> <span class="na">name=</span><span class="s">"name"</span> <span class="na">class=</span><span class="s">"name"</span> <span class="na">placeholder=</span><span class="s">"이름을 입력하세요."</span><span class="nt">&gt;</span>
    <span class="nt">&lt;/div&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">"nameMsg"</span><span class="nt">&gt;&lt;/div&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"formRow"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;label</span> <span class="na">for=</span><span class="s">"MOD_TEXTFORM_NameField"</span><span class="nt">&gt;</span>생년월일 <span class="nt">&lt;/label&gt;&lt;input</span> <span class="na">id=</span><span class="s">"MOD_TEXTFORM_NameField"</span> <span class="na">type=</span><span class="s">"date"</span> <span class="na">name=</span><span class="s">"birth"</span> <span class="na">class=</span><span class="s">"birth"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;/div&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">"birthMsg"</span><span class="nt">&gt;&lt;/div&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"formRow"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;label</span> <span class="na">for=</span><span class="s">"MOD_TEXTFORM_NameField"</span><span class="nt">&gt;</span>성별 <span class="nt">&lt;/label&gt;&lt;input</span> <span class="na">class=</span><span class="s">"radio"</span> <span class="na">type=</span><span class="s">"radio"</span> <span class="na">name=</span><span class="s">"gender"</span> <span class="na">id=</span><span class="s">"gender"</span> <span class="na">value=</span><span class="s">"남"</span><span class="nt">&gt;&lt;label</span> <span class="na">class=</span><span class="s">"radioText"</span><span class="nt">&gt;</span>남<span class="nt">&lt;/label&gt;</span> 
    <span class="nt">&lt;input</span> <span class="na">class=</span><span class="s">"radio"</span> <span class="na">id=</span><span class="s">"gender"</span> <span class="na">type=</span><span class="s">"radio"</span> <span class="na">name=</span><span class="s">"gender"</span> <span class="na">value=</span><span class="s">"여"</span><span class="nt">&gt;&lt;label</span> <span class="na">class=</span><span class="s">"radioText"</span><span class="nt">&gt;</span>여<span class="nt">&lt;/label&gt;</span>
    <span class="nt">&lt;/div&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">"genderMsg"</span><span class="nt">&gt;&lt;/div&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"formRow"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;label</span> <span class="na">for=</span><span class="s">"MOD_TEXTFORM_NameField"</span><span class="nt">&gt;</span>도시 <span class="nt">&lt;/label&gt;</span>
        <span class="nt">&lt;select</span> <span class="na">name=</span><span class="s">"city"</span><span class="nt">&gt;</span>
            <span class="nt">&lt;option</span> <span class="na">selected</span> <span class="na">disabled</span><span class="nt">&gt;</span>도시를 선택하세요.<span class="nt">&lt;/option&gt;</span>
            <span class="nt">&lt;option&gt;</span>서울<span class="nt">&lt;/option&gt;</span>
            <span class="nt">&lt;option&gt;</span>부산<span class="nt">&lt;/option&gt;</span>
            <span class="nt">&lt;option&gt;</span>대전<span class="nt">&lt;/option&gt;</span>
        <span class="nt">&lt;/select&gt;</span>
    <span class="nt">&lt;/div&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">"cityMsg"</span><span class="nt">&gt;&lt;/div&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"formRow"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;label</span> <span class="na">for=</span><span class="s">"MOD_TEXTFORM_TelField"</span><span class="nt">&gt;</span>휴대폰 번호 <span class="nt">&lt;/label&gt;</span>
    <span class="nt">&lt;label</span> <span class="na">class=</span><span class="s">"phone"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;input</span> <span class="na">id=</span><span class="s">"phone1"</span> <span class="na">type=</span><span class="s">"tel"</span> <span class="na">name=</span><span class="s">"phone1"</span> <span class="na">size=</span><span class="s">"1"</span> <span class="na">maxlength=</span><span class="s">"3"</span> <span class="na">oninput=</span><span class="s">"tabCursor(1)"</span><span class="nt">&gt;</span> - 
    <span class="nt">&lt;input</span> <span class="na">id=</span><span class="s">"phone2"</span> <span class="na">type=</span><span class="s">"tel"</span> <span class="na">name=</span><span class="s">"phone2"</span> <span class="na">size=</span><span class="s">"3"</span> <span class="na">maxlength=</span><span class="s">"4"</span> <span class="na">oninput=</span><span class="s">"tabCursor(2)"</span><span class="nt">&gt;</span> - 
    <span class="nt">&lt;input</span> <span class="na">id=</span><span class="s">"phone3"</span> <span class="na">type=</span><span class="s">"tel"</span> <span class="na">name=</span><span class="s">"phone3"</span> <span class="na">size=</span><span class="s">"3"</span> <span class="na">maxlength=</span><span class="s">"4"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;/label&gt;</span>
    <span class="nt">&lt;/div&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">"phoneMsg"</span><span class="nt">&gt;&lt;/div&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"formRow"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;label</span> <span class="na">for=</span><span class="s">"MOD_TEXTFORM_EmailField"</span><span class="nt">&gt;</span>이메일 <span class="nt">&lt;/label&gt;&lt;input</span> <span class="na">type=</span><span class="s">"email"</span> <span class="na">name=</span><span class="s">"email"</span> <span class="na">id=</span><span class="s">"email"</span> <span class="na">placeholder=</span><span class="s">"abc123@gmail.com"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;/div&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">"emailMsg"</span><span class="nt">&gt;&lt;/div&gt;</span>
    <span class="nt">&lt;button</span> <span class="na">type=</span><span class="s">"submit"</span> <span class="na">class=</span><span class="s">"btn"</span><span class="nt">&gt;</span>Send form<span class="nt">&lt;/button&gt;</span>
<span class="nt">&lt;/form&gt;</span>
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">html</code> 부분은 무료 템플릿 사이트에 있는 것을 다운받아서 사용한 것이고 입력 정보 유효성 검사를 위해 각 필드별로 <code class="language-plaintext highlighter-rouge">id</code>와 <code class="language-plaintext highlighter-rouge">class</code>만 추가했다.</li>
  <li>거주지를 입력하는 부분은 약식으로 도시 3개만 넣었다.</li>
  <li><code class="language-plaintext highlighter-rouge">form</code> 태그를 최종 <code class="language-plaintext highlighter-rouge">submit</code> 하기 전에 <code class="language-plaintext highlighter-rouge">finalCheck()</code> 함수를 호출해 입력한 정보들의 유효성 검사를 완료한 후에 결과에 따라 페이지를 이동하도록 했다.</li>
</ul>

<h2 id="2-joinjs">2. join.js</h2>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">$id</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
<span class="kd">var</span> <span class="nx">$pass</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
<span class="kd">var</span> <span class="nx">$passConfirm</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
<span class="kd">var</span> <span class="nx">$name</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
<span class="kd">var</span> <span class="nx">$birth</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
<span class="kd">var</span> <span class="nx">$gender</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
<span class="kd">var</span> <span class="nx">$city</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
<span class="kd">var</span> <span class="nx">$phone</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
<span class="kd">var</span> <span class="nx">$email</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
 
<span class="nx">$</span><span class="p">(</span><span class="nb">document</span><span class="p">).</span><span class="nx">ready</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span>
<span class="p">{</span>
	<span class="nx">idCheck</span><span class="p">();</span>
	<span class="nx">passCheck</span><span class="p">();</span>
	<span class="nx">passConfirm</span><span class="p">();</span>
	<span class="nx">nameCheck</span><span class="p">();</span>
	<span class="nx">birthCheck</span><span class="p">();</span>
	<span class="nx">emailCheck</span><span class="p">();</span>
<span class="p">});</span>

<span class="c1">// 휴대폰 번호 필드 1, 2번 칸에서 지정된 숫자만큼 입력하면 다음 칸으로 커서 넘기는 함수</span>
<span class="kd">function</span> <span class="nx">tabCursor</span><span class="p">(</span><span class="nx">section</span><span class="p">)</span>
<span class="p">{</span>
	<span class="kd">var</span> <span class="nx">ph</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
	<span class="k">switch</span> <span class="p">(</span><span class="nx">section</span><span class="p">)</span>
	<span class="p">{</span>
		<span class="k">case</span> <span class="mi">1</span><span class="p">:</span>
			<span class="nx">ph</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="dl">"</span><span class="s2">#phone1</span><span class="dl">"</span><span class="p">).</span><span class="nx">val</span><span class="p">();</span>
			<span class="k">if</span> <span class="p">(</span><span class="mi">3</span> <span class="o">===</span> <span class="nx">ph</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span>
				<span class="nx">$</span><span class="p">(</span><span class="dl">"</span><span class="s2">#phone2</span><span class="dl">"</span><span class="p">).</span><span class="nx">focus</span><span class="p">();</span>
			<span class="k">break</span><span class="p">;</span>
		
		<span class="k">case</span> <span class="mi">2</span><span class="p">:</span>
			<span class="nx">ph</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="dl">"</span><span class="s2">#phone2</span><span class="dl">"</span><span class="p">).</span><span class="nx">val</span><span class="p">();</span>
			<span class="k">if</span> <span class="p">(</span><span class="mi">4</span> <span class="o">===</span> <span class="nx">ph</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span>
				<span class="nx">$</span><span class="p">(</span><span class="dl">"</span><span class="s2">#phone3</span><span class="dl">"</span><span class="p">).</span><span class="nx">focus</span><span class="p">();</span>
			<span class="k">break</span><span class="p">;</span>
	<span class="p">}</span>
<span class="p">}</span> 

<span class="kd">function</span> <span class="nx">idCheck</span><span class="p">()</span>
<span class="p">{</span>
	<span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">#id</span><span class="dl">'</span><span class="p">).</span><span class="nx">blur</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span>
	<span class="p">{</span>
		<span class="nx">$</span><span class="p">.</span><span class="nx">ajax</span><span class="p">({</span>
			<span class="na">type</span><span class="p">:</span> <span class="dl">'</span><span class="s1">POST</span><span class="dl">'</span><span class="p">,</span>
			<span class="na">async</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
			<span class="na">url</span><span class="p">:</span> <span class="dl">'</span><span class="s1">./idCheck.me</span><span class="dl">'</span><span class="p">,</span>
			<span class="na">data</span><span class="p">:</span> <span class="p">{</span>
				<span class="dl">'</span><span class="s1">id</span><span class="dl">'</span><span class="p">:</span> <span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">#id</span><span class="dl">'</span><span class="p">).</span><span class="nx">val</span><span class="p">()</span>
			<span class="p">},</span>
			<span class="na">dataType</span><span class="p">:</span> <span class="dl">'</span><span class="s1">text</span><span class="dl">'</span><span class="p">,</span>
			<span class="na">success</span><span class="p">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">data</span><span class="p">)</span> <span class="p">{</span>
				<span class="k">if</span> <span class="p">(</span><span class="nx">data</span> <span class="o">===</span> <span class="dl">'</span><span class="s1">true</span><span class="dl">'</span><span class="p">)</span>
				<span class="p">{</span>
					<span class="kd">var</span> <span class="nx">userId</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">#id</span><span class="dl">'</span><span class="p">).</span><span class="nx">val</span><span class="p">();</span>
					<span class="k">if</span> <span class="p">(</span><span class="mi">5</span> <span class="o">&gt;</span> <span class="nx">userId</span><span class="p">.</span><span class="nx">length</span> <span class="o">||</span> <span class="mi">10</span> <span class="o">&lt;</span> <span class="nx">userId</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span>
					<span class="p">{</span>
						<span class="nx">$id</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
						<span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">#idMsg</span><span class="dl">'</span><span class="p">).</span><span class="nx">text</span><span class="p">(</span><span class="dl">'</span><span class="s1">5자리 이상 10자리 이하로 입력해 주세요.</span><span class="dl">'</span><span class="p">);</span>
						<span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">#idMsg</span><span class="dl">'</span><span class="p">).</span><span class="nx">css</span><span class="p">(</span><span class="dl">'</span><span class="s1">color</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">red</span><span class="dl">'</span><span class="p">);</span>
					<span class="p">}</span>
					<span class="k">else</span> 
					<span class="p">{</span>
						<span class="nx">$id</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
						<span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">#idMsg</span><span class="dl">'</span><span class="p">).</span><span class="nx">text</span><span class="p">(</span><span class="dl">'</span><span class="s1">사용할 수 있는 아이디입니다.</span><span class="dl">'</span><span class="p">);</span>
						<span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">#idMsg</span><span class="dl">'</span><span class="p">).</span><span class="nx">css</span><span class="p">(</span><span class="dl">'</span><span class="s1">color</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">green</span><span class="dl">'</span><span class="p">);</span>
					<span class="p">}</span>
				<span class="p">}</span>
				<span class="k">else</span> 
				<span class="p">{</span>
					<span class="nx">$id</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
					<span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">#idMsg</span><span class="dl">'</span><span class="p">).</span><span class="nx">text</span><span class="p">(</span><span class="dl">'</span><span class="s1">이미 존재하는 아이디입니다.</span><span class="dl">'</span><span class="p">);</span>
					<span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">#idMsg</span><span class="dl">'</span><span class="p">).</span><span class="nx">css</span><span class="p">(</span><span class="dl">'</span><span class="s1">color</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">red</span><span class="dl">'</span><span class="p">);</span>
				<span class="p">}</span>
			<span class="p">},</span>
			<span class="na">error</span><span class="p">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">data</span><span class="p">)</span> <span class="p">{</span>
				<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">error</span><span class="dl">'</span><span class="p">);</span>
			<span class="p">}</span>
		<span class="p">});</span>
	<span class="p">});</span>
<span class="p">}</span>

<span class="c1">// 비밀번호 유효성 검사하는 함수</span>
<span class="kd">function</span> <span class="nx">passCheck</span><span class="p">()</span>
<span class="p">{</span>
	<span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">#pass</span><span class="dl">'</span><span class="p">).</span><span class="nx">blur</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span>
	<span class="p">{</span>
		<span class="kd">var</span> <span class="nx">pass</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">#pass</span><span class="dl">'</span><span class="p">).</span><span class="nx">val</span><span class="p">();</span>
		<span class="kd">var</span> <span class="nx">num</span> <span class="o">=</span> <span class="nx">pass</span><span class="p">.</span><span class="nx">search</span><span class="p">(</span><span class="sr">/</span><span class="se">[</span><span class="sr">0-9</span><span class="se">]</span><span class="sr">/g</span><span class="p">);</span>
		<span class="kd">var</span> <span class="nx">eng</span> <span class="o">=</span> <span class="nx">pass</span><span class="p">.</span><span class="nx">search</span><span class="p">(</span><span class="sr">/</span><span class="se">[</span><span class="sr">a-z</span><span class="se">]</span><span class="sr">/ig</span><span class="p">);</span>
		<span class="kd">var</span> <span class="nx">spe</span> <span class="o">=</span> <span class="nx">pass</span><span class="p">.</span><span class="nx">search</span><span class="p">(</span><span class="sr">/</span><span class="se">[</span><span class="sr">`~!@@#$%^&amp;*|₩₩₩'₩";:₩</span><span class="se">/</span><span class="sr">?</span><span class="se">]</span><span class="sr">/gi</span><span class="p">);</span>

		<span class="k">if</span> <span class="p">(</span><span class="mi">8</span> <span class="o">&gt;</span> <span class="nx">pass</span><span class="p">.</span><span class="nx">length</span> <span class="o">||</span> <span class="mi">20</span> <span class="o">&lt;</span> <span class="nx">pass</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="nx">$pass</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
			<span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">#passMsg</span><span class="dl">'</span><span class="p">).</span><span class="nx">text</span><span class="p">(</span><span class="dl">'</span><span class="s1">8자 ~ 20자 이내로 입력해 주세요.</span><span class="dl">'</span><span class="p">);</span>
			<span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">#passMsg</span><span class="dl">'</span><span class="p">).</span><span class="nx">css</span><span class="p">(</span><span class="dl">'</span><span class="s1">color</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">red</span><span class="dl">'</span><span class="p">);</span>
		<span class="p">}</span>
		<span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="nx">pass</span><span class="p">.</span><span class="nx">search</span><span class="p">(</span><span class="sr">/</span><span class="se">\s</span><span class="sr">/</span><span class="p">)</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="nx">$pass</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
			<span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">#passMsg</span><span class="dl">'</span><span class="p">).</span><span class="nx">text</span><span class="p">(</span><span class="dl">'</span><span class="s1">공백 없이 입력해 주세요.</span><span class="dl">'</span><span class="p">);</span>
			<span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">#passMsg</span><span class="dl">'</span><span class="p">).</span><span class="nx">css</span><span class="p">(</span><span class="dl">'</span><span class="s1">color</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">red</span><span class="dl">'</span><span class="p">);</span>
		<span class="p">}</span>
		<span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="nx">num</span> <span class="o">&lt;</span> <span class="mi">0</span> <span class="o">||</span> <span class="nx">eng</span> <span class="o">&lt;</span> <span class="mi">0</span> <span class="o">||</span> <span class="nx">spe</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="nx">$pass</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
			<span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">#passMsg</span><span class="dl">'</span><span class="p">).</span><span class="nx">text</span><span class="p">(</span><span class="dl">'</span><span class="s1">영문, 숫자, 특수문자를 포함해서 입력해 주세요.</span><span class="dl">'</span><span class="p">);</span>
			<span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">#passMsg</span><span class="dl">'</span><span class="p">).</span><span class="nx">css</span><span class="p">(</span><span class="dl">'</span><span class="s1">color</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">red</span><span class="dl">'</span><span class="p">);</span>
		<span class="p">}</span>
		<span class="k">else</span> 
		<span class="p">{</span>
			<span class="nx">$pass</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
			<span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">#passMsg</span><span class="dl">'</span><span class="p">).</span><span class="nx">text</span><span class="p">(</span><span class="dl">'</span><span class="s1">사용 가능한 비밀번호 입니다!</span><span class="dl">'</span><span class="p">);</span>
			<span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">#passMsg</span><span class="dl">'</span><span class="p">).</span><span class="nx">css</span><span class="p">(</span><span class="dl">'</span><span class="s1">color</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">green</span><span class="dl">'</span><span class="p">);</span>
		<span class="p">}</span>
	<span class="p">});</span>
<span class="p">}</span>

<span class="c1">// 재입력한 비밀번호가 맞는지 확인하는 함수</span>
<span class="kd">function</span> <span class="nx">passConfirm</span><span class="p">()</span>
<span class="p">{</span>
	<span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">#confirm</span><span class="dl">'</span><span class="p">).</span><span class="nx">blur</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> 
	<span class="p">{</span>
		<span class="kd">var</span> <span class="nx">pass</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">#confirm</span><span class="dl">'</span><span class="p">).</span><span class="nx">val</span><span class="p">();</span>

		<span class="k">if</span> <span class="p">(</span><span class="mi">0</span> <span class="o">&gt;=</span> <span class="nx">pass</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="nx">$passConfirm</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
			<span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">#confirmMsg</span><span class="dl">'</span><span class="p">).</span><span class="nx">text</span><span class="p">(</span><span class="dl">'</span><span class="s1">비밀번호를 한 번 더 입력해 주세요.</span><span class="dl">'</span><span class="p">);</span>
			<span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">#confirmMsg</span><span class="dl">'</span><span class="p">).</span><span class="nx">css</span><span class="p">(</span><span class="dl">'</span><span class="s1">color</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">red</span><span class="dl">'</span><span class="p">);</span>
		<span class="p">}</span>
		<span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">#pass</span><span class="dl">'</span><span class="p">).</span><span class="nx">val</span><span class="p">()</span> <span class="o">!==</span> <span class="nx">pass</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="nx">$passConfirm</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
			<span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">#confirmMsg</span><span class="dl">'</span><span class="p">).</span><span class="nx">text</span><span class="p">(</span><span class="dl">'</span><span class="s1">비밀번호가 일치하지 않습니다.</span><span class="dl">'</span><span class="p">);</span>
			<span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">#confirmMsg</span><span class="dl">'</span><span class="p">).</span><span class="nx">css</span><span class="p">(</span><span class="dl">'</span><span class="s1">color</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">red</span><span class="dl">'</span><span class="p">);</span>
		<span class="p">}</span>
		<span class="k">else</span>
		<span class="p">{</span>
			<span class="nx">$passConfirm</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
			<span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">#confirmMsg</span><span class="dl">'</span><span class="p">).</span><span class="nx">text</span><span class="p">(</span><span class="dl">'</span><span class="s1">비밀번호가 일치합니다!</span><span class="dl">'</span><span class="p">);</span>
			<span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">#confirmMsg</span><span class="dl">'</span><span class="p">).</span><span class="nx">css</span><span class="p">(</span><span class="dl">'</span><span class="s1">color</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">green</span><span class="dl">'</span><span class="p">);</span>
		<span class="p">}</span>
	<span class="p">});</span>
<span class="p">}</span>

<span class="c1">// 이름 입력 여부 확인하는 함수</span>
<span class="kd">function</span> <span class="nx">nameCheck</span><span class="p">()</span>
<span class="p">{</span>
	<span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">.name</span><span class="dl">'</span><span class="p">).</span><span class="nx">blur</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span>
	<span class="p">{</span>
		<span class="kd">var</span> <span class="nx">name</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">.name</span><span class="dl">'</span><span class="p">).</span><span class="nx">val</span><span class="p">();</span>

		<span class="k">if</span> <span class="p">(</span><span class="dl">""</span> <span class="o">===</span> <span class="nx">name</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="nx">$name</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
			<span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">#nameMsg</span><span class="dl">'</span><span class="p">).</span><span class="nx">text</span><span class="p">(</span><span class="dl">'</span><span class="s1">이름을 입력해 주세요.</span><span class="dl">'</span><span class="p">);</span>
			<span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">#nameMsg</span><span class="dl">'</span><span class="p">).</span><span class="nx">css</span><span class="p">(</span><span class="dl">'</span><span class="s1">color</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">red</span><span class="dl">'</span><span class="p">);</span>
		<span class="p">}</span>
		<span class="k">else</span> 
		<span class="p">{</span>
			<span class="nx">$name</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
			<span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">#nameMsg</span><span class="dl">'</span><span class="p">).</span><span class="nx">text</span><span class="p">(</span><span class="dl">''</span><span class="p">);</span>
		<span class="p">}</span>
	<span class="p">});</span>
<span class="p">}</span>

<span class="c1">// 생년월일 유효성 검사하는 함수</span>
<span class="kd">function</span> <span class="nx">birthCheck</span><span class="p">()</span>
<span class="p">{</span>
	<span class="c1">// input 태그에서 date type으로 입력받아서 태그단에서 미리 유효한 날짜만 선택할 수 있게 하지만 첫 프로젝트라 연습 삼아 구현했다.</span>
	<span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">.birth</span><span class="dl">'</span><span class="p">).</span><span class="nx">blur</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span>
	<span class="p">{</span>
		<span class="kd">var</span> <span class="nx">birth</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">.birth</span><span class="dl">'</span><span class="p">).</span><span class="nx">val</span><span class="p">();</span>
		
		<span class="kd">var</span> <span class="nx">birthArr</span> <span class="o">=</span> <span class="nx">birth</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="dl">'</span><span class="s1">-</span><span class="dl">'</span><span class="p">);</span>
		<span class="kd">var</span> <span class="nx">year</span> <span class="o">=</span> <span class="nx">birthArr</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
		<span class="kd">var</span> <span class="nx">month</span> <span class="o">=</span> <span class="nx">birthArr</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span>
		<span class="kd">var</span> <span class="nx">day</span> <span class="o">=</span> <span class="nx">birthArr</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span>
		<span class="kd">var</span> <span class="nx">today</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">();</span>
		<span class="kd">var</span> <span class="nx">curYear</span> <span class="o">=</span> <span class="nx">today</span><span class="p">.</span><span class="nx">getFullYear</span><span class="p">();</span>

		<span class="k">if</span> <span class="p">(</span><span class="mi">10</span> <span class="o">&gt;=</span> <span class="nx">birth</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="k">if</span> <span class="p">(</span><span class="mi">1900</span> <span class="o">&gt;</span> <span class="nx">year</span> <span class="o">||</span> <span class="nx">curYear</span> <span class="o">&lt;</span> <span class="nx">year</span><span class="p">)</span> 
				<span class="nx">$birth</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
			<span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="mi">1</span> <span class="o">&gt;</span> <span class="nx">month</span> <span class="o">||</span> <span class="mi">12</span> <span class="o">&lt;</span> <span class="nx">month</span><span class="p">)</span> 
				<span class="nx">$birth</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
			<span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="mi">1</span> <span class="o">&gt;</span> <span class="nx">day</span> <span class="o">||</span> <span class="mi">31</span> <span class="o">&lt;</span> <span class="nx">day</span><span class="p">)</span> 
				<span class="nx">$birth</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
			<span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="mi">31</span> <span class="o">==</span> <span class="nx">day</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="mi">4</span> <span class="o">==</span> <span class="nx">month</span> <span class="o">||</span> <span class="mi">6</span> <span class="o">==</span> <span class="nx">month</span> <span class="o">||</span> <span class="mi">9</span> <span class="o">==</span> <span class="nx">month</span> <span class="o">||</span> <span class="mi">11</span> <span class="o">==</span> <span class="nx">month</span><span class="p">))</span>
				<span class="nx">$birth</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
			<span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="mi">2</span> <span class="o">==</span> <span class="nx">month</span><span class="p">)</span>
			<span class="p">{</span>
				<span class="c1">// 2월엔 윤년 여부 검사</span>
				<span class="kd">var</span> <span class="nx">leapYear</span> <span class="o">=</span> <span class="p">(</span><span class="mi">0</span> <span class="o">==</span> <span class="nx">year</span> <span class="o">%</span> <span class="mi">4</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="mi">0</span> <span class="o">!=</span> <span class="nx">year</span> <span class="o">%</span> <span class="mi">100</span> <span class="o">||</span> <span class="mi">0</span> <span class="o">==</span> <span class="nx">year</span> <span class="o">%</span> <span class="mi">400</span><span class="p">));</span>
				<span class="k">if</span> <span class="p">(</span><span class="mi">29</span> <span class="o">&lt;</span> <span class="nx">day</span> <span class="o">||</span> <span class="p">(</span><span class="mi">29</span> <span class="o">==</span> <span class="nx">day</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="nx">leapYear</span><span class="p">))</span>
					<span class="nx">$birth</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
				<span class="k">else</span> 
					<span class="nx">$birth</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
			<span class="p">}</span>
			<span class="k">else</span> 
				<span class="nx">$birth</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
		<span class="p">}</span>
		<span class="k">else</span> 
			<span class="nx">$birth</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
	<span class="p">});</span>
<span class="p">}</span>

<span class="c1">// 성별 선택 여부 확인하는 함수</span>
<span class="kd">function</span> <span class="nx">genderCheck</span><span class="p">()</span>
<span class="p">{</span>
	<span class="k">if</span> <span class="p">(</span><span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">input[name=gender]</span><span class="dl">'</span><span class="p">).</span><span class="nx">is</span><span class="p">(</span><span class="dl">"</span><span class="s2">:checked</span><span class="dl">"</span><span class="p">))</span>
	<span class="p">{</span>
		<span class="nx">$gender</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
		<span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">#genderMsg</span><span class="dl">'</span><span class="p">).</span><span class="nx">text</span><span class="p">(</span><span class="dl">''</span><span class="p">);</span>
	<span class="p">}</span>	
	<span class="k">else</span>
	<span class="p">{</span>
		<span class="nx">$gender</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
		<span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">#genderMsg</span><span class="dl">'</span><span class="p">).</span><span class="nx">text</span><span class="p">(</span><span class="dl">'</span><span class="s1">성별을 선택하세요!</span><span class="dl">'</span><span class="p">);</span>
		<span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">#genderMsg</span><span class="dl">'</span><span class="p">).</span><span class="nx">css</span><span class="p">(</span><span class="dl">'</span><span class="s1">color</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">red</span><span class="dl">'</span><span class="p">);</span>	
	<span class="p">}</span>
<span class="p">}</span>

<span class="c1">// 도시 선택 여부 확인하는 함수</span>
<span class="kd">function</span> <span class="nx">cityCheck</span><span class="p">()</span>
<span class="p">{</span>
	<span class="k">if</span> <span class="p">(</span><span class="dl">'</span><span class="s1">0</span><span class="dl">'</span> <span class="o">==</span> <span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">[name=city] &gt; option:selected</span><span class="dl">'</span><span class="p">).</span><span class="nx">val</span><span class="p">())</span>
	<span class="p">{</span>
		<span class="nx">$city</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
		<span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">#cityMsg</span><span class="dl">'</span><span class="p">).</span><span class="nx">text</span><span class="p">(</span><span class="dl">"</span><span class="s2">거주 중인 도시를 선택하세요!</span><span class="dl">"</span><span class="p">);</span>
		<span class="nx">$</span><span class="p">(</span><span class="dl">"</span><span class="s2">#cityMsg</span><span class="dl">"</span><span class="p">).</span><span class="nx">css</span><span class="p">(</span><span class="dl">"</span><span class="s2">color</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">red</span><span class="dl">"</span><span class="p">);</span>
	<span class="p">}</span>	
	<span class="k">else</span> 
	<span class="p">{</span>
		<span class="nx">$city</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
		<span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">#cityMsg</span><span class="dl">'</span><span class="p">).</span><span class="nx">text</span><span class="p">(</span><span class="dl">''</span><span class="p">);</span>
	<span class="p">}</span>
<span class="p">}</span>

<span class="c1">// 휴대폰 번호 유효성 검사하는 함수</span>
<span class="kd">function</span> <span class="nx">phoneCheck</span><span class="p">()</span>
<span class="p">{</span>
	<span class="kd">var</span> <span class="nx">first</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="dl">"</span><span class="s2">#phone1</span><span class="dl">"</span><span class="p">).</span><span class="nx">val</span><span class="p">();</span>
	<span class="kd">var</span> <span class="nx">second</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="dl">"</span><span class="s2">#phone2</span><span class="dl">"</span><span class="p">).</span><span class="nx">val</span><span class="p">();</span>
	<span class="kd">var</span> <span class="nx">third</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="dl">"</span><span class="s2">#phone3</span><span class="dl">"</span><span class="p">).</span><span class="nx">val</span><span class="p">();</span>
	
	<span class="k">if</span> <span class="p">(</span><span class="dl">"</span><span class="s2">010</span><span class="dl">"</span> <span class="o">==</span> <span class="nx">first</span> <span class="o">&amp;&amp;</span> <span class="mi">4</span> <span class="o">==</span> <span class="nx">second</span><span class="p">.</span><span class="nx">length</span> <span class="o">&amp;&amp;</span> <span class="mi">4</span> <span class="o">==</span> <span class="nx">third</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span>
	<span class="p">{</span>
		<span class="nx">$phone</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
		<span class="nx">$</span><span class="p">(</span><span class="dl">"</span><span class="s2">#phoneMsg</span><span class="dl">"</span><span class="p">).</span><span class="nx">text</span><span class="p">(</span><span class="dl">""</span><span class="p">);</span>
	<span class="p">}</span>	
	<span class="k">else</span> 
	<span class="p">{</span>
		<span class="nx">$phone</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
		<span class="nx">$</span><span class="p">(</span><span class="dl">"</span><span class="s2">#phoneMsg</span><span class="dl">"</span><span class="p">).</span><span class="nx">text</span><span class="p">(</span><span class="dl">"</span><span class="s2">휴대폰 번호 형식이 올바르지 않습니다!</span><span class="dl">"</span><span class="p">);</span>
		<span class="nx">$</span><span class="p">(</span><span class="dl">"</span><span class="s2">#phoneMsg</span><span class="dl">"</span><span class="p">).</span><span class="nx">css</span><span class="p">(</span><span class="dl">"</span><span class="s2">color</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">red</span><span class="dl">"</span><span class="p">);</span>
	<span class="p">}</span>
<span class="p">}</span>

<span class="c1">// 이메일 유효성 검사하는 함수</span>
<span class="kd">function</span> <span class="nx">emailCheck</span><span class="p">()</span>
<span class="p">{</span>
	<span class="nx">$</span><span class="p">(</span><span class="dl">"</span><span class="s2">#email</span><span class="dl">"</span><span class="p">).</span><span class="nx">blur</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span>
	<span class="p">{</span>
		<span class="kd">var</span> <span class="nx">email</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="dl">"</span><span class="s2">#email</span><span class="dl">"</span><span class="p">).</span><span class="nx">val</span><span class="p">();</span>
		<span class="kd">var</span> <span class="nx">regEmail</span> <span class="o">=</span> <span class="sr">/^</span><span class="se">([</span><span class="sr">0-9a-zA-Z_</span><span class="se">\.</span><span class="sr">-</span><span class="se">]</span><span class="sr">+</span><span class="se">)</span><span class="sr">@</span><span class="se">([</span><span class="sr">0-9a-zA-Z_-</span><span class="se">]</span><span class="sr">+</span><span class="se">)(\.[</span><span class="sr">0-9a-zA-Z_-</span><span class="se">]</span><span class="sr">+</span><span class="se">){1,2}</span><span class="sr">$/</span><span class="p">;</span>
		<span class="k">if</span> <span class="p">(</span><span class="nx">regEmail</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">email</span><span class="p">))</span>
		<span class="p">{</span>
			<span class="nx">$email</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
			<span class="nx">$</span><span class="p">(</span><span class="dl">"</span><span class="s2">#emailMsg</span><span class="dl">"</span><span class="p">).</span><span class="nx">text</span><span class="p">(</span><span class="dl">""</span><span class="p">);</span>
		<span class="p">}</span>
		<span class="k">else</span> 
		<span class="p">{</span>
			<span class="nx">$email</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
			<span class="nx">$</span><span class="p">(</span><span class="dl">"</span><span class="s2">#emailMsg</span><span class="dl">"</span><span class="p">).</span><span class="nx">text</span><span class="p">(</span><span class="dl">"</span><span class="s2">이메일 형식이 올바르지 않습니다!</span><span class="dl">"</span><span class="p">);</span>
			<span class="nx">$</span><span class="p">(</span><span class="dl">"</span><span class="s2">#emailMsg</span><span class="dl">"</span><span class="p">).</span><span class="nx">css</span><span class="p">(</span><span class="dl">"</span><span class="s2">color</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">red</span><span class="dl">"</span><span class="p">);</span>
		<span class="p">}</span>
	<span class="p">});</span>
<span class="p">}</span>

<span class="c1">// 마지막 제출 전에 유효성 검사하는 함수</span>
<span class="kd">function</span> <span class="nx">finalCheck</span><span class="p">()</span> 
<span class="p">{</span>
	<span class="kd">var</span> <span class="nx">join</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">join</span><span class="p">;</span>
	<span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">$id</span><span class="p">)</span>
	<span class="p">{</span>
		<span class="nx">join</span><span class="p">.</span><span class="nx">id</span><span class="p">.</span><span class="nx">focus</span><span class="p">();</span>
		<span class="k">return</span> <span class="kc">false</span><span class="p">;</span>
	<span class="p">}</span>
		
	<span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">$pass</span><span class="p">)</span>
	<span class="p">{</span>
		<span class="nx">join</span><span class="p">.</span><span class="nx">pass</span><span class="p">.</span><span class="nx">focus</span><span class="p">();</span>
		<span class="k">return</span> <span class="kc">false</span><span class="p">;</span>
	<span class="p">}</span>

	<span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">$passConfirm</span><span class="p">)</span>
	<span class="p">{</span>
		<span class="nx">join</span><span class="p">.</span><span class="nx">confirm</span><span class="p">.</span><span class="nx">focus</span><span class="p">();</span>
		<span class="k">return</span> <span class="kc">false</span><span class="p">;</span>
	<span class="p">}</span>

	<span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">$name</span><span class="p">)</span>
	<span class="p">{</span>
		<span class="nx">join</span><span class="p">.</span><span class="nx">name</span><span class="p">.</span><span class="nx">focus</span><span class="p">();</span>
		<span class="k">return</span> <span class="kc">false</span><span class="p">;</span>
	<span class="p">}</span>

	<span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">$birth</span><span class="p">)</span>
	<span class="p">{</span>
		<span class="nx">join</span><span class="p">.</span><span class="nx">birth</span><span class="p">.</span><span class="nx">focus</span><span class="p">();</span>
		<span class="k">return</span> <span class="kc">false</span><span class="p">;</span>
	<span class="p">}</span>
	
	<span class="nx">genderCheck</span><span class="p">();</span>
	<span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">$gender</span><span class="p">)</span>
		<span class="k">return</span> <span class="kc">false</span><span class="p">;</span>

	<span class="nx">cityCheck</span><span class="p">();</span>
	<span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">$city</span><span class="p">)</span>
		<span class="k">return</span> <span class="kc">false</span><span class="p">;</span>
	
	<span class="nx">phoneCheck</span><span class="p">();</span>
	<span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">$phone</span><span class="p">)</span>
	<span class="p">{</span>
		<span class="nx">join</span><span class="p">.</span><span class="nx">phone1</span><span class="p">.</span><span class="nx">focus</span><span class="p">();</span>
		<span class="k">return</span> <span class="kc">false</span><span class="p">;</span>
	<span class="p">}</span>
	
	<span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">$email</span><span class="p">)</span>
	<span class="p">{</span>
		<span class="nx">join</span><span class="p">.</span><span class="nx">email</span><span class="p">.</span><span class="nx">focus</span><span class="p">();</span>
		<span class="k">return</span> <span class="kc">false</span><span class="p">;</span>
	<span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<ul>
  <li>입력 데이터 중 생년월일은 <code class="language-plaintext highlighter-rouge">input</code> 태그에서 <code class="language-plaintext highlighter-rouge">type="date"</code>로 지정해서 입력 단계에서 유효성 검사가 이루어지긴 하는데 웹 개발 프로젝트는 처음 진행하는 것이라 연습 삼아 <code class="language-plaintext highlighter-rouge">String</code>형으로만 입력을 받았을 때에 유효성 검사를 확인하는 코드도 작성해 보았다. 사실상 필요 없는 부분이라 최종 빌드 때엔 삭제할 예정이다.<br /><br /><br /></li>
</ul>

<h1 id="마감까지">마감까지</h1>
<ul>
  <li><code class="language-plaintext highlighter-rouge">D-25</code></li>
</ul>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="Project Log" /><category term="Project" /><category term="Cafe" /><category term="Log" /><summary type="html"><![CDATA[개발환경 MacBook Air (M1, 2020) OpenJDK 8 Eclipse 2021-12 tomcat 8.5]]></summary></entry><entry><title type="html">컴퓨터구조) Function과 매크로 함수의 차이점</title><link href="http://localhost:4000/computer%20science/function/" rel="alternate" type="text/html" title="컴퓨터구조) Function과 매크로 함수의 차이점" /><published>2022-03-09T00:00:00+09:00</published><updated>2022-03-09T00:00:00+09:00</updated><id>http://localhost:4000/computer%20science/function</id><content type="html" xml:base="http://localhost:4000/computer%20science/function/"><![CDATA[<h1 id="function">Function</h1>
<ul>
  <li><code class="language-plaintext highlighter-rouge">function call</code>이 이뤄짐에 따라 중간에 생기는 연산값을 저장하고 불러오는 과정이 필요하며 <code class="language-plaintext highlighter-rouge">return</code>값에 따라 <code class="language-plaintext highlighter-rouge">Jump &amp; Link</code>가 이뤄져야 하고 그에 따라 스택 프레임 포인터도 변경해줘야 하는 등 할 게 많다.</li>
  <li><code class="language-plaintext highlighter-rouge">function call</code>과 <code class="language-plaintext highlighter-rouge">return</code> 없이 순차적으로 실행하는 코드에 비해 수행해야 할 명령어의 수가 많아지기 때문에 오버헤드가 커지고 성능이 떨어진다.</li>
</ul>

<h1 id="매크로-함수">매크로 함수</h1>
<ul>
  <li>함수를 매크로로 작성하면 실행 될 때 <code class="language-plaintext highlighter-rouge">Text</code> 영역에 위치하게 된다. 즉 형태는 <code class="language-plaintext highlighter-rouge">function call</code>을 하는 것 같지만 프로그램 코드로 인식되어 <code class="language-plaintext highlighter-rouge">Text</code> 영역에 있기 때문에 <code class="language-plaintext highlighter-rouge">Jump &amp; Link</code>가 발생하지 않아 오버헤드가 적고 성능이 올라간다.</li>
  <li>하지만 그만큼 <code class="language-plaintext highlighter-rouge">Text</code>가 길어져서 그만큼 차지하는 공간이 늘어나게 된다.<br /></li>
</ul>

<p>👀 두 방식에 각각 장단점이 있기 때문에 상황에 맞게 사용하면 된다.</p>

<h2 id="오버헤드">오버헤드</h2>
<ul>
  <li><code class="language-plaintext highlighter-rouge">부담</code>이라 할 수 있다.</li>
  <li>추가적으로 해야 하는 일이기 때문에 컴퓨터가 어떤 작업을 수행할 때 오버헤드가 크다는 것은 그 작업을 수행하기 위해 필요한 명령어의 수가 많아지기 때문이라고 할 수 있다.<br /><br /><br /></li>
</ul>

<h1 id="출처">출처</h1>
<ul>
  <li><a href="http://www.kocw.net/home/cview.do?cid=26adea597863b523">컴퓨터구조 - 고려대학교 KOCW 공개강의</a></li>
</ul>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="Computer Science" /><category term="CS" /><category term="function" /><summary type="html"><![CDATA[Function function call이 이뤄짐에 따라 중간에 생기는 연산값을 저장하고 불러오는 과정이 필요하며 return값에 따라 Jump &amp; Link가 이뤄져야 하고 그에 따라 스택 프레임 포인터도 변경해줘야 하는 등 할 게 많다. function call과 return 없이 순차적으로 실행하는 코드에 비해 수행해야 할 명령어의 수가 많아지기 때문에 오버헤드가 커지고 성능이 떨어진다.]]></summary></entry><entry><title type="html">OS) Deadlock</title><link href="http://localhost:4000/operating%20system/OS-07-Deadlock/" rel="alternate" type="text/html" title="OS) Deadlock" /><published>2022-03-08T00:00:00+09:00</published><updated>2022-03-08T00:00:00+09:00</updated><id>http://localhost:4000/operating%20system/OS-07-Deadlock</id><content type="html" xml:base="http://localhost:4000/operating%20system/OS-07-Deadlock/"><![CDATA[<h1 id="-deadlock교착상태란">👀 Deadlock(교착상태)란?</h1>
<ul>
  <li>일련의 프로세스들이 서로가 가진 자원을 기다리며 <code class="language-plaintext highlighter-rouge">block</code>된 상태</li>
</ul>

<h2 id="resource자원">Resource(자원)</h2>
<ul>
  <li>하드웨어, 소프트웨어 등을 포함하는 개념</li>
  <li>예) <code class="language-plaintext highlighter-rouge">I/O device</code>, <code class="language-plaintext highlighter-rouge">CPU cycle</code>, <code class="language-plaintext highlighter-rouge">memory space</code>, <code class="language-plaintext highlighter-rouge">semaphore</code> 등</li>
  <li>프로세스가 자원을 사용하는 절차
    <ul>
      <li><code class="language-plaintext highlighter-rouge">Request</code> -&gt; <code class="language-plaintext highlighter-rouge">Allocate</code> -&gt; <code class="language-plaintext highlighter-rouge">Use</code> -&gt; <code class="language-plaintext highlighter-rouge">Release</code></li>
    </ul>
  </li>
</ul>

<h2 id="데드락이-발생하는-예">데드락이 발생하는 예</h2>
<ul>
  <li>시스템에 2개의 <code class="language-plaintext highlighter-rouge">tape drive</code>가 있고 프로세스 <code class="language-plaintext highlighter-rouge">P1</code>, <code class="language-plaintext highlighter-rouge">P2</code> 각각이 하나의 <code class="language-plaintext highlighter-rouge">tape drive</code>를 보유한 채 다른 하나를 기다리고 있는 경우<br /><br /></li>
</ul>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">P0</span>          <span class="n">P1</span>
<span class="nf">P</span><span class="p">(</span><span class="n">A</span><span class="p">);</span>       <span class="n">P</span><span class="p">(</span><span class="n">B</span><span class="p">);</span>
<span class="n">P</span><span class="p">(</span><span class="n">B</span><span class="p">);</span>       <span class="n">P</span><span class="p">(</span><span class="n">A</span><span class="p">);</span>
</code></pre></div></div>

<ul>
  <li>두 세마포어가 필요한 자원을 서로 자원을 하나씩 가진 상태에서 상대가 내놓기를 기다리는 경우</li>
</ul>

<h2 id="데드락-발생의-4가지-조건">데드락 발생의 4가지 조건</h2>
<h3 id="mutual-exclusion-상호-배제">Mutual exclusion (상호 배제)</h3>
<ul>
  <li>매 순간 하나의 프로세스만이 자원을 사용할 수 있음</li>
</ul>

<h3 id="no-preemption-비선점">No preemption (비선점)</h3>
<ul>
  <li>프로세스는 자원을 스스로 내어놓을 뿐 강제로 빼앗기지 않음</li>
</ul>

<h3 id="hold-and-wait-보유-대기">Hold and wait (보유 대기)</h3>
<ul>
  <li>자원을 가진 프로세스가 다른 자원을 기다릴 때 보유 자원을 놓지 않고 계속 가지고 있음</li>
</ul>

<h3 id="circular-wait-순환-대기">Circular wait (순환 대기)</h3>
<ul>
  <li>자원을 기다리는 프로세스간에 사이클이 형성되어야 함</li>
  <li>프로세스 <code class="language-plaintext highlighter-rouge">1, 2, 3, 4</code>가 있을 때
    <ul>
      <li><code class="language-plaintext highlighter-rouge">1</code>은 <code class="language-plaintext highlighter-rouge">2</code>가 가진 자원을 기다림</li>
      <li><code class="language-plaintext highlighter-rouge">2</code>는 <code class="language-plaintext highlighter-rouge">3</code>이 가진 자원을 기다림</li>
      <li><code class="language-plaintext highlighter-rouge">3</code>은 <code class="language-plaintext highlighter-rouge">4</code>가 가진 자원을 기다림</li>
      <li><code class="language-plaintext highlighter-rouge">4</code>는 <code class="language-plaintext highlighter-rouge">1</code>이 가진 자원을 기다림<br /><br /></li>
    </ul>
  </li>
</ul>

<h2 id="데드락-처리-방법">데드락 처리 방법</h2>
<h3 id="deadlock-prevention">Deadlock Prevention</h3>
<ul>
  <li>자원 할당 시 <code class="language-plaintext highlighter-rouge">데드락</code>의 4가지 필요 조건 중 어느 하나가 만족되지 않도록 하는 것</li>
</ul>

<h3 id="deadlock-avoidance">Deadlock Avoidance</h3>
<ul>
  <li>자원 요청에 대한 부가적인 정보를 이용해서 <code class="language-plaintext highlighter-rouge">데드락</code>의 가능성이 없는 경우에만 자원 할당</li>
  <li>시스템 <code class="language-plaintext highlighter-rouge">state</code>가 원래 <code class="language-plaintext highlighter-rouge">state</code>로 돌아올 수 있는 경우에만 자원 할당</li>
</ul>

<h3 id="deadlock-detection-and-recovery">Deadlock Detection and recovery</h3>
<ul>
  <li><code class="language-plaintext highlighter-rouge">데드락</code> 발생은 허용하되 그에 대한 <code class="language-plaintext highlighter-rouge">detection</code> 루틴을 두어 <code class="language-plaintext highlighter-rouge">데드락</code> 발견시 <code class="language-plaintext highlighter-rouge">recover</code></li>
</ul>

<h3 id="deadlock-ingorance">Deadlock Ingorance</h3>
<ul>
  <li><code class="language-plaintext highlighter-rouge">데드락</code>을 시스템이 책임지지 않음</li>
  <li><code class="language-plaintext highlighter-rouge">UNIX</code>를 포함한 대부분의 <code class="language-plaintext highlighter-rouge">OS</code>가 채택</li>
  <li><code class="language-plaintext highlighter-rouge">데드락</code> 자체가 자주 발생하는 일이 아니기 때문에 <code class="language-plaintext highlighter-rouge">데드락</code>에 대비한다고 시스템의 자원 분배를 조절하는 것은 비효율적이기 때문에 사용자가 알아서 처리하도록 한다.<br /><br /></li>
</ul>

<h2 id="데드락-방지">데드락 방지</h2>
<h3 id="mutual-exclusion">Mutual exclusion</h3>
<ul>
  <li>공유해서는 안 되는 자원의 경우 반드시 성립해야 함</li>
  <li>즉 이 조건이 반드시 성립한다면 데드락이 발생할 수 없다.</li>
</ul>

<h3 id="hold-and-wait">Hold and Wait</h3>
<ul>
  <li>프로세스가 자원을 요청할 때 다른 어떤 자원도 가지고 있지 않아야 한다.</li>
  <li>방법 1 : 프로세스 시작 시 모든 필요한 자원을 할당받게 하는 방법</li>
  <li>방법 2 : 자원이 필요할 경우 보유 자원을 모두 놓고 다시 요청</li>
</ul>

<h3 id="no-preemption">No Preemption</h3>
<ul>
  <li>프로세스가 자원을 기다려야 하는 경우 이미 보유한 자원이 선점됨</li>
  <li>모든 필요한 자원을 얻을 수 있을 때 그 프로세스는 다시 시작됨</li>
  <li>즉 자원을 선점할 수 있게 하는 것</li>
  <li><code class="language-plaintext highlighter-rouge">state</code>를 쉽게 <code class="language-plaintext highlighter-rouge">save</code>하고 <code class="language-plaintext highlighter-rouge">restore</code>할 수 있는 자원에서 주로 사용 (예: <code class="language-plaintext highlighter-rouge">CPU</code>, <code class="language-plaintext highlighter-rouge">memory</code>)</li>
</ul>

<h3 id="circular-wait">Circular Wait</h3>
<ul>
  <li>모든 자원 유형에 할당 순서를 정하여 정해진 순서대로만 자원 할당</li>
  <li>예를 들어 순서가 3인 자원을 보유 중인 프로세스가 순서가 1인 자원을 할당받기 위해서는 우선 순서 3을 <code class="language-plaintext highlighter-rouge">release</code>해야 한다.</li>
  <li>
    <p>자원 요청 사이클이 생성되지 않게 하는 것<br /></p>
  </li>
  <li>하지만 위 기법들을 적용하면 <code class="language-plaintext highlighter-rouge">Utilization(이용률)</code> 저하, <code class="language-plaintext highlighter-rouge">Throughput(성능)</code> 감소, <code class="language-plaintext highlighter-rouge">Starvation</code> 문제가 생겨서 굉장히 비효율적이다.<br /><br /></li>
</ul>

<h2 id="deadlock-avoidance-1">Deadlock Avoidance</h2>
<ul>
  <li>자원 요청에 대한 부가정보를 이용해서 자원 할당이 데드락으로부터 안전한지 동적으로 조사해서 안전한 경우에만 할당</li>
  <li>가장 단순하고 일반적인 모델은 프로세스들이 필요로 하는 각 자원별 최대 사용량을 미리 선언하도록 하는 방법</li>
</ul>

<h3 id="resource-allocation-graph-algorithm">Resource Allocation Graph algorithm</h3>
<ul>
  <li>자원당 하나의 인스턴스만 있을 때 사용하는 방법</li>
  <li>자원들과 프로세스들 간을 실선과 점선으로 잇는 그래프를 그려 할당과 요청된 자원은 실선으로 표시하고 어떤 프로세스가 미래에 한 번은 사용할 수 있는 자원은 점선으로 표시하는 것이다.</li>
  <li>새로운 자원 요청이 들어오면 실선을 점선으로 바꿨을 때 사이클이 생기지 않을 때에만 요청 자원을 할당한다.</li>
  <li>사이클 생성 여부 조사시 프로세스의 수가 <code class="language-plaintext highlighter-rouge">n</code>일 때 <code class="language-plaintext highlighter-rouge">O(n^2)</code> 시간이 걸린다.</li>
</ul>

<h3 id="bankers-algorithm">Banker’s Algorithm</h3>
<ul>
  <li>가정
    <ul>
      <li>모든 프로세스는 자원의 최대 사용량을 미리 명시</li>
      <li>프로세스가 요청 자원을 모두 할당받은 경우 유한 시간 안에 이들 자원을 다시 반납한다.</li>
    </ul>
  </li>
  <li>방법
    <ul>
      <li>기본 개념 : 자원 요청 시 <code class="language-plaintext highlighter-rouge">safe</code> 상태를 유지할 경우에만 할당</li>
      <li>총 요청 자원의 수가 가용 자원의 수보다 적은 프로세스를 선택 (그런 프로세스가 없으면 <code class="language-plaintext highlighter-rouge">unsafe</code> 상태)</li>
      <li>위의 경우에 부합하는 프로세스가 있으면 그 프로세스에게 자원 할당</li>
      <li>할당받은 프로세스가 종료되면 모든 자원 반납</li>
      <li>모든 프로세스가 종료될 때까지 이러한 과정 반복</li>
    </ul>
  </li>
</ul>

<h2 id="deadlock-detection-and-recovery-1">Deadlock Detection and Recovery</h2>
<h3 id="detection">Detection</h3>
<ul>
  <li><code class="language-plaintext highlighter-rouge">Banker's Algorithm</code>과 유사한 방법으로 사이클의 존재 여부를 주기적으로 검사하여 자원을 할당하는 방법이 있다.</li>
</ul>

<h3 id="recovery">Recovery</h3>
<h4 id="process-termination">Process termination</h4>
<ul>
  <li>데드락 된 모든 프로세스 종료</li>
  <li>데드락이 해결될 때 까지 데드락에 갇혀 있는 프로세스를 하나씩 종료</li>
</ul>

<h4 id="resource-preemption">Resource preemption</h4>
<ul>
  <li>비용을 최소화 할 <code class="language-plaintext highlighter-rouge">victim</code> 선정</li>
  <li><code class="language-plaintext highlighter-rouge">safe state</code>로 <code class="language-plaintext highlighter-rouge">rollback</code>하여 프로세스 재시작</li>
  <li><code class="language-plaintext highlighter-rouge">Starvation</code> 문제
    <ul>
      <li>동일한 프로세스가 계속해서 <code class="language-plaintext highlighter-rouge">victim</code>으로 선정되는 경우</li>
      <li><code class="language-plaintext highlighter-rouge">cost factor</code>에 <code class="language-plaintext highlighter-rouge">rollback</code> 횟수도 같이 고려<br /><br /></li>
    </ul>
  </li>
</ul>

<h2 id="deadlock-ignorance">Deadlock Ignorance</h2>
<ul>
  <li>데드락이 일어나지 않는다고 생각하고 아무런 조치도 취하지 않음</li>
  <li>데드락은 매우 드물게 발생하므로 데드락에 대한 조치 자체가 더 큰 오버헤드일 수 있다.</li>
  <li>만약, 시스템에 데드락이 발생한 경우 시스템이 비정상적으로 작동하는 것을 사람이 느낀 후 직접 프로세스를 죽이는 등의 방법으로 대처</li>
  <li><code class="language-plaintext highlighter-rouge">UNIX</code>, <code class="language-plaintext highlighter-rouge">Windows</code> 등 대부분의 범용 <code class="language-plaintext highlighter-rouge">OS</code>가 채택<br /><br /><br /></li>
</ul>

<h1 id="출처">출처</h1>
<ul>
  <li><a href="http://www.kocw.net/home/search/kemView.do?kemId=1046323">운영체제 - 이화여자대학교 KOCW 공개강의</a></li>
</ul>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="Operating System" /><category term="CS" /><category term="OS" /><category term="Process" /><category term="Deadlock" /><summary type="html"><![CDATA[👀 Deadlock(교착상태)란? 일련의 프로세스들이 서로가 가진 자원을 기다리며 block된 상태]]></summary></entry><entry><title type="html">C++) BOJ 2579. 계단 오르기</title><link href="http://localhost:4000/boj/boj1525-cpp/" rel="alternate" type="text/html" title="C++) BOJ 2579. 계단 오르기" /><published>2022-03-08T00:00:00+09:00</published><updated>2022-03-08T00:00:00+09:00</updated><id>http://localhost:4000/boj/boj1525-cpp</id><content type="html" xml:base="http://localhost:4000/boj/boj1525-cpp/"><![CDATA[<h1 id="문제-링크">문제 링크</h1>
<hr />

<ul>
  <li><a href="https://www.acmicpc.net/problem/2579">https://www.acmicpc.net/problem/2579</a><br /><br /></li>
</ul>

<h1 id="제한">제한</h1>
<hr />

<ul>
  <li>시간 제한 : 1 초</li>
  <li>메모리 제한 : 128 MB<br /><br /></li>
</ul>

<h1 id="문제">문제</h1>
<hr />

<ul>
  <li>
    <p>계단 오르는 데는 다음과 같은 규칙이 있다.</p>
  </li>
  <li>계단은 한 번에 한 계단씩 또는 두 계단씩 오를 수 있다. 즉, 한 계단을 밟으면서 이어서 다음 계단이나, 다음 다음 계단으로 오를 수 있다.</li>
  <li>연속된 세 개의 계단을 모두 밟아서는 안 된다. 단, 시작점은 계단에 포함되지 않는다.</li>
  <li>마지막 도착 계단은 반드시 밟아야 한다.</li>
  <li>
    <p>따라서 첫 번째 계단을 밟고 이어 두 번째 계단이나, 세 번째 계단으로 오를 수 있다. 하지만, 첫 번째 계단을 밟고 이어 네 번째 계단으로 올라가거나, 첫 번째, 두 번째, 세 번째 계단을 연속해서 모두 밟을 수는 없다.</p>
  </li>
  <li>각 계단에 쓰여 있는 점수가 주어질 때 이 게임에서 얻을 수 있는 총 점수의 최댓값을 구하는 프로그램을 작성하시오.<br /><br /></li>
</ul>

<h1 id="입력">입력</h1>
<hr />

<ul>
  <li>
    <p>입력의 첫째 줄에 계단의 개수가 주어진다.</p>
  </li>
  <li>
    <p>둘째 줄부터 한 줄에 하나씩 제일 아래에 놓인 계단부터 순서대로 각 계단에 쓰여 있는 점수가 주어진다. 계단의 개수는 300이하의 자연수이고, 계단에 쓰여 있는 점수는 10,000이하의 자연수이다.<br /><br /></p>
  </li>
</ul>

<h1 id="출력">출력</h1>
<hr />

<ul>
  <li>첫째 줄에 계단 오르기 게임에서 얻을 수 있는 총 점수의 최댓값을 출력한다.<br /><br /><br /></li>
</ul>

<h1 id="-풀이">👀 풀이</h1>
<hr />

<ul>
  <li>
    <p>참고 풀이 : <a href="https://yabmoons.tistory.com/510">https://yabmoons.tistory.com/510</a><br /></p>
  </li>
  <li>dp로 어떻게 풀어야 할 지 대충은 알겠는데 구체적인 풀이가 안 떠올라서 구글링했다.</li>
  <li>처음에는 1번 계단과 2번 계단부터 시작하는 경우를 나눈 규칙에 따라 다음 계단을 올라가며 최대값을 구하는데 마지막 계단을 밟지 못하는 경우가 생길수도 있으니까 규칙에 따라 왔을 때 마지막 계단에 도착하지 못하면 다시 되돌아가서 다른 경우를 탐색하는 방식으로 하려 했었다.</li>
  <li>
    <p>그래서 재귀로 짜려고 했는데 되돌아가서 다시 탐색해야 하는 경우에 대한 조건 설정하는 것이 너무 애매해서 할 수 없었다 ㅠㅠ 그래서 구글링…<br /></p>
  </li>
  <li>
    <p>문제 풀이의 키포인트는 <code class="language-plaintext highlighter-rouge">i번째 계단</code>을 밟았을 때 얻을 수 있는 최대값을 구해서 dp 배열에 저장하는 것인데<br /></p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">1번</code> 계단에 왔을 때의 최대값은 <code class="language-plaintext highlighter-rouge">1번</code> 계단의 값이다.<br /></p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">2번</code> 계단에 왔을 때의 최대값은 <code class="language-plaintext highlighter-rouge">1번+2번</code> 계단의 값이 될 것이다.<br /></p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">3번</code> 계단에 왔을 때의 최대값은 <code class="language-plaintext highlighter-rouge">1번+3번</code> 계단 or <code class="language-plaintext highlighter-rouge">2번+3번</code> 계단의 값만 가능하다.<br /></p>
  </li>
  <li><code class="language-plaintext highlighter-rouge">4번</code> 계단에 왔을 때의 최대값은 <code class="language-plaintext highlighter-rouge">1번+3번+4번</code> 계단 or <code class="language-plaintext highlighter-rouge">2번+4번</code> 계단 or <code class="language-plaintext highlighter-rouge">1번+2번+4번</code> 계단의 값이 가능하다.</li>
  <li>여기서 2, 3번째 경우를 보면 둘 다 2번 계단을 밟고 4번까지 오는데 두 경우 중 <code class="language-plaintext highlighter-rouge">1+2+4번</code> 경우가 항상 더 큰 값이 나올 것이다.</li>
  <li>그래서 <code class="language-plaintext highlighter-rouge">4번</code> 계단에 왔을 때엔 <code class="language-plaintext highlighter-rouge">1번+3번+4번</code> 계단 or <code class="language-plaintext highlighter-rouge">1번+2번+4번</code> 계단의 값 중 하나가 최대값이 될 것이다.</li>
  <li>이걸 바꿔 표현하면 <code class="language-plaintext highlighter-rouge">1번까지 왔을 때의 최대값 + 3번 + 4번</code> or <code class="language-plaintext highlighter-rouge">2번까지 왔을 때의 최대값 + 4번</code>이 된다.</li>
  <li>여기서 4에 i를 대입하면 <code class="language-plaintext highlighter-rouge">i번째 계단</code> = <code class="language-plaintext highlighter-rouge">i-3까지 왔을 때의 최대값 + i-1번째 계단 + i번째 계단</code> or <code class="language-plaintext highlighter-rouge">i-2까지 왔을 때의 최대값 + i번째</code> 계단이 된다.</li>
  <li>dp 배열에 대입하면 <code class="language-plaintext highlighter-rouge">dp[i]는 i번째 계단에 왔을 때의 최대값</code>이라고 정의하면</li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">dp[i] = max(dp[i-3] + stair[i-1] + stair[i], dp[i-2] + stair[i])</code><br /></p>
  </li>
  <li>dp 배열의 마지막 계단 인덱스값을 출력하면 정답이 된다.<br /><br /></li>
</ul>

<h1 id="결과">결과</h1>
<hr />

<ul>
  <li>시간 : 0 ms</li>
  <li>메모리 : 2020 KB<br /><br /></li>
</ul>

<h1 id="코드">코드</h1>
<hr />

<script src="https://gist.github.com/miro7923/b85c3cb316ef7b853fb1e0b73248b886.js"></script>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="BOJ" /><category term="Algorithm" /><category term="BOJ" /><category term="No2579" /><category term="DP" /><category term="C++" /><summary type="html"><![CDATA[문제 링크 https://www.acmicpc.net/problem/2579 제한 시간 제한 : 1 초 메모리 제한 : 128 MB]]></summary></entry></feed>