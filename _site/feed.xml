<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2022-02-04T21:39:13+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Yujin Dev Log</title><subtitle>개발 공부하는 블로그</subtitle><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><entry><title type="html">MySQL Workbench 시작하기</title><link href="http://localhost:4000/mysql/mysql-workbench-beginning/" rel="alternate" type="text/html" title="MySQL Workbench 시작하기" /><published>2022-02-04T00:00:00+09:00</published><updated>2022-02-04T00:00:00+09:00</updated><id>http://localhost:4000/mysql/mysql-workbench-beginning</id><content type="html" xml:base="http://localhost:4000/mysql/mysql-workbench-beginning/"><![CDATA[<h1 id="-mysql-workbench란">👀 MySQL Workbench란?</h1>
<ul>
  <li>터미널을 통한 데이터베이스 관리를 좀 더 편하게 할 수 있게 해주는 도구</li>
  <li><code class="language-plaintext highlighter-rouge">IDE</code>를 이용해서 프로그래밍 하는 것처럼 자동완성도 되고 테이블도 시각적으로 좀 더 편하게 볼 수 있고 터미널보다 훨씬 편하다.</li>
  <li>최신버전에는 버그가 있어서 <code class="language-plaintext highlighter-rouge">8.0.19</code> 버전으로 수업을 진행할 예정</li>
  <li>윈도우라면 <code class="language-plaintext highlighter-rouge">MySQL</code> 인스톨러에서 <code class="language-plaintext highlighter-rouge">Remove</code> 버튼을 눌러 개별 프로그램만 간편히 제거한 후 <code class="language-plaintext highlighter-rouge">Add</code> 버튼을 눌러 원하는 버전으로 선택해서 설치할 수 있다.</li>
  <li>하지만 난 맥을 써서 <code class="language-plaintext highlighter-rouge">homebrew</code>로 <code class="language-plaintext highlighter-rouge">MySQL</code>만 따로 깔았기 때문에 <code class="language-plaintext highlighter-rouge">Workbench</code>는 홈페이지에서 dmg 파일을 따로 받아서 설치했다.
<br /><br /><br /></li>
</ul>

<h1 id="mysql-주석문">MySQL 주석문</h1>
<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">#</span> <span class="err">주석문</span>
<span class="c1">-- 주석문</span>
<span class="cm">/* 주석문 */</span>
</code></pre></div></div>

<ul>
  <li>셋 다 사용가능하다.
<br /><br /><br /></li>
</ul>

<h1 id="db-조회">DB 조회</h1>
<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">jspdb</span><span class="p">.</span><span class="n">tbl_member</span><span class="p">;</span>
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">Workbench</code>에서 테이블을 조회하려면 테이블 앞에 <code class="language-plaintext highlighter-rouge">DB명</code>을 꼭 붙여줘야 한다.</li>
  <li>그런데 매번 이렇게 쓰려면 좀 귀찮다…</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">use</span> <span class="n">jspdb</span><span class="p">;</span>

<span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">tbl_member</span><span class="p">;</span>
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">C++</code>에서 <code class="language-plaintext highlighter-rouge">using</code>을 쓰듯 <code class="language-plaintext highlighter-rouge">use</code>를 써서 <code class="language-plaintext highlighter-rouge">DB명</code>을 선언해주면 그 다음부터는 <code class="language-plaintext highlighter-rouge">DB명</code> 없이 테이블을 부를 수 있다.</li>
</ul>

<h2 id="쿼리문-실행">쿼리문 실행</h2>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Windows) ctrl + enter
Mac) command + enter
</code></pre></div></div>

<ul>
  <li>일정 쿼리 구문들만 실행하고 싶으면 해당 쿼리문들을 블록으로 선택한 후 위 명령어를 입력하면 해당 쿼리문들만 실행된다.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Windows) ctrl + shift + enter
Mac) command + shift + enter
</code></pre></div></div>

<ul>
  <li>전체 쿼리 실행은 위 명령어를 입력한다.</li>
</ul>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="MySQL" /><category term="MySQL" /><category term="Workbench" /><category term="Database" /><category term="JSP" /><summary type="html"><![CDATA[👀 MySQL Workbench란? 터미널을 통한 데이터베이스 관리를 좀 더 편하게 할 수 있게 해주는 도구 IDE를 이용해서 프로그래밍 하는 것처럼 자동완성도 되고 테이블도 시각적으로 좀 더 편하게 볼 수 있고 터미널보다 훨씬 편하다. 최신버전에는 버그가 있어서 8.0.19 버전으로 수업을 진행할 예정 윈도우라면 MySQL 인스톨러에서 Remove 버튼을 눌러 개별 프로그램만 간편히 제거한 후 Add 버튼을 눌러 원하는 버전으로 선택해서 설치할 수 있다. 하지만 난 맥을 써서 homebrew로 MySQL만 따로 깔았기 때문에 Workbench는 홈페이지에서 dmg 파일을 따로 받아서 설치했다.]]></summary></entry><entry><title type="html">Java) BOJ 2908. 상수</title><link href="http://localhost:4000/boj/boj2908/" rel="alternate" type="text/html" title="Java) BOJ 2908. 상수" /><published>2022-02-04T00:00:00+09:00</published><updated>2022-02-04T00:00:00+09:00</updated><id>http://localhost:4000/boj/boj2908</id><content type="html" xml:base="http://localhost:4000/boj/boj2908/"><![CDATA[<h1 id="문제-링크">문제 링크</h1>
<ul>
  <li><a href="https://www.acmicpc.net/problem/2908">https://www.acmicpc.net/problem/2908</a><br /><br /></li>
</ul>

<h1 id="문제">문제</h1>
<ul>
  <li>
    <p>상근이의 동생 상수는 수학을 정말 못한다. 상수는 숫자를 읽는데 문제가 있다. 이렇게 수학을 못하는 상수를 위해서 상근이는 수의 크기를 비교하는 문제를 내주었다. 상근이는 세 자리 수 두 개를 칠판에 써주었다. 그 다음에 크기가 큰 수를 말해보라고 했다.</p>
  </li>
  <li>
    <p>상수는 수를 다른 사람과 다르게 거꾸로 읽는다. 예를 들어, 734와 893을 칠판에 적었다면, 상수는 이 수를 437과 398로 읽는다. 따라서, 상수는 두 수중 큰 수인 437을 큰 수라고 말할 것이다.</p>
  </li>
  <li>
    <p>두 수가 주어졌을 때, 상수의 대답을 출력하는 프로그램을 작성하시오.<br /><br /></p>
  </li>
</ul>

<h1 id="입력">입력</h1>
<ul>
  <li>첫째 줄에 상근이가 칠판에 적은 두 수 A와 B가 주어진다. 두 수는 같지 않은 세 자리 수이며, 0이 포함되어 있지 않다.<br /><br /></li>
</ul>

<h1 id="출력">출력</h1>
<ul>
  <li>첫째 줄에 상수의 대답을 출력한다.<br /><br /><br /></li>
</ul>

<h1 id="-풀이">👀 풀이</h1>
<ul>
  <li>입력으로 주어지는 숫자들을 % 연산을 이용해 뒤집은 다음 뒤집은 수들을 비교한 뒤 큰 값을 출력한다.</li>
  <li>버퍼입출력을 이용해 출력할 때 주의점은 정수형은 string으로 타입캐스팅을 해 주어야 제대로 출력된다.(처음에 이걸 모르고 정수형 그대로 넣어서 이상한 값이 출력되어서 헤멨다…)<br /><br /></li>
</ul>

<script src="https://gist.github.com/miro7923/b980385c09874e8349d10b6b1dfe72d1.js"></script>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="BOJ" /><category term="Algorithm" /><category term="BOJ" /><category term="No2908" /><category term="String" /><category term="Java" /><summary type="html"><![CDATA[문제 링크 https://www.acmicpc.net/problem/2908]]></summary></entry><entry><title type="html">Java) BOJ 5622. 다이얼</title><link href="http://localhost:4000/boj/boj5622/" rel="alternate" type="text/html" title="Java) BOJ 5622. 다이얼" /><published>2022-02-04T00:00:00+09:00</published><updated>2022-02-04T00:00:00+09:00</updated><id>http://localhost:4000/boj/boj5622</id><content type="html" xml:base="http://localhost:4000/boj/boj5622/"><![CDATA[<h1 id="문제-링크">문제 링크</h1>
<ul>
  <li><a href="https://www.acmicpc.net/problem/5622">https://www.acmicpc.net/problem/5622</a><br /><br /></li>
</ul>

<h1 id="문제">문제</h1>
<ul>
  <li>
    <p>상근이의 할머니는 아래 그림과 같이 오래된 다이얼 전화기를 사용한다.
<img src="https://upload.acmicpc.net/9c88dd24-3a4c-4a09-bc50-e6496958214d/-/preview/" alt="dial" class="align-center" width="250" height="150" /></p>
  </li>
  <li>
    <p>전화를 걸고 싶은 번호가 있다면, 숫자를 하나를 누른 다음에 금속 핀이 있는 곳 까지 시계방향으로 돌려야 한다. 숫자를 하나 누르면 다이얼이 처음 위치로 돌아가고, 다음 숫자를 누르려면 다이얼을 처음 위치에서 다시 돌려야 한다.</p>
  </li>
  <li>
    <p>숫자 1을 걸려면 총 2초가 필요하다. 1보다 큰 수를 거는데 걸리는 시간은 이보다 더 걸리며, 한 칸 옆에 있는 숫자를 걸기 위해선 1초씩 더 걸린다.</p>
  </li>
  <li>
    <p>상근이의 할머니는 전화 번호를 각 숫자에 해당하는 문자로 외운다. 즉, 어떤 단어를 걸 때, 각 알파벳에 해당하는 숫자를 걸면 된다. 예를 들어, UNUCIC는 868242와 같다.</p>
  </li>
  <li>
    <p>할머니가 외운 단어가 주어졌을 때, 이 전화를 걸기 위해서 필요한 최소 시간을 구하는 프로그램을 작성하시오.<br /><br /></p>
  </li>
</ul>

<h1 id="입력">입력</h1>
<ul>
  <li>첫째 줄에 알파벳 대문자로 이루어진 단어가 주어진다. 단어의 길이는 2보다 크거나 같고, 15보다 작거나 같다.<br /><br /></li>
</ul>

<h1 id="출력">출력</h1>
<ul>
  <li>첫째 줄에 다이얼을 걸기 위해서 필요한 최소 시간을 출력한다.<br /><br /><br /></li>
</ul>

<h1 id="-풀이">👀 풀이</h1>
<ul>
  <li>다소 하드코딩으로 풀었는데… 1~9까지 돌리는데 걸리는 최소 시간을 배열에 저장한 다음에 각 문자의 범위별로 인덱스값을 정해주어 시간을 저장한 배열에서 시간을 가져와서 더해주었다.<br /><br /></li>
</ul>

<script src="https://gist.github.com/miro7923/dab5efa1b825e30802d5afffe75fb522.js"></script>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="BOJ" /><category term="Algorithm" /><category term="BOJ" /><category term="No5622" /><category term="String" /><category term="Java" /><summary type="html"><![CDATA[문제 링크 https://www.acmicpc.net/problem/5622]]></summary></entry><entry><title type="html">MySQL 시작하기</title><link href="http://localhost:4000/mysql/mysql-beginning/" rel="alternate" type="text/html" title="MySQL 시작하기" /><published>2022-02-03T00:00:00+09:00</published><updated>2022-02-03T00:00:00+09:00</updated><id>http://localhost:4000/mysql/mysql-beginning</id><content type="html" xml:base="http://localhost:4000/mysql/mysql-beginning/"><![CDATA[<h1 id="-mysql-시작하기">👀 MySql 시작하기</h1>
<ul>
  <li>맥 기준으로 <code class="language-plaintext highlighter-rouge">MySql</code>을 설치하는 방법에는 2가지가 있는데</li>
  <li><code class="language-plaintext highlighter-rouge">homebrew</code>를 통해 설치하는 방법과</li>
  <li>
    <p>MySql 홈페이지에서 <code class="language-plaintext highlighter-rouge">dmg</code> 파일을 다운받아 설치하는 방법이 있다. <br /><br /></p>
  </li>
  <li>나는 여기서 <code class="language-plaintext highlighter-rouge">homebrew</code>를 통해 설치하는 방법을 택했다.</li>
  <li><code class="language-plaintext highlighter-rouge">homebrew</code>는 맥에서 쓸 수 있는 터미널 버전 앱스토어 같은 느낌으로 개발에 필요한 각종 소프트웨어들을 명령어 한 줄로 간편하게 설치할 수 있다.</li>
</ul>

<h2 id="mysql-설치">MySql 설치</h2>
<ul>
  <li><code class="language-plaintext highlighter-rouge">homebrew</code>가 설치되어 있다는 전제하에 <code class="language-plaintext highlighter-rouge">homebrew</code> 터미널을 열어 명령어 입력을 통한 설치를 진행할 것인데, 먼저 홈 브루를 최신 버전으로 업데이트 시켜주고 시작하자.
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>brew update
</code></pre></div>    </div>
  </li>
  <li>업데이트가 완료되면 아래 명령어를 입력하면 MySql이 설치된다.
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>brew install mysql
</code></pre></div>    </div>
  </li>
  <li>설치가 완료된 후
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>brew list
</code></pre></div>    </div>
  </li>
  <li>를 입력하면 홈 브루를 통해 설치된 프로그램들이 나열되는데 그 중에 mysql이 있으면 설치가 잘 된 것임</li>
</ul>

<h2 id="mysql-실행">MySql 실행</h2>
<ul>
  <li>아까 설치할 때 썼던 터미널창에서 명령어 입력을 통해 <code class="language-plaintext highlighter-rouge">MySql</code>을 실행할 수 있는데 역시 2가지 방법이 있다.
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>brew services start mysql 혹은
mysql.server start
</code></pre></div>    </div>
  </li>
  <li>둘 중 하나를 입력해서 <code class="language-plaintext highlighter-rouge">MySql</code>서버를 시작할 수 있다.</li>
  <li>네트워크 연결 허용하겠냐는 창이 뜨면 허용하겠다고 하면 된다.</li>
</ul>

<h2 id="mysql-초기-설정">MySql 초기 설정</h2>
<ul>
  <li>서버가 시작되었다고 바로 쓸 수 있는 것은 아니고 간단한 설정을 해 주어야 한다.
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>mysql_secure_installation
</code></pre></div>    </div>
  </li>
  <li>
    <p>위 명령어를 입력하면 <code class="language-plaintext highlighter-rouge">MySql</code> 초기 세팅을 시작할 수 있다.<br /><br /></p>
  </li>
  <li>
    <table>
      <tbody>
        <tr>
          <td>“Would you like to setup VALIDATE PASSWORD component? (Press y</td>
          <td>Y for Yes, any other key for No)”</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>비밀번호를 복잡하게 설정하겠느냐는 것인데 아직 초보 단계니까 <code class="language-plaintext highlighter-rouge">No</code>를 입력해서 ‘1234’와 같은 쉬운 비밀번호를 설정한다. (<code class="language-plaintext highlighter-rouge">Yes</code>를 입력하면 복잡한 비밀번호 설정)</li>
  <li>
    <p>새 비밀번호를 입력하라는 메시지가 나오면 입력하고 엔터 누르면 된다.<br /><br /></p>
  </li>
  <li>
    <table>
      <tbody>
        <tr>
          <td>“Remove anonymous users? (Press y</td>
          <td>Y for Yes. any other key for No)”</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>사용자 설정을 묻는 것인데 <code class="language-plaintext highlighter-rouge">Yes</code>를 선택했다.</li>
  <li>Yes - 접속하는 경우 “mysql -uroot”처럼 -u 옵션 필요</li>
  <li>
    <p>No - 접속하는 경우 “mysql”처럼 -u 옵션 불필요<br /><br /></p>
  </li>
  <li>
    <table>
      <tbody>
        <tr>
          <td>“Disallow root login remotely? (Press y</td>
          <td>Y for Yes, any other key for No)”</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>다른 IP에서 root 아이디로 원격 접속이 가능한지 묻는 것인데 <code class="language-plaintext highlighter-rouge">Yes</code>는 불가능, <code class="language-plaintext highlighter-rouge">No</code>는 가능</li>
  <li>
    <p>나는 <code class="language-plaintext highlighter-rouge">Yes</code>로 선택했다.<br /><br /></p>
  </li>
  <li>
    <table>
      <tbody>
        <tr>
          <td>“Remove test database and access to it? (Press y</td>
          <td>Y for Yes, any other key for No)”</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>
    <p>테스트 데이터베이스를 삭제할건지 말건지 묻는 것인데 나는 <code class="language-plaintext highlighter-rouge">Yes</code>로 선택했다.<br /><br /></p>
  </li>
  <li>
    <table>
      <tbody>
        <tr>
          <td>“Reload privilege tables now? (Press y</td>
          <td>Y for Yes, any other key for No)”</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>
    <p>변경된 권한을 테이블에 적용하는 설정에 대한 질문인데 이 질문은 무조건 <code class="language-plaintext highlighter-rouge">Yes</code>로 선택하는 것이 좋다고 한다.<br /><br /></p>
  </li>
  <li>여기까지 하면 모든 초기 설정이 완료된다.</li>
</ul>

<h2 id="mysql-접속">MySql 접속</h2>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>mysql -u root -p
</code></pre></div></div>
<ul>
  <li>위 명령어를 입력하면 root 아이디로 로그인할 수 있다.</li>
  <li>비밀번호 입력창이 나오면 비밀번호를 입력 후(보이지 않지만 그냥 치면 됨) 엔터를 누르면 로그인이 완료된다.</li>
  <li>정상적으로 로그인 되면 쉘이 <code class="language-plaintext highlighter-rouge">mysql&gt;</code>로 바뀐다.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>mysql&gt; status;
</code></pre></div></div>
<ul>
  <li>위 명령어를 입력하면 현재 설정을 확인할 수 있다.</li>
</ul>

<h2 id="mysql-종료">MySql 종료</h2>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>mysql&gt; exit
</code></pre></div></div>
<ul>
  <li>위 명령어를 입력하면 <code class="language-plaintext highlighter-rouge">Bye</code>라는 메시지와 함께 <code class="language-plaintext highlighter-rouge">mysql</code>에서 빠져나올 수 있다.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>brew services stop mysql 혹은
mysql.server stop
</code></pre></div></div>
<ul>
  <li>둘 중 하나를 입력하면 <code class="language-plaintext highlighter-rouge">MySql</code> 서버가 종료된다.</li>
</ul>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="MySQL" /><category term="MySQL" /><category term="Database" /><category term="JSP" /><summary type="html"><![CDATA[👀 MySql 시작하기 맥 기준으로 MySql을 설치하는 방법에는 2가지가 있는데 homebrew를 통해 설치하는 방법과 MySql 홈페이지에서 dmg 파일을 다운받아 설치하는 방법이 있다.]]></summary></entry><entry><title type="html">운영체제</title><link href="http://localhost:4000/operating%20system/OS-01/" rel="alternate" type="text/html" title="운영체제" /><published>2022-02-02T00:00:00+09:00</published><updated>2022-02-02T00:00:00+09:00</updated><id>http://localhost:4000/operating%20system/OS-01</id><content type="html" xml:base="http://localhost:4000/operating%20system/OS-01/"><![CDATA[<h1 id="-운영체제란">👀 운영체제란?</h1>
<ul>
  <li>Operating System, OS</li>
  <li>
    <p>컴퓨터 하드웨어 바로 위에 설치되어 사용자 및 다른 모든 소프트웨어와 하드웨어를 연결하는 소프트웨어 계층<br /><br />
<img src="../../assets/images/os.png" alt="os" /><br /><br /></p>
  </li>
  <li>좁은 의미의 운영체제(커널)
    <ul>
      <li>운영체제의 핵심 부분으로 메모리에 상주하는 부분</li>
      <li>전공자 입장에서는 운영체제 하면 커널만을 이야기한다.</li>
    </ul>
  </li>
  <li>넓은 의미의 운영체제
    <ul>
      <li>커널 뿐 아니라 메모리에 상주하지 않는 각종 주변 시스템 유틸리티를 포함한 개념<br /><br /></li>
    </ul>
  </li>
</ul>

<h2 id="-운영체제의-목적">🔸 운영체제의 목적<br /></h2>
<ol>
  <li>컴퓨터 시스템을 편라하게 사용할 수 있는 환경 제공</li>
  <li>컴퓨터 시스템의 <strong>자원을 효율적으로 관리</strong>
    <ul>
      <li>하드웨어 자원인 프로세서, 기억장치, 입출력 장치들의 관리와</li>
      <li>소프트웨어 자원인 프로세스, 파일, 메시지 등 모든 것을 관리한다.</li>
      <li>사용자간의 형평성 있는 자원 분배가 가능해야 하고 <strong>주어진 자원으로 최대한의 성능</strong>을 낼 수 있어야 한다.</li>
      <li>실행 중인 프로그램들은 CPU를 번갈아가며 차지하며 동작을 하게 되는데 이 때 운영체제는 한 프로그램이 CPU를 너무 오랫동안 쓰지 않고 짧은 시간동안 번갈아 쓰도록 할당해 주어야 한다.</li>
      <li>또한 실행 중인 프로그램들에게 메모리 공간을 적절히 분배해 주어야 한다.<br /><br /></li>
    </ul>
  </li>
</ol>

<h2 id="-운영체제의-분류">🔸 운영체제의 분류</h2>
<ul>
  <li>동시 작업 가능 여부</li>
  <li>사용자의 수</li>
  <li>처리 방식<br /><br /></li>
  <li>위 세 가지에 따라 분류할 수 있는데 현대 운영체제는 동시 작업이 가능하고 다중 사용자를 지원하며 시분할이 가능하다고 정리할 수 있다.</li>
</ul>

<h3 id="️-동시-작업-가능-여부">☑️ 동시 작업 가능 여부</h3>
<h4 id="단일-작업single-tasking">단일 작업(single tasking)</h4>
<ul>
  <li>한 번에 하나의 작업만을 처리한다.</li>
  <li>예) MS-DOS 프롬프트 상에서는 한 명령의 수행을 끝내기 전에 다른 명령을 수행시킬 수 없음</li>
  <li>과거에 MS-DOS에서 주로 사용되던 방식으로 현대 컴퓨터에선 쓰이지 않지만 엘리베이터처럼 기능이 단순하거나 특수 목적을 수행하는 기계에는 지금도 사용되고 있다.</li>
</ul>

<h4 id="다중-작업multi-tasking">다중 작업(multi tasking)</h4>
<ul>
  <li>동시에 두 개 이상의 작업 처리</li>
  <li>예) UNIX, MS Windows 등에서는 한 명령의 수행이 끝나기 전에 다른 명령이나 프로그램을 수행할 수 있음</li>
  <li>스마트폰을 포함한 현대의 대부분의 하드웨어에서 사용되는 운영체제이다.<br /><br /></li>
</ul>

<h3 id="️-사용자의-수">☑️ 사용자의 수</h3>
<h4 id="단일-사용자single-user">단일 사용자(single user)</h4>
<ul>
  <li>예) MS-DOS, MS Windows</li>
</ul>

<h4 id="다중-사용자multi-user">다중 사용자(multi user)</h4>
<ul>
  <li>예) UNIX, NT server</li>
  <li>사용자가 많아지면 파일에 대한 접근 권한이나 사용자간 자원 분배를 형평성 있게 해 줄 수 있어야 한다.<br /><br /></li>
</ul>

<h3 id="️-처리-방식">☑️ 처리 방식</h3>
<h4 id="일괄-처리batch-processing">일괄 처리(batch processing)</h4>
<ul>
  <li><code class="language-plaintext highlighter-rouge">Interactive</code> 하지 않은 방식</li>
  <li>작업 요청을 일정량 모아서 한꺼번에 처리</li>
  <li>작업이 완전 종료될 때까지 기다려야 함(하루 이상 걸림)</li>
  <li>에) 초기 Punch Card 처리 시스템</li>
</ul>

<h4 id="시분할time-sharing">시분할(time sharing)</h4>
<ul>
  <li><code class="language-plaintext highlighter-rouge">Interactive</code>한 방식</li>
  <li>현대에 주로 사용하는 운영체제로 일반적인 범용 컴퓨터에서 사용</li>
  <li>여러 작업을 수행할 때 컴퓨터 처리 능력을 일정한 시간 단위로 분할해서 사용</li>
  <li>일괄 처리 시스템에 비해 짧은 응답 시간을 가짐(UNIX)</li>
  <li>하지만 응답 시간이 항상 고정된 것은 아니며 사용자가 많아지면 느려질 수 있다.</li>
  <li>사람이 빠르다고 느끼면서 주어진 자원과 시간을 최대한 활용하는 것이 목적이다.</li>
</ul>

<h4 id="실시간realtime-os">실시간(Realtime OS)</h4>
<ul>
  <li>정해진 시간 안에 어떠한 일이 반드시 종료됨이 보장되어야 하는 실시간시스템을 위한 OS</li>
  <li>원자로/공장 제어, 미사일 제어, 반도체 장비, 로보트 제어 등 특수 목적을 가진 시스템에서 사용된다.</li>
</ul>

<h5 id="️-실시간-시스템의-개념-확장">▪️ 실시간 시스템의 개념 확장</h5>
<ul>
  <li>Hard realtime system(경성 실시간 시스템)
    <ul>
      <li>데드라인을 지키지 않으면 큰일나는 시스템</li>
      <li>예) 반도체, 미사일 등</li>
    </ul>
  </li>
  <li>Soft realtime system(연성 실시간 시스템)
    <ul>
      <li>데드라인을 좀 못 지켜도 괜찮은 시스템</li>
      <li>예) OTT<br /><br /></li>
    </ul>
  </li>
</ul>

<h2 id="-비슷한-의미로-사용되지만-약간-다른-용어들">🔸 비슷한 의미로 사용되지만 약간 다른 용어들</h2>
<ul>
  <li><code class="language-plaintext highlighter-rouge">Multitasking</code> : 하나의 프로그램이 끝나기 전에 다른 프로그램 작업이 가능한 것</li>
  <li><code class="language-plaintext highlighter-rouge">Multiprogramming</code> : 여러 프로그램이 메모리에 올라가 있는 것을 강조</li>
  <li><code class="language-plaintext highlighter-rouge">Time sharing</code> : <code class="language-plaintext highlighter-rouge">CPU</code>의 시간을 분할하여 나누어 쓴다는 것을 강조</li>
  <li><code class="language-plaintext highlighter-rouge">Multiprocess</code> : 여러 프로그램이 동시에 실행된다.</li>
  <li>=&gt; 모두 컴퓨터에서 여러 작업을 동시에 수행한다는 것을 뜻하지만 어디에 더 초점을 맞추느냐에 따라 다르게 사용된다.</li>
</ul>

<h3 id="️-multiprocessor">☑️ Multiprocessor</h3>
<ul>
  <li>하나의 컴퓨터에 <code class="language-plaintext highlighter-rouge">CPU(processor)</code>가 여러 개 붙어 있음을 의미</li>
  <li><code class="language-plaintext highlighter-rouge">CPU</code>가 하나임을 전제로 하는 위의 네 가지 용어들과는 하드웨어적으로 다르다.<br /><br /></li>
</ul>

<h2 id="-운영체제의-예">🔸 운영체제의 예</h2>
<h3 id="️-유닉스unix">☑️ 유닉스(UNIX)</h3>
<ul>
  <li>멀티태스킹 가능</li>
  <li>다중 사용자용</li>
  <li>대형 서버용</li>
  <li>코드의 대부분을 C언어로 작성 - 기계어 사용에 어려움이 많아서 유닉스 개발용으로 C언어를 만들었다.</li>
  <li>높은 이식성 - 다른 기계어 집합을 사용하는 컴퓨터에 이식이 쉽다.</li>
  <li>최소한의 커널 구조</li>
  <li>복잡한 시스템에 맞게 확장 용이</li>
  <li>소스 코드 공개 - 학술적으로 사용하기 좋다.</li>
  <li>프로그램 개발에 용이</li>
  <li>다양한 버전
    <ul>
      <li>System V, FeeBSD, SunOS, Solaris - 유로. 소스 코드 비공개</li>
      <li>Linux - 무료. 소스 코드 공개. 유닉스보다는 규모가 작은 환경이나 개인용 컴퓨터에 사용된다.</li>
    </ul>
  </li>
</ul>

<h3 id="️-dosdisk-operating-system">☑️ DOS(Disk Operating System)</h3>
<ul>
  <li>MS사에서 1981년 IBM-PC를 위해 개발</li>
  <li>단일 사용자용 운영체제</li>
  <li>싱글태스크</li>
  <li>메모리 관리 능력의 한계(주 기억 장치 최대 용량 : 640KB)</li>
</ul>

<h3 id="️-ms-windows">☑️ MS Windows</h3>
<ul>
  <li>MS사의 다중 작업용 GUI 기반 운영체제</li>
  <li>Plug and Play, 네트워크 환경 강화</li>
  <li>DOS용 응용 프로그램과 호환성 제공</li>
  <li>불안정성(초창기 윈도우즈)</li>
  <li>풍부한 지원 소프트웨어</li>
</ul>

<h3 id="️-handheld-device를-위한-os">☑️ Handheld device를 위한 OS</h3>
<ul>
  <li>PalmOS, Pocket PC(WinCE), Tiny OS<br /><br /></li>
</ul>

<h2 id="-운영체제의-구조">🔸 운영체제의 구조</h2>
<ul>
  <li>크게 <code class="language-plaintext highlighter-rouge">CPU</code> - <code class="language-plaintext highlighter-rouge">memory</code> - <code class="language-plaintext highlighter-rouge">Disk</code> - <code class="language-plaintext highlighter-rouge">I/O device</code> 구조</li>
</ul>

<h3 id="️-cpu">☑️ CPU</h3>
<ul>
  <li><code class="language-plaintext highlighter-rouge">CPU 스케줄링</code>을 통해 실행중인 프로그램들에게 <code class="language-plaintext highlighter-rouge">CPU</code>를 효율적으로 할당해야 함</li>
  <li><code class="language-plaintext highlighter-rouge">CPU</code>에게는 선착순 처리가 효율적이지 않기 때문에 프로그램마다 걸리는 작업 시간에 따라 처리하도록 스케줄링한다.</li>
</ul>

<h3 id="️-memory">☑️ memory</h3>
<ul>
  <li>프로그램을 실행하려면 <code class="language-plaintext highlighter-rouge">memory</code>에 올려야 하는데 <code class="language-plaintext highlighter-rouge">memory</code>는 한정되어 있기 때문에 적당히 잘 쪼개어 써야 한다.</li>
  <li>최근에 많이 사용된 데이터는 오래 보관하고 그렇지 않으면 쫓아내는 방식으로 관리</li>
</ul>

<h3 id="️-disk">☑️ Disk</h3>
<ul>
  <li><code class="language-plaintext highlighter-rouge">Disk</code>에는 헤드가 있고 그 헤드를 움직이면서 일정 위치에 파일을 기록하기 때문에 <code class="language-plaintext highlighter-rouge">I/O</code> 요청이 들어왔을 때 헤드를 최대한 적게 움직이면서 최대한 빠르게 많이 처리할 수 있도록 처리 순서를 스케줄링 해야 한다.</li>
</ul>

<h3 id="️-io-device">☑️ I/O device</h3>
<ul>
  <li>지금까지 나온 장치들 중에선 가장 느리다.</li>
  <li>때문에 <code class="language-plaintext highlighter-rouge">인터럽트</code> 기반으로 관리되며 <code class="language-plaintext highlighter-rouge">CPU</code>는 평소에는 자기 할 일을 하고 있다가 <code class="language-plaintext highlighter-rouge">I/O</code> 장치에서 <code class="language-plaintext highlighter-rouge">인터럽트</code> 요청이 들어오면 입출력을 수행하는 방식으로 진행된다.</li>
</ul>

<h3 id="️-프로세스-관리">☑️ 프로세스 관리</h3>
<ul>
  <li>프로세스의 생성과 삭제</li>
  <li>자원 할당 및 반환</li>
  <li>프로세스 간 협력</li>
</ul>

<h3 id="️-그-외">☑️ 그 외</h3>
<ul>
  <li>보호 시스템</li>
  <li>네트워킹</li>
  <li>명령어 해석기(command line interpreter)</li>
</ul>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="Operating System" /><category term="CS" /><category term="OS" /><summary type="html"><![CDATA[👀 운영체제란? Operating System, OS 컴퓨터 하드웨어 바로 위에 설치되어 사용자 및 다른 모든 소프트웨어와 하드웨어를 연결하는 소프트웨어 계층]]></summary></entry><entry><title type="html">세션(Session)과 쿠키(Cookie)</title><link href="http://localhost:4000/jsp/JSP-session-cookie/" rel="alternate" type="text/html" title="세션(Session)과 쿠키(Cookie)" /><published>2022-02-01T00:00:00+09:00</published><updated>2022-02-01T00:00:00+09:00</updated><id>http://localhost:4000/jsp/JSP-session-cookie</id><content type="html" xml:base="http://localhost:4000/jsp/JSP-session-cookie/"><![CDATA[<h1 id="-세션session이란">👀 세션(Session)이란?</h1>
<h2 id="️-서버랑-클라이언트와의-관계상태를-유지하기-위해서-사용하는-값">☑️ 서버랑 클라이언트와의 관계(상태)를 유지하기 위해서 사용하는 값</h2>
<ul>
  <li><code class="language-plaintext highlighter-rouge">HTTP 프로토콜</code>은 상태가 유지되지 않기 때문에 요청에 대한 응답이 한 번씩 이뤄지고 나면 그 관계가 소멸된다.</li>
  <li>하지만 이런 방식으로는 사용자가 회원 사이트에 로그인 했을 때 지속적으로 업무를 볼 수 없게 된다.</li>
  <li>그래서 사용자가 지속적으로 업무를 볼 수 있도록 서버와 클라이언트간의 관계를 일정 시간동안 유지해주기 위해 쓰는 것이 <code class="language-plaintext highlighter-rouge">세션</code>이다.</li>
  <li>세션객체(영역)는 브라우저당 1개씩 생성된다.</li>
</ul>

<h2 id="-세션-메소드">🔸 세션 메소드</h2>
<ul>
  <li>세션값 생성 : <code class="language-plaintext highlighter-rouge">session.setAttribute("이름", 값);</code></li>
  <li>세션값 사용 : <code class="language-plaintext highlighter-rouge">session.getAttribute("이름");</code></li>
  <li>세션값 제거 : <code class="language-plaintext highlighter-rouge">session.removeAttribute("이름");</code></li>
  <li>세션값 초기화 : <code class="language-plaintext highlighter-rouge">session.invalidate();</code>
    <ul>
      <li>❗️ 세션값 제거 메소드를 통한 부분제거보다는 세션값 초기화를 시켜야 한다.</li>
      <li>일부만 제거하면 사용자가 로그아웃 했는데 로그인 했을 때와 같은 행동이 일부 가능할 수 있다.
<br /><br /><br /></li>
    </ul>
  </li>
</ul>

<h1 id="-쿠키cookie란">👀 쿠키(Cookie)란?</h1>
<ul>
  <li><code class="language-plaintext highlighter-rouge">클라이언트</code> 측에서 관리되는 정보</li>
  <li>사용 가능한 기간동안 하드디스크에 저장되기 때문에 웹 브라우저가 사라져도 사용이 가능하다.</li>
  <li>하지만 그만큼 보안적으로 취약하다. (그래서 보안이 필요한 정보는 <code class="language-plaintext highlighter-rouge">세션</code> 사용)</li>
</ul>

<h2 id="-쿠키-생성-절차">🔸 쿠키 생성 절차</h2>
<h3 id="1-쿠키-생성">1. 쿠키 생성</h3>
<h3 id="2-쿠키가-필요로-하는-설정값-저장유효기간-설명-도메인-">2. 쿠키가 필요로 하는 설정값 저장(유효기간, 설명, 도메인, …)</h3>
<h3 id="3-웹-브라우저에-생성된-쿠키-정보-전달">3. 웹 브라우저에 생성된 쿠키 정보 전달</h3>
<h3 id="4-웹-브라우저-요청에서-쿠키를-얻어온다">4. 웹 브라우저 요청에서 쿠키를 얻어온다.</h3>
<h3 id="5-쿠키-정보는-이름-값의-데이터-쌍으로-형성된다">5. 쿠키 정보는 이름, 값의 데이터 쌍으로 형성된다.</h3>
<h3 id="6-쿠키-이름을-사용해서-해당-값을-사용한다">6. 쿠키 이름을 사용해서 해당 값을 사용한다.</h3>

<h2 id="-쿠키-사용-방법">🔸 쿠키 사용 방법</h2>
<h3 id="1-http-헤더-정보-사용---안씀-xx">1) <code class="language-plaintext highlighter-rouge">HTTP</code> 헤더 정보 사용 - 안씀 XX</h3>
<h3 id="2-서블릿-api-사용---현재-쓰는-방식">2) 서블릿 API 사용 - 현재 쓰는 방식</h3>

<ul>
  <li>쿠키 생성하는 예제 코드</li>
</ul>

<div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;%</span>
    <span class="c1">// 쿠키값 생성 - 서블릿 API 사용</span>
    <span class="nc">Cookie</span> <span class="n">cookie</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Cookie</span><span class="o">(</span><span class="s">"name"</span><span class="o">,</span> <span class="s">"CookieValue"</span><span class="o">);</span> <span class="c1">// HDD 저장X, 메모리에만 있는 상태</span>
		
    <span class="c1">// 쿠키값 설정 - 유효기간 설정</span>
    <span class="n">cookie</span><span class="o">.</span><span class="na">setMaxAge</span><span class="o">(</span><span class="mi">600</span><span class="o">);</span> <span class="c1">// 초 단위 - 10분</span>
		
    <span class="c1">// 쿠키값을 저장(응답정보(response)에 저장)</span>
    <span class="n">response</span><span class="o">.</span><span class="na">addCookie</span><span class="o">(</span><span class="n">cookie</span><span class="o">);</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"쿠키정보가 전달 완료시 사용자의 HDD에 저장"</span><span class="o">);</span>
<span class="nt">%&gt;</span>
</code></pre></div></div>

<ul>
  <li>
    <p>먼저 쿠키를 생성한 다음 클라이언트에게 전송한다.</p>
  </li>
  <li>
    <p>쿠키값 가져오는 예제 코드</p>
  </li>
</ul>

<div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;%</span>
    <span class="c1">// 쿠키값 가져오기(request - 요청정보로부터 꺼내오기)</span>
    <span class="nc">Cookie</span><span class="o">[]</span> <span class="n">cookies</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getCookies</span><span class="o">();</span>
			
    <span class="k">if</span> <span class="o">(</span><span class="kc">null</span> <span class="o">!=</span> <span class="n">cookies</span><span class="o">)</span> <span class="c1">// !!배열을 반복문 돌리기 전에 예외처리 꼭 하기!!</span>
    <span class="o">{</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">cookies</span><span class="o">.</span><span class="na">length</span> <span class="err">&gt;</span> <span class="n">i</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span>
        <span class="o">{</span>
            <span class="c1">//System.out.println(cookies[i]);</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">cookies</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">getName</span><span class="o">().</span><span class="na">equals</span><span class="o">(</span><span class="s">"name"</span><span class="o">))</span>
            <span class="o">{</span>
                <span class="c1">// Cookie cookie = new Cookie("name", "CookieValue"); // HDD 저장X, 메모리O</span>
                <span class="c1">// ⬆️ 얘를 가져올 것임</span>
                <span class="c1">// 이름이 같다면 내가 직접 생성한 쿠키임</span>
                <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">cookies</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">getValue</span><span class="o">());</span>
						
                <span class="n">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="s">"쿠키명: "</span> <span class="o">+</span> <span class="n">cookies</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">getName</span><span class="o">()</span> <span class="o">+</span> <span class="s">"\n"</span><span class="o">);</span>
                <span class="n">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="s">"쿠키값 : "</span> <span class="o">+</span> <span class="n">cookies</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">getValue</span><span class="o">());</span>
            <span class="o">}</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="nt">%&gt;</span>
</code></pre></div></div>

<ul>
  <li>그 다음 클라이언트 측에서 쿠키를 가져온다.</li>
  <li>쿠키값을 가져올 때엔 꼭 예외처리를 해서 <code class="language-plaintext highlighter-rouge">null</code>값이 아닐 때에만 가져오는 동작을 수행하도록 해야한다.</li>
</ul>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="JSP" /><category term="JSP" /><category term="WEB" /><category term="Session" /><category term="Cookie" /><summary type="html"><![CDATA[👀 세션(Session)이란? ☑️ 서버랑 클라이언트와의 관계(상태)를 유지하기 위해서 사용하는 값 HTTP 프로토콜은 상태가 유지되지 않기 때문에 요청에 대한 응답이 한 번씩 이뤄지고 나면 그 관계가 소멸된다. 하지만 이런 방식으로는 사용자가 회원 사이트에 로그인 했을 때 지속적으로 업무를 볼 수 없게 된다. 그래서 사용자가 지속적으로 업무를 볼 수 있도록 서버와 클라이언트간의 관계를 일정 시간동안 유지해주기 위해 쓰는 것이 세션이다. 세션객체(영역)는 브라우저당 1개씩 생성된다.]]></summary></entry><entry><title type="html">JSP 스크립트 요소</title><link href="http://localhost:4000/jsp/JSP-script-elements/" rel="alternate" type="text/html" title="JSP 스크립트 요소" /><published>2022-02-01T00:00:00+09:00</published><updated>2022-02-01T00:00:00+09:00</updated><id>http://localhost:4000/jsp/JSP-script-elements</id><content type="html" xml:base="http://localhost:4000/jsp/JSP-script-elements/"><![CDATA[<h1 id="-jsp-스크립트-요소">👀 JSP 스크립트 요소</h1>
<h2 id="1-선언문">1. 선언문</h2>

<div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;%!</span>
    <span class="c1">// 멤버변수와 메서드 선언</span>
<span class="nt">%&gt;</span>
</code></pre></div></div>

<ul>
  <li>멤버변수와 메서드를 선언하기 위한 영역</li>
  <li>클래스에서 멤버변수와 메서드를 선언한 것과 동일한 결과로 같은 <code class="language-plaintext highlighter-rouge">JSP</code> 페이지 어느 위치에서든 참조가 가능하다.</li>
</ul>

<h2 id="2-스크립틀릿scriptlet">2. 스크립틀릿(Scriptlet)</h2>

<div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;%</span> <span class="n">문장1</span><span class="o">;</span> <span class="nt">%&gt;</span>
<span class="nt">&lt;%</span>
    <span class="n">문장2</span><span class="o">;</span> <span class="n">문장3</span><span class="o">;</span> <span class="n">문장4</span><span class="o">;</span> <span class="o">...</span>
<span class="nt">%&gt;</span>
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">JSP</code> 코드를 작성하는 영역</li>
  <li>서블릿 코드의 작성법이 다소 어려워서 이것을 보완하기 위해 만들어진 방식</li>
  <li>스크립틀릿 영역에서 선언되는 변수들은 지역변수로 인식된다.</li>
  <li><code class="language-plaintext highlighter-rouge">JSP</code> 파일이 실행되면 웹 컨테이너에 의해 <code class="language-plaintext highlighter-rouge">JSP</code> 파일이 파싱되어 서블릿 클래스로 변환된 자바 소스 파일과 클래스 자바 파일이 서버에 저장된다.</li>
</ul>

<h2 id="3-표현식expression">3. 표현식(Expression)</h2>

<div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;%=</span><span class="n">변수</span> <span class="nt">%&gt;</span>
<span class="nt">&lt;%=</span><span class="n">리턴값이</span> <span class="n">있는</span> <span class="n">메소드</span> <span class="nt">%&gt;</span>
<span class="nt">&lt;%=</span><span class="n">수식</span><span class="o">(</span><span class="n">변수</span> <span class="n">또는</span> <span class="n">리턴값이</span> <span class="n">있는</span> <span class="n">메소드를</span> <span class="n">포함할</span> <span class="n">수</span> <span class="n">있음</span><span class="o">)</span> <span class="nt">%&gt;</span>
</code></pre></div></div>

<ul>
  <li>선언문, 스크립틀릿에 생성한 변수, 메소드의 리턴값을 스크립틀릿 태그 외부에서 출력하기 위해 사용</li>
  <li>하나의 표현식 태그 내의 구문 전체가 <code class="language-plaintext highlighter-rouge">print()</code> 메소드의 괄호 안에 통채로 들어가기 때문에 표현식 태그 내부에서는 <code class="language-plaintext highlighter-rouge">세미콜론(;)</code>을 사용해서는 안된다.</li>
</ul>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="JSP" /><category term="JSP" /><category term="WEB" /><summary type="html"><![CDATA[👀 JSP 스크립트 요소 1. 선언문]]></summary></entry><entry><title type="html">JSP 영역 객체와 속성</title><link href="http://localhost:4000/jsp/JSP-scope-attribute/" rel="alternate" type="text/html" title="JSP 영역 객체와 속성" /><published>2022-02-01T00:00:00+09:00</published><updated>2022-02-01T00:00:00+09:00</updated><id>http://localhost:4000/jsp/JSP-scope-attribute</id><content type="html" xml:base="http://localhost:4000/jsp/JSP-scope-attribute/"><![CDATA[<h1 id="-영역-객체scope와-속성attribute">👀 영역 객체(Scope)와 속성(Attribute)</h1>
<ul>
  <li>jsp 내장객체 중에서 특정 공간(Scope)에 정보를 저장하고, 저장된 정보(Attribute)를 공유할 수 있는 객체</li>
  <li><code class="language-plaintext highlighter-rouge">JSP</code>에서는 <code class="language-plaintext highlighter-rouge">page</code>, <code class="language-plaintext highlighter-rouge">request</code>, <code class="language-plaintext highlighter-rouge">session</code>, <code class="language-plaintext highlighter-rouge">application</code> 4가지 영역으로 정의한다.<br /><br />
<img src="../../assets/images/jspScope.png" alt="jspScope" /><br /><br /></li>
</ul>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="JSP" /><category term="JSP" /><category term="WEB" /><summary type="html"><![CDATA[👀 영역 객체(Scope)와 속성(Attribute) jsp 내장객체 중에서 특정 공간(Scope)에 정보를 저장하고, 저장된 정보(Attribute)를 공유할 수 있는 객체 JSP에서는 page, request, session, application 4가지 영역으로 정의한다.]]></summary></entry><entry><title type="html">JSP 내장 객체</title><link href="http://localhost:4000/jsp/JSP-implicit-object/" rel="alternate" type="text/html" title="JSP 내장 객체" /><published>2022-02-01T00:00:00+09:00</published><updated>2022-02-01T00:00:00+09:00</updated><id>http://localhost:4000/jsp/JSP-implicit-object</id><content type="html" xml:base="http://localhost:4000/jsp/JSP-implicit-object/"><![CDATA[<h1 id="-내장-객체란">👀 내장 객체란?</h1>
<ul>
  <li><code class="language-plaintext highlighter-rouge">JSP</code> 페이지가 웹 컨테이너에 의해서 서블릿으로 변환할 때 웹 컨테이너가 자동으로 생성해 주는 객체(<code class="language-plaintext highlighter-rouge">클래스</code>, <code class="language-plaintext highlighter-rouge">import</code> 구분없이 사용 가능)<br /><br /></li>
</ul>

<p>javax.servlet 패키지 - 8개<br /></p>

<table>
  <thead>
    <tr>
      <th>내장 객체 변수명</th>
      <th>설명</th>
      <th> </th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>request</td>
      <td>클라이언트의 <code class="language-plaintext highlighter-rouge">HTTP</code> 요청 정보를 저장한 객체(<code class="language-plaintext highlighter-rouge">HTTP</code>헤더 정보, 파라미터 등)</td>
      <td> </td>
    </tr>
    <tr>
      <td>response</td>
      <td>클라이언트 요청에 대한(<code class="language-plaintext highlighter-rouge">HTTP</code>) 응답 정보를 저장한 객체</td>
      <td> </td>
    </tr>
    <tr>
      <td>session</td>
      <td>클라이언트의 세션 정보를 저장한 객체</td>
      <td> </td>
    </tr>
    <tr>
      <td>pageContext</td>
      <td>페이지 실행에 필요한 컨텍스트 정보를 저장한 객체</td>
      <td> </td>
    </tr>
    <tr>
      <td>out</td>
      <td>응답 페이지 정보를 전송하기 위한 출력 스트림 객체</td>
      <td> </td>
    </tr>
    <tr>
      <td>application</td>
      <td>동일한 애플리케이션의 컨텍스트 정보를 저장한 객체</td>
      <td> </td>
    </tr>
    <tr>
      <td>config</td>
      <td>해당 페이지의 서블릿 설정 정보(초기화 정보)를 저장한 객체</td>
      <td> </td>
    </tr>
    <tr>
      <td>page</td>
      <td>해당 페이지 서블릿 객체(인스턴스)</td>
      <td><br /><br /></td>
    </tr>
  </tbody>
</table>

<p>java.lang 패키지 - 1개<br /></p>
<ul>
  <li>exception : 예외 처리를 위한 객체</li>
</ul>

<h2 id="1-request-객체">1. request 객체</h2>
<ul>
  <li>
    <p>사용자의 요청에 관한 정보를 얻기 위한 객체<br /><br /></p>
  </li>
  <li>서버 도메인명 : <code class="language-plaintext highlighter-rouge">request.getServerName();</code></li>
  <li>서버 포트번호 : <code class="language-plaintext highlighter-rouge">request.getServerPort();</code></li>
  <li>URL : <code class="language-plaintext highlighter-rouge">request.getRequestURL();</code></li>
  <li>URI : <code class="language-plaintext highlighter-rouge">request.getRequestURI();</code></li>
  <li>클라이언트 호스트명 : <code class="language-plaintext highlighter-rouge">request.getRemoteHost();</code></li>
  <li>클라이언트 IP주소 : <code class="language-plaintext highlighter-rouge">request.getRemoteAddr();</code></li>
  <li>프로토콜 : <code class="language-plaintext highlighter-rouge">request.getProtocol();</code></li>
  <li>페이지 요청(전송)방식 : <code class="language-plaintext highlighter-rouge">request.getMethod();</code></li>
  <li>프로젝트 경로 : <code class="language-plaintext highlighter-rouge">request.getContextPath();</code></li>
  <li>물리적 경로 : <code class="language-plaintext highlighter-rouge">request.getRealPath("/");</code></li>
  <li>http헤더 (user-agent): <code class="language-plaintext highlighter-rouge">request.getHeader("user-agent");</code></li>
  <li>http헤더 (accept-language) : <code class="language-plaintext highlighter-rouge">request.getHeader("accept-language");</code></li>
  <li>http헤더 (host) : <code class="language-plaintext highlighter-rouge">request.getHeader("host");</code></li>
  <li>
    <p>http헤더 (connection) : <code class="language-plaintext highlighter-rouge">request.getHeader("connection");</code></p>
  </li>
  <li>전송을 통해 다른 페이지에서 전달받은 (이름 등의)정보를 얻을 때</li>
</ul>

<div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>String name = request.getParameter("name");
</code></pre></div></div>
<p><br /></p>

<ul>
  <li>정보들을 배열로 얻을 때</li>
</ul>

<div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>String hobbies[] = request.getParameterValues("hobby");
</code></pre></div></div>

<h3 id="-uri">🔸 URI</h3>
<ul>
  <li>URI는 특정 리소스를 식별하는 <code class="language-plaintext highlighter-rouge">통합 자원 식별자(Uniform Resource Identifier)</code>를 의미한다.</li>
  <li>웹 기술에서 사용하는 논리적 또는 물리적 리소스를 식별하는 고유한 문자열 시퀀스다.</li>
</ul>

<h3 id="-url">🔸 URL</h3>
<ul>
  <li>URL은 흔히 웹 주소라고도 하며, 컴퓨터 네트워크 상에서 리소스가 어디 있는지 알려주기 위한 규약이다. URI의 서브셋이다.</li>
  <li>한마디로 URI가 자원 자체에 대한 고유 식별자라면 URL은 자원이 실제로 존재하는 위치를 가리킨다. <br /><br />
<img src="../../assets/images/uri-url.png" alt="uri-url" /><br /><br /></li>
</ul>

<h2 id="2-response-객체">2. response 객체</h2>
<ul>
  <li>
    <p>클라이언트의 요청에 대한 <code class="language-plaintext highlighter-rouge">HTTP</code> 응답(HTTP Response)을 나타내는 객체<br /><br /></p>
  </li>
  <li>
    <p>response.setHeader(“헤더이름”, 값);</p>
  </li>
</ul>

<div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>response.addHeader("Refresh", "3"); // 3초에 한번씩 새로고침
response.addHeader("Refresh", "3;url=http://www.naver.co.kr"); // 3초 후에 다음 페이지로 이동
</code></pre></div></div>

<ul>
  <li>response.sendRedirect(“주소”); // “주소”로 요청 재전송</li>
</ul>

<div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>response.sendRedirect("http://www.naver.co.kr"); // 해당 페이지로 바로 이동
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">response.setContentType("속성값"); 컨텐츠 타입 지정</code></li>
  <li><code class="language-plaintext highlighter-rouge">response.addCookie("쿠키값"); 쿠키 추가</code></li>
</ul>

<h2 id="3-session-객체">3. session 객체</h2>
<ul>
  <li>
    <p>클라이언트의 정보가 유지되어야 할 필요가 있는 경우를 위해 가상 연결을 구현해주는 세션<br /><br /></p>
  </li>
  <li>세션ID값 : <code class="language-plaintext highlighter-rouge">session.getId();</code></li>
  <li>세션생성시간 정보(ms) : <code class="language-plaintext highlighter-rouge">session.getCreationTime();</code></li>
  <li>최종 접속 시간(ms) : <code class="language-plaintext highlighter-rouge">session.getLastAccessedTime();</code></li>
  <li>세션 유지시간(기본)(1800s,30m) : <code class="language-plaintext highlighter-rouge">session.getMaxInactiveInterval();</code><br /></li>
</ul>

<h2 id="4-application-객체">4. application 객체</h2>
<ul>
  <li>
    <p>해당 웹 애플리케이션의 실행 환경을 제공하는 서버의 정보와 서버측 자원에 대한 정보를 얻어내거나 해당 애플리케이션의 이벤트 로그를 다루는 메소드들을 제공<br /><br /></p>
  </li>
  <li>서버정보 : <code class="language-plaintext highlighter-rouge">application.getServerInfo();</code></li>
  <li>서버의 물리적 경로 : <code class="language-plaintext highlighter-rouge">application.getRealPath("/");</code></li>
</ul>

<h2 id="5-out-객체">5. out 객체</h2>
<ul>
  <li>서블릿/JSP 컨테이너가 응답 페이지를 만들기 위해 사용하는 출력 스트림 객체</li>
  <li>
    <p>하지만 표현식을 사용해서 자바 코드의 변수 값들과 메소드의 리턴 값들을 출력할 수 있기 때문에 잘 사용되지 않는다.<br /><br /></p>
  </li>
  <li>출력 : <code class="language-plaintext highlighter-rouge">out.print("Hello");</code></li>
  <li>버퍼 사이즈 : <code class="language-plaintext highlighter-rouge">&lt;%=out.getBufferSize() %&gt;byte&lt;br&gt;</code></li>
  <li>버퍼 사용후 : <code class="language-plaintext highlighter-rouge">&lt;%=out.getRemaining() %&gt;byte&lt;br&gt;</code></li>
</ul>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="JSP" /><category term="JSP" /><category term="WEB" /><summary type="html"><![CDATA[👀 내장 객체란? JSP 페이지가 웹 컨테이너에 의해서 서블릿으로 변환할 때 웹 컨테이너가 자동으로 생성해 주는 객체(클래스, import 구분없이 사용 가능)]]></summary></entry><entry><title type="html">CSS 기초</title><link href="http://localhost:4000/html/CSS-beginning/" rel="alternate" type="text/html" title="CSS 기초" /><published>2022-02-01T00:00:00+09:00</published><updated>2022-02-01T00:00:00+09:00</updated><id>http://localhost:4000/html/CSS-beginning</id><content type="html" xml:base="http://localhost:4000/html/CSS-beginning/"><![CDATA[<h1 id="-css란">👀 CSS란?</h1>
<ul>
  <li><code class="language-plaintext highlighter-rouge">Cascading Style Sheets</code>의 약자로 <code class="language-plaintext highlighter-rouge">HTML</code>로 만든 웹 문서 뼈대에 디자인을 적용하기 위한 것</li>
</ul>

<h2 id="-적용-방법">🔸 적용 방법</h2>
<ol>
  <li>태그에 바로 스타일 적용 - 잘 안씀<br /></li>
  <li><code class="language-plaintext highlighter-rouge">head</code> 안에서 스타일 적용<br /></li>
  <li>외부파일로 스타일 적용<br /><br /><br /></li>
</ol>

<h1 id="-기본-문법">👀 기본 문법</h1>
<div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">태그</span> <span class="nt">대상</span>
<span class="p">{</span>
    <span class="py">속성</span><span class="p">:</span> <span class="n">값</span><span class="p">;</span>
    <span class="py">속성</span><span class="p">:</span> <span class="n">값</span><span class="p">;</span> <span class="err">...</span>
<span class="p">}</span>

<span class="o">*</span>
<span class="p">{</span>
    <span class="err">HTML</span> <span class="err">내용</span> <span class="err">전체</span> <span class="err">선택</span>
<span class="p">}</span>

<span class="nt">h2</span>
<span class="p">{</span>
    <span class="nl">color</span><span class="p">:</span> <span class="no">blue</span><span class="p">;</span>
    <span class="nl">background-color</span><span class="p">:</span> <span class="no">skyblue</span><span class="p">;</span>
    <span class="err">모든</span> <span class="err">h2</span> <span class="err">태그에</span> <span class="err">적용</span>
<span class="p">}</span> 

<span class="nf">#p1</span>
<span class="p">{</span>
    <span class="err">id="p1"</span> <span class="err">인</span> <span class="err">id</span> <span class="err">모두</span> <span class="err">선택</span>
<span class="p">}</span>

<span class="nc">.p2</span>
<span class="p">{</span>
    <span class="err">class="p2"</span> <span class="err">인</span> <span class="err">class</span> <span class="err">모두</span> <span class="err">선택</span>
<span class="p">}</span>

<span class="nf">#footer</span> <span class="nt">p</span>
<span class="p">{</span>
    <span class="err">footer</span> <span class="err">안에</span> <span class="err">있는</span> <span class="err">p</span> <span class="err">태그에만</span> <span class="err">적용</span>
<span class="p">}</span>

<span class="c">/* 하이퍼링크 태그에만 부분적으로 적용하는 것도 가능하다 */</span>
<span class="nt">a</span><span class="nd">:link</span><span class="o">,</span> <span class="nt">a</span><span class="nd">:visited</span>
<span class="p">{</span>
	<span class="c">/* 하이퍼링크색, 방문한 하이퍼링크색 변경 */</span>
	<span class="nl">color</span><span class="p">:</span> <span class="no">black</span><span class="p">;</span>
<span class="p">}</span>

<span class="nt">a</span><span class="nd">:hover</span>
<span class="p">{</span>
	<span class="c">/* 하이퍼링크에 마우스를 올리면 */</span>
	<span class="nl">color</span><span class="p">:</span> <span class="no">white</span><span class="p">;</span>
	<span class="nl">background-color</span><span class="p">:</span> <span class="no">black</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">&lt;p id="p1"&gt;</code>, <code class="language-plaintext highlighter-rouge">&lt;span class="p2"&gt;</code> 와 같이 지정하며 <code class="language-plaintext highlighter-rouge">id</code>는 넓은 영역을 지정할 때 주로 사용하고 <code class="language-plaintext highlighter-rouge">class</code>는 좁은 영역을 지정할 때 주로 사용한다고 한다.
<br /><br /></li>
</ul>

<h1 id="-css-꾸미기-속성들">👀 CSS 꾸미기 속성들</h1>

<div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">p</span>
<span class="p">{</span>
	<span class="c">/* 배치 */</span>
	<span class="nl">display</span><span class="p">:</span> <span class="nb">block</span><span class="p">;</span> <span class="err">전체영역(문단영역)</span> <span class="err">:</span> <span class="err">블록레벨</span>
	<span class="nl">display</span><span class="p">:</span> <span class="nb">inline</span><span class="p">;</span> <span class="py">요소영역</span> <span class="p">:</span> <span class="n">인라인</span> <span class="n">레벨</span><span class="p">(</span><span class="n">가로로</span> <span class="n">붙음</span><span class="p">)</span>
	<span class="n">display</span><span class="p">:</span> <span class="n">inline-block</span><span class="p">;</span> <span class="err">메뉴</span> <span class="err">만들땐</span> <span class="err">인라인</span> <span class="err">블록이</span> <span class="err">편하다</span>
	<span class="nl">display</span><span class="p">:</span> <span class="n">inline-block</span><span class="p">;</span>
    
	<span class="c">/* 박스크기 계산 box-sizing */</span>
    <span class="c">/* 웹 페이지의 내용물들을 배치할 때 박스크기 계산한 것을 바탕으로 배치하는 것이 좋다 */</span>
	<span class="nl">box-sizing</span><span class="p">:</span> <span class="n">border-box</span><span class="p">;</span> <span class="err">내용</span> <span class="err">안여백</span> <span class="err">테두리선</span> <span class="err">포함해서</span> <span class="err">크기</span> <span class="err">계산</span>
	<span class="nl">box-sizing</span><span class="p">:</span> <span class="n">content-box</span><span class="p">;</span> <span class="err">내용(기본값)물만</span> <span class="err">포함해서</span> <span class="err">크기</span> <span class="err">계산</span>
    
	<span class="c">/* 너비 */</span>
	<span class="nl">width</span><span class="p">:</span> <span class="m">600px</span><span class="p">;</span>
	
	<span class="c">/* 높이 */</span>
	<span class="nl">height</span><span class="p">:</span> <span class="m">50%</span><span class="p">;</span>
 
    <span class="c">/* 안 여백 10px */</span>
	<span class="nl">padding</span><span class="p">:</span> <span class="m">10px</span><span class="p">;</span>
	
	<span class="c">/* 밖 여백 */</span>
	<span class="nl">margin</span><span class="p">:</span> <span class="m">50px</span><span class="p">;</span>
    
	<span class="c">/* 배경색 */</span>
	<span class="nl">background-color</span><span class="p">:</span> <span class="no">silver</span><span class="p">;</span>
	<span class="nl">background-color</span><span class="p">:</span> <span class="m">#0000ff</span><span class="p">;</span>
	<span class="nl">background-color</span><span class="p">:</span> <span class="nb">rgb</span><span class="p">(</span><span class="m">255</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">);</span>
    
    <span class="nl">color</span><span class="p">:</span> <span class="n">rgba</span><span class="p">(</span><span class="m">255</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">0.5</span><span class="p">);</span>
    <span class="nl">color</span><span class="p">:</span> <span class="m">#ff0000</span><span class="p">;</span>
    
    <span class="nl">font-family</span><span class="p">:</span> <span class="s1">"바탕"</span><span class="p">;</span>
    
    <span class="nl">font-size</span><span class="p">:</span> <span class="m">20px</span><span class="p">;</span>
    <span class="nl">font-size</span><span class="p">:</span> <span class="m">3em</span><span class="p">;</span>
    <span class="c">/* 절대크기(지정된 크기) : 상대크기(상대적인 글자크기) */</span>
    <span class="c">/* 포인트 pt, 픽셀 px, em 대문자를 기준으로 비율값 적용, rem 1em 비율값 적용, ex 소문자를 기준으로 적용 */</span>
    
    <span class="nl">font-style</span><span class="p">:</span> <span class="nb">italic</span><span class="p">;</span>
    
    <span class="nl">font-weight</span><span class="p">:</span> <span class="nb">bold</span><span class="p">;</span>
    
    <span class="c">/* 글자 가운데 정렬 */</span>
    <span class="nl">text-align</span><span class="p">:</span> <span class="nb">center</span><span class="p">;</span>
    
    <span class="nl">line-height</span><span class="p">:</span> <span class="m">100%</span><span class="p">;</span>
    
    <span class="nl">text-decoration</span><span class="p">:</span> <span class="nb">overline</span><span class="p">;</span>
    
    <span class="c">/* 그림자 효과 */</span>
    <span class="nl">text-shadow</span><span class="p">:</span> <span class="m">5px</span> <span class="m">5px</span> <span class="m">3px</span> <span class="no">black</span><span class="p">;</span> 
    
    <span class="c">/* 글자 하나사이 간격*/</span>
    <span class="nl">letter-spacing</span><span class="p">:</span> <span class="m">0.5em</span><span class="p">;</span> 
    
    <span class="c">/* 단어 사이 간격 */</span>
    <span class="nl">word-spacing</span><span class="p">:</span> <span class="m">50px</span><span class="p">;</span> 
    
    <span class="c">/* 목록 들여쓰기 내어쓰기 inside/outside */</span>
    <span class="nl">list-style-position</span><span class="p">:</span> <span class="nb">outside</span><span class="p">;</span>
    
    <span class="c">/* 목록 점(불릿) 대신 이미지 사용 */</span>
    <span class="nl">list-style-image</span><span class="p">:</span> <span class="sx">url("1.jpeg")</span><span class="p">;</span>
    
    <span class="c">/* 표 제목 위치 지정 caption-side: top/bottom; */</span>
	<span class="nl">caption-side</span><span class="p">:</span> <span class="nb">top</span><span class="p">;</span>
    
	<span class="c">/* 표 테두리선 그려주기 border: 테두리선 두께 테두리선 모양 테두리선 색 */</span>
	<span class="nl">border</span><span class="p">:</span> <span class="m">1px</span> <span class="nb">solid</span> <span class="no">black</span><span class="p">;</span>
    <span class="nl">border-style</span><span class="p">:</span> <span class="nb">dotted</span><span class="p">;</span>
	<span class="nl">border-color</span><span class="p">:</span> <span class="no">blue</span><span class="p">;</span>
    
	<span class="c">/* 셀(칸) 사이에 여백 */</span>
	<span class="nl">border-spacing</span><span class="p">:</span> <span class="m">10px</span><span class="p">;</span>
	
	<span class="c">/* 표와 셀 테두리 합치기 */</span>
	<span class="nl">border-collapse</span><span class="p">:</span> <span class="nb">collapse</span><span class="p">;</span>
    
    <span class="c">/* 모서리 둥글게 */</span>
	<span class="nl">border-radius</span><span class="p">:</span> <span class="m">50%</span><span class="p">;</span>
    
    <span class="c">/* 박스 그림자 (12시부터 시계방향으로) 색상 */</span>
	<span class="nl">box-shadow</span><span class="p">:</span> <span class="m">5px</span> <span class="m">5px</span> <span class="m">15px</span> <span class="m">5px</span> <span class="no">green</span><span class="p">;</span>
 
	<span class="c">/* 어울림 배치하는 법 */</span>
	<span class="nl">float</span><span class="p">:</span> <span class="nb">left</span><span class="p">;</span> <span class="c">/* 이미지를 왼쪽으로 기준으로 글자 어울림 배치 */</span>
	<span class="nl">float</span><span class="p">:</span> <span class="nb">right</span><span class="p">;</span> <span class="c">/* 이미지 오른쪽으로 기준으로 글자 어울림 배치 */</span>
 
	<span class="c">/* 어울림 배치 해제 */</span>
	<span class="c">/* 아까 설정한 방향 중 해제하고 싶은 방향을 입력해줌 */</span>
	<span class="nl">clear</span><span class="p">:</span> <span class="nb">left</span><span class="p">;</span>
	<span class="nl">clear</span><span class="p">:</span> <span class="nb">right</span><span class="p">;</span>
	<span class="nl">clear</span><span class="p">:</span> <span class="nb">both</span><span class="p">;</span>  
    
    <span class="c">/* 배경 이미지 삽입 */</span>
	<span class="c">/* 이미지 태그에서 안보이면 스타일시트에서 이미지를 넣은 것이다. */</span>
	<span class="nl">background-image</span><span class="p">:</span> <span class="sx">url("dot.png")</span><span class="p">;</span>
	<span class="nl">background-repeat</span><span class="p">:</span> <span class="nb">repeat</span><span class="p">;</span> <span class="c">/* 이미지 바둑판 모양으로 반복 */</span>
	<span class="nl">background-repeat</span><span class="p">:</span> <span class="nb">repeat-x</span><span class="p">;</span> <span class="c">/* x축만 반복 */</span>
	<span class="nl">background-repeat</span><span class="p">:</span> <span class="nb">repeat-y</span><span class="p">;</span> <span class="c">/* y축만 반복 */</span>
	<span class="nl">background-repeat</span><span class="p">:</span> <span class="nb">no-repeat</span><span class="p">;</span> <span class="c">/* 반복 안함 */</span> 
	<span class="nl">background-position</span><span class="p">:</span> <span class="nb">center</span><span class="p">;</span> <span class="c">/* 문단 가운데로 정렬 */</span>
	<span class="nl">background-position</span><span class="p">:</span> <span class="nb">bottom</span> <span class="nb">right</span><span class="p">;</span> <span class="c">/* 두개 넣으면 오른쪽 아래와 같이 정렬됨 */</span>
	<span class="nl">background-position</span><span class="p">:</span> <span class="nb">top</span> <span class="nb">left</span><span class="p">;</span>
	<span class="nl">background-size</span><span class="p">:</span> <span class="m">50px</span> <span class="m">50px</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>
<p><br /></p>

<h2 id="️-css-꾸미기-시작은">☑️ CSS 꾸미기 시작은</h2>
<div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">*</span>
<span class="p">{</span>
	<span class="c">/* body 영역엔 기본적인 여백이 조금씩 있는데 이걸 다 0으로 만들고 시작한다. */</span>
	<span class="nl">margin</span><span class="p">:</span> <span class="m">0px</span><span class="p">;</span>
	<span class="nl">padding</span><span class="p">:</span> <span class="m">0px</span><span class="p">;</span>
	
	<span class="c">/* 테두리포함 너비 계산하기 */</span>
	<span class="nl">box-sizing</span><span class="p">:</span> <span class="n">border-box</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<ul>
  <li>위와 같이 초기화하고 시작하는 것이 좋다.</li>
</ul>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="HTML" /><category term="HTML" /><category term="Front-end" /><category term="CSS" /><summary type="html"><![CDATA[👀 CSS란? Cascading Style Sheets의 약자로 HTML로 만든 웹 문서 뼈대에 디자인을 적용하기 위한 것]]></summary></entry></feed>