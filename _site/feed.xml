<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2022-04-04T09:57:50+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Yujin Dev Log</title><subtitle>개발 공부하는 블로그</subtitle><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><entry><title type="html">JAVA Servlet 프로젝트) Cafe(웹 사이트) 만들기 23 - 댓글 달기 기능 추가</title><link href="http://localhost:4000/project%20log/cafe-project-23/" rel="alternate" type="text/html" title="JAVA Servlet 프로젝트) Cafe(웹 사이트) 만들기 23 - 댓글 달기 기능 추가" /><published>2022-04-04T00:00:00+09:00</published><updated>2022-04-04T00:00:00+09:00</updated><id>http://localhost:4000/project%20log/cafe-project-23</id><content type="html" xml:base="http://localhost:4000/project%20log/cafe-project-23/"><![CDATA[<h1 id="개발환경">개발환경</h1>
<ul>
  <li>MacBook Air (M1, 2020)</li>
  <li>OpenJDK 8</li>
  <li>Eclipse 2021-12</li>
  <li>tomcat 8.5</li>
  <li>MySQL Workbench 8.0.19<br /><br /><br /></li>
</ul>

<h1 id="시작">시작</h1>
<ul>
  <li>2022.3.4 ~ <br /><br /><br /></li>
</ul>

<h1 id="주제">주제</h1>
<ul>
  <li>웹 백엔드 수업 중 중간 과제로 개인 프로젝트를 진행하게 되었다.</li>
  <li>회원가입/로그인/탈퇴 등 기본적인 회원관리 시스템을 가진 웹 사이트를 만드는 것이다. 주어진 기한은 <code class="language-plaintext highlighter-rouge">한 달</code></li>
  <li>나는 <code class="language-plaintext highlighter-rouge">다음 카페</code>를 소규모로 만들어 보기로 했다. 평소 자주 이용하기도 했고 과제의 평가 기준에서 요구하는 기능들을 다 담고 있기도 했기 때문에 이번 기회에 구현해 보면 그동안 배운 것들을 활용하기에 좋을 거 같았다.</li>
  <li>평가 기준에 사이트의 디자인 구현(HTML/CSS 등 프론트엔드)은 포함되지 않기 때문에 본인이 쓰고 싶은 HTML/CSS 템플릿을 구한 뒤 회원 관리 기능을 구현하면 된다.<br /><br /><br /></li>
</ul>

<h1 id="진행상황-1">진행상황 1</h1>
<ul>
  <li>게시글에 달린 댓글을 볼 수 있는 기능을 추가했다.</li>
</ul>

<h2 id="boardlistjsp">boardList.jsp</h2>

<div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;tbody&gt;</span>
<span class="nt">&lt;%</span>
    <span class="k">if</span> <span class="o">(</span><span class="kc">null</span> <span class="o">!=</span> <span class="n">postList</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">postList</span><span class="o">.</span><span class="na">size</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span> 
        <span class="o">{</span>
            <span class="nc">BoardDTO</span> <span class="n">dto</span> <span class="o">=</span> <span class="n">postList</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
<span class="nt">%&gt;</span>
  <span class="nt">&lt;tr&gt;</span>
    <span class="nt">&lt;th</span> <span class="na">scope=</span><span class="s">"row"</span><span class="nt">&gt;&lt;%=</span><span class="n">dto</span><span class="o">.</span><span class="na">getNum</span><span class="o">()</span> <span class="nt">%&gt;&lt;/th&gt;</span>
    <span class="nt">&lt;td&gt;</span>
<span class="nt">&lt;%</span>
            <span class="kt">int</span> <span class="n">width</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
            <span class="k">if</span> <span class="o">(</span><span class="mi">0</span> <span class="o">&lt;</span> <span class="n">dto</span><span class="o">.</span><span class="na">getRe_lev</span><span class="o">())</span> <span class="c1">// 답글일 때</span>
            <span class="o">{</span>
                <span class="n">width</span> <span class="o">=</span> <span class="mi">10</span> <span class="o">*</span> <span class="n">dto</span><span class="o">.</span><span class="na">getRe_lev</span><span class="o">();</span>
<span class="nt">%&gt;</span>
      <span class="nt">&lt;img</span> <span class="na">class=</span><span class="s">"reImg"</span> <span class="na">src=</span><span class="s">"./contents/level.gif"</span> <span class="na">width=</span><span class="s">"</span><span class="nt">&lt;%=</span><span class="n">width</span><span class="nt">%&gt;</span><span class="s">"</span> <span class="na">height=</span><span class="s">"15"</span><span class="nt">&gt;</span>
      <span class="nt">&lt;img</span> <span class="na">class=</span><span class="s">"reImg"</span> <span class="na">src=</span><span class="s">"./contents/re.gif"</span><span class="nt">&gt;</span>
<span class="nt">&lt;%</span>
            <span class="o">}</span>
<span class="nt">%&gt;</span>
      <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"./BoardContent.bo?num=</span><span class="nt">&lt;%=</span><span class="n">dto</span><span class="o">.</span><span class="na">getNum</span><span class="o">()</span><span class="nt">%&gt;</span><span class="s">&amp;pageNum=</span><span class="nt">&lt;%=</span><span class="n">pageNum</span><span class="nt">%&gt;</span><span class="s">"</span><span class="nt">&gt;&lt;%=</span><span class="n">dto</span><span class="o">.</span><span class="na">getTitle</span><span class="o">()</span> <span class="nt">%&gt;</span> (<span class="nt">&lt;%=</span><span class="n">dto</span><span class="o">.</span><span class="na">getComment_count</span><span class="o">()</span> <span class="nt">%&gt;</span>)<span class="nt">&lt;/a&gt;</span>
    <span class="nt">&lt;/td&gt;</span>
    <span class="nt">&lt;td&gt;&lt;%=</span><span class="n">dto</span><span class="o">.</span><span class="na">getId</span><span class="o">()</span> <span class="nt">%&gt;&lt;/td&gt;</span>
    <span class="nt">&lt;td&gt;&lt;%=</span><span class="n">dto</span><span class="o">.</span><span class="na">getDate</span><span class="o">()</span> <span class="nt">%&gt;&lt;/td&gt;</span>
    <span class="nt">&lt;td&gt;&lt;%=</span><span class="n">dto</span><span class="o">.</span><span class="na">getReadcount</span><span class="o">()</span> <span class="nt">%&gt;&lt;/td&gt;</span>
  <span class="nt">&lt;/tr&gt;</span>
<span class="nt">&lt;%</span><span class="o">}}</span> <span class="nt">%&gt;</span>
<span class="nt">&lt;/tbody&gt;</span>
</code></pre></div></div>

<ul>
  <li>게시글 목록에서 댓글이 달린 갯수를 확인할 수 있게 수정했다.</li>
</ul>

<h2 id="boarddaojava---getpostliststartrow-pagesize">BoardDAO.java - getPostList(startRow, pageSize)</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">BoardDTO</span><span class="o">&gt;</span> <span class="nf">getPostList</span><span class="o">(</span><span class="kt">int</span> <span class="n">startRow</span><span class="o">,</span> <span class="kt">int</span> <span class="n">pageSize</span><span class="o">)</span>
<span class="o">{</span>
    <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">BoardDTO</span><span class="o">&gt;</span> <span class="n">postList</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">BoardDTO</span><span class="o">&gt;();</span>
		
    <span class="k">try</span> <span class="o">{</span>
        <span class="n">con</span> <span class="o">=</span> <span class="n">getCon</span><span class="o">();</span>
			
        <span class="c1">// 글 자르기 : limit 시작행-1, 갯수</span>
        <span class="c1">// 시작행-1부터 x개 만큼 가져온다.</span>
        <span class="c1">// 정렬 : re_ref(내림차순) / re_seq(오름차순)</span>
        <span class="n">sql</span> <span class="o">=</span> <span class="s">"select * from cafe_board order by re_ref desc, re_seq asc limit ?,?"</span><span class="o">;</span>
        <span class="n">pstmt</span> <span class="o">=</span> <span class="n">con</span><span class="o">.</span><span class="na">prepareStatement</span><span class="o">(</span><span class="n">sql</span><span class="o">);</span>
			
        <span class="n">pstmt</span><span class="o">.</span><span class="na">setInt</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="n">startRow</span> <span class="o">-</span> <span class="mi">1</span><span class="o">);</span> <span class="c1">// 시작행 - 1</span>
        <span class="n">pstmt</span><span class="o">.</span><span class="na">setInt</span><span class="o">(</span><span class="mi">2</span><span class="o">,</span> <span class="n">pageSize</span><span class="o">);</span> <span class="c1">// 갯수</span>
			
        <span class="n">rs</span> <span class="o">=</span> <span class="n">pstmt</span><span class="o">.</span><span class="na">executeQuery</span><span class="o">();</span>
			
        <span class="k">while</span> <span class="o">(</span><span class="n">rs</span><span class="o">.</span><span class="na">next</span><span class="o">())</span>
        <span class="o">{</span>
            <span class="c1">// 글 1개의 정보(dto)에 저장한 후 배열에 저장</span>
            <span class="nc">BoardDTO</span> <span class="n">dto</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BoardDTO</span><span class="o">();</span>
				
            <span class="n">dto</span><span class="o">.</span><span class="na">setContent</span><span class="o">(</span><span class="n">rs</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="s">"content"</span><span class="o">));</span>
            <span class="n">dto</span><span class="o">.</span><span class="na">setDate</span><span class="o">(</span><span class="n">rs</span><span class="o">.</span><span class="na">getDate</span><span class="o">(</span><span class="s">"date"</span><span class="o">));</span>
            <span class="n">dto</span><span class="o">.</span><span class="na">setFile</span><span class="o">(</span><span class="n">rs</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="s">"file"</span><span class="o">));</span>
            <span class="n">dto</span><span class="o">.</span><span class="na">setId</span><span class="o">(</span><span class="n">rs</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="s">"id"</span><span class="o">));</span>
            <span class="n">dto</span><span class="o">.</span><span class="na">setIp</span><span class="o">(</span><span class="n">rs</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="s">"ip"</span><span class="o">));</span>
            <span class="n">dto</span><span class="o">.</span><span class="na">setNum</span><span class="o">(</span><span class="n">rs</span><span class="o">.</span><span class="na">getInt</span><span class="o">(</span><span class="s">"num"</span><span class="o">));</span>
            <span class="n">dto</span><span class="o">.</span><span class="na">setRe_lev</span><span class="o">(</span><span class="n">rs</span><span class="o">.</span><span class="na">getInt</span><span class="o">(</span><span class="s">"re_lev"</span><span class="o">));</span>
            <span class="n">dto</span><span class="o">.</span><span class="na">setRe_ref</span><span class="o">(</span><span class="n">rs</span><span class="o">.</span><span class="na">getInt</span><span class="o">(</span><span class="s">"re_ref"</span><span class="o">));</span>
            <span class="n">dto</span><span class="o">.</span><span class="na">setRe_seq</span><span class="o">(</span><span class="n">rs</span><span class="o">.</span><span class="na">getInt</span><span class="o">(</span><span class="s">"re_seq"</span><span class="o">));</span>
            <span class="n">dto</span><span class="o">.</span><span class="na">setReadcount</span><span class="o">(</span><span class="n">rs</span><span class="o">.</span><span class="na">getInt</span><span class="o">(</span><span class="s">"readcount"</span><span class="o">));</span>
            <span class="n">dto</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="n">rs</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="s">"title"</span><span class="o">));</span>
            <span class="n">dto</span><span class="o">.</span><span class="na">setComment_count</span><span class="o">(</span><span class="n">rs</span><span class="o">.</span><span class="na">getInt</span><span class="o">(</span><span class="s">"comment_count"</span><span class="o">));</span>
				
            <span class="n">postList</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">dto</span><span class="o">);</span>
        <span class="o">}</span>
			
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"DAO : 글 정보 저장 완료"</span><span class="o">);</span>
    <span class="o">}</span>
    <span class="k">catch</span> <span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
    <span class="o">}</span>
    <span class="k">finally</span> <span class="o">{</span>
        <span class="n">closeDB</span><span class="o">();</span>
    <span class="o">}</span>
		
    <span class="k">return</span> <span class="n">postList</span><span class="o">;</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>게시글 목록을 불러올 때 댓글의 갯수도 함께 저장하도록 수정했다.</li>
  <li>물론 테이블에도 댓글 갯수 컬럼을 추가했다.</li>
</ul>

<p align="center"><img src="../../assets/images/boardListComment.png" /></p>

<h2 id="boardcontentjsp">boardContent.jsp</h2>

<div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;%</span>
    <span class="nc">String</span> <span class="n">id</span> <span class="o">=</span> <span class="o">(</span><span class="nc">String</span><span class="o">)</span><span class="n">session</span><span class="o">.</span><span class="na">getAttribute</span><span class="o">(</span><span class="s">"id"</span><span class="o">);</span>
	
    <span class="kt">boolean</span> <span class="n">isLogin</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
    <span class="k">if</span> <span class="o">(</span><span class="kc">null</span> <span class="o">==</span> <span class="n">id</span><span class="o">)</span> <span class="n">isLogin</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
    <span class="k">else</span> <span class="n">isLogin</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
	
    <span class="nc">BoardDTO</span> <span class="n">dto</span> <span class="o">=</span> <span class="o">(</span><span class="nc">BoardDTO</span><span class="o">)</span><span class="n">request</span><span class="o">.</span><span class="na">getAttribute</span><span class="o">(</span><span class="s">"dto"</span><span class="o">);</span>
    <span class="nc">String</span> <span class="n">pageNum</span> <span class="o">=</span> <span class="o">(</span><span class="nc">String</span><span class="o">)</span><span class="n">request</span><span class="o">.</span><span class="na">getAttribute</span><span class="o">(</span><span class="s">"pageNum"</span><span class="o">);</span>
    <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">CommentDTO</span><span class="err">&gt;</span> <span class="n">coList</span> <span class="o">=</span> <span class="o">(</span><span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">CommentDTO</span><span class="err">&gt;</span><span class="o">)</span><span class="n">request</span><span class="o">.</span><span class="na">getAttribute</span><span class="o">(</span><span class="s">"coList"</span><span class="o">);</span>
<span class="nt">%&gt;</span>

<span class="c">&lt;!-- 게시글 본문 영역 --&gt;</span>

<span class="c">&lt;!-- 댓글 영역 --&gt;</span>  
<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"comments"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;h3&gt;</span>댓글<span class="nt">&lt;/h3&gt;</span>
  <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"hidden"</span> <span class="na">id=</span><span class="s">"postNum"</span> <span class="na">value=</span><span class="s">"</span><span class="nt">&lt;%=</span><span class="n">dto</span><span class="o">.</span><span class="na">getNum</span><span class="o">()</span><span class="nt">%&gt;</span><span class="s">"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;p&gt;</span>
    <span class="nt">&lt;%</span><span class="k">if</span> <span class="o">(!</span><span class="n">coList</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">())</span> <span class="o">{</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">coList</span><span class="o">.</span><span class="na">size</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span> 
            <span class="nc">CommentDTO</span> <span class="n">coDto</span> <span class="o">=</span> <span class="n">coList</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">);</span> <span class="nt">%&gt;</span>
    <span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">"comId"</span><span class="nt">&gt;</span>
      <span class="nt">&lt;%=</span><span class="n">coDto</span><span class="o">.</span><span class="na">getId</span><span class="o">()</span> <span class="nt">%&gt;</span><span class="ni">&amp;nbsp;</span>		
    <span class="nt">&lt;/span&gt;</span>
    <span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">"comDate"</span><span class="nt">&gt;</span>
      <span class="nt">&lt;%=</span><span class="n">coDto</span><span class="o">.</span><span class="na">getCommentedDate</span><span class="o">()</span> <span class="nt">%&gt;</span><span class="ni">&amp;nbsp;</span>
    <span class="nt">&lt;/span&gt;</span>
    <span class="nt">&lt;span&gt;</span>
      <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"#"</span><span class="nt">&gt;</span>수정<span class="ni">&amp;nbsp;</span><span class="nt">&lt;/a&gt;</span>
    <span class="nt">&lt;/span&gt;</span>
    <span class="nt">&lt;span&gt;</span>
      <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"#"</span><span class="nt">&gt;</span>삭제<span class="ni">&amp;nbsp;</span><span class="nt">&lt;/a&gt;</span>
    <span class="nt">&lt;/span&gt;</span>
  <span class="nt">&lt;/p&gt;</span>
  <span class="nt">&lt;p</span> <span class="na">class=</span><span class="s">"comContent"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;%=</span><span class="n">coDto</span><span class="o">.</span><span class="na">getContent</span><span class="o">()</span> <span class="nt">%&gt;</span>
  <span class="nt">&lt;/p&gt;&lt;br&gt;</span>
  <span class="nt">&lt;%</span> <span class="o">}}</span> <span class="nt">%&gt;</span>
<span class="nt">&lt;/div&gt;</span>
<span class="c">&lt;!-- 댓글 영역 --&gt;</span>

<span class="c">&lt;!-- 하단 버튼 영역 --&gt;</span>
</code></pre></div></div>

<ul>
  <li>게시글 본문 페이지에 작성된 댓글들을 볼 수 있는 공간을 추가했다.</li>
  <li>게시글 본문을 불러오는 서블릿에서 댓글 목록도 함께 불러와서 출력한다.</li>
</ul>

<h2 id="boardcontentactionjava">BoardContentAction.java</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.project.cafe.board.action</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletRequest</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletResponse</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">com.project.cafe.action.Action</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.project.cafe.action.ActionForward</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.project.cafe.board.db.BoardDAO</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.project.cafe.board.db.BoardDTO</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.project.cafe.board.db.CommentDTO</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">BoardContentAction</span> <span class="kd">implements</span> <span class="nc">Action</span> 
<span class="o">{</span>
    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="nc">ActionForward</span> <span class="nf">execute</span><span class="o">(</span><span class="nc">HttpServletRequest</span> <span class="n">request</span><span class="o">,</span> <span class="nc">HttpServletResponse</span> <span class="n">response</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">Exception</span> 
    <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"M : BoardContentAction - execute() 호출"</span><span class="o">);</span>
		
        <span class="c1">// 전달받은 파라메터(글 번호, 페이지정보) 저장</span>
        <span class="kt">int</span> <span class="n">num</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"num"</span><span class="o">));</span>
        <span class="nc">String</span> <span class="n">pageNum</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"pageNum"</span><span class="o">);</span> <span class="c1">// 페이지번호는 DB 처리할 때 사용하진 않아서 형변환 필요 X</span>
		
        <span class="c1">// DAO 객체 생성</span>
        <span class="nc">BoardDAO</span> <span class="n">dao</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BoardDAO</span><span class="o">();</span>

        <span class="c1">// 글 조회수 1 증가</span>
        <span class="n">dao</span><span class="o">.</span><span class="na">updateReadCount</span><span class="o">(</span><span class="n">num</span><span class="o">);</span>
		
        <span class="c1">// 글 정보 불러오기</span>
        <span class="nc">BoardDTO</span> <span class="n">dto</span> <span class="o">=</span> <span class="n">dao</span><span class="o">.</span><span class="na">getPost</span><span class="o">(</span><span class="n">num</span><span class="o">);</span>
        
        <span class="c1">// 해당 글에 달린 댓글 정보 불러오기</span>
        <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">CommentDTO</span><span class="o">&gt;</span> <span class="n">coList</span> <span class="o">=</span> <span class="n">dao</span><span class="o">.</span><span class="na">getComments</span><span class="o">(</span><span class="n">num</span><span class="o">);</span>
		
        <span class="c1">// request 영역에 글 정보랑 페이지정보, 댓글목록 저장</span>
        <span class="n">request</span><span class="o">.</span><span class="na">setAttribute</span><span class="o">(</span><span class="s">"dto"</span><span class="o">,</span> <span class="n">dto</span><span class="o">);</span>
        <span class="n">request</span><span class="o">.</span><span class="na">setAttribute</span><span class="o">(</span><span class="s">"pageNum"</span><span class="o">,</span> <span class="n">pageNum</span><span class="o">);</span>
        <span class="n">request</span><span class="o">.</span><span class="na">setAttribute</span><span class="o">(</span><span class="s">"coList"</span><span class="o">,</span> <span class="n">coList</span><span class="o">);</span>
		
        <span class="c1">// 페이지 이동</span>
        <span class="nc">ActionForward</span> <span class="n">forward</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ActionForward</span><span class="o">();</span>
        <span class="n">forward</span><span class="o">.</span><span class="na">setPath</span><span class="o">(</span><span class="s">"./contents/boardContent.jsp"</span><span class="o">);</span>
        <span class="n">forward</span><span class="o">.</span><span class="na">setRedirect</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
		
        <span class="k">return</span> <span class="n">forward</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>게시글 내용을 불러올 때 해당 글에 달린 댓글 정보도 함께 불러온다.</li>
</ul>

<h2 id="boarddaojava---getcommentsnum">BoardDAO.java - getComments(num)</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">CommentDTO</span><span class="o">&gt;</span> <span class="nf">getComments</span><span class="o">(</span><span class="kt">int</span> <span class="n">num</span><span class="o">)</span>
<span class="o">{</span>
    <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">CommentDTO</span><span class="o">&gt;</span> <span class="n">list</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">CommentDTO</span><span class="o">&gt;();</span>
		
    <span class="k">try</span> <span class="o">{</span>
        <span class="n">con</span> <span class="o">=</span> <span class="n">getCon</span><span class="o">();</span>
			
        <span class="n">sql</span> <span class="o">=</span> <span class="s">"select * from cafe_comment where post_num=?"</span><span class="o">;</span>
        <span class="n">pstmt</span> <span class="o">=</span> <span class="n">con</span><span class="o">.</span><span class="na">prepareStatement</span><span class="o">(</span><span class="n">sql</span><span class="o">);</span>
			
        <span class="n">pstmt</span><span class="o">.</span><span class="na">setInt</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="n">num</span><span class="o">);</span>
			
        <span class="n">rs</span> <span class="o">=</span> <span class="n">pstmt</span><span class="o">.</span><span class="na">executeQuery</span><span class="o">();</span>
			
        <span class="k">while</span> <span class="o">(</span><span class="n">rs</span><span class="o">.</span><span class="na">next</span><span class="o">())</span>
        <span class="o">{</span>
            <span class="nc">CommentDTO</span> <span class="n">dto</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">CommentDTO</span><span class="o">();</span>
				
            <span class="n">dto</span><span class="o">.</span><span class="na">setCommentedDate</span><span class="o">(</span><span class="n">rs</span><span class="o">.</span><span class="na">getDate</span><span class="o">(</span><span class="s">"commented_date"</span><span class="o">));</span>
            <span class="n">dto</span><span class="o">.</span><span class="na">setContent</span><span class="o">(</span><span class="n">rs</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="s">"content"</span><span class="o">));</span>
            <span class="n">dto</span><span class="o">.</span><span class="na">setId</span><span class="o">(</span><span class="n">rs</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="s">"id"</span><span class="o">));</span>
            <span class="n">dto</span><span class="o">.</span><span class="na">setIp</span><span class="o">(</span><span class="n">rs</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="s">"ip"</span><span class="o">));</span>
            <span class="n">dto</span><span class="o">.</span><span class="na">setNum</span><span class="o">(</span><span class="n">rs</span><span class="o">.</span><span class="na">getInt</span><span class="o">(</span><span class="s">"num"</span><span class="o">));</span>
            <span class="n">dto</span><span class="o">.</span><span class="na">setPost_num</span><span class="o">(</span><span class="n">rs</span><span class="o">.</span><span class="na">getInt</span><span class="o">(</span><span class="s">"post_num"</span><span class="o">));</span>
            <span class="n">dto</span><span class="o">.</span><span class="na">setRe_lev</span><span class="o">(</span><span class="n">rs</span><span class="o">.</span><span class="na">getInt</span><span class="o">(</span><span class="s">"re_lev"</span><span class="o">));</span>
            <span class="n">dto</span><span class="o">.</span><span class="na">setRe_ref</span><span class="o">(</span><span class="n">rs</span><span class="o">.</span><span class="na">getInt</span><span class="o">(</span><span class="s">"re_ref"</span><span class="o">));</span>
            <span class="n">dto</span><span class="o">.</span><span class="na">setRe_seq</span><span class="o">(</span><span class="n">rs</span><span class="o">.</span><span class="na">getInt</span><span class="o">(</span><span class="s">"re_seq"</span><span class="o">));</span>
				
            <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">dto</span><span class="o">);</span>
        <span class="o">}</span>
			
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"DAO : 댓글 목록 저장 완료"</span><span class="o">);</span>
    <span class="o">}</span>
    <span class="k">catch</span> <span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
    <span class="o">}</span>
    <span class="k">finally</span> <span class="o">{</span>
        <span class="n">closeDB</span><span class="o">();</span>
    <span class="o">}</span>
		
    <span class="k">return</span> <span class="n">list</span><span class="o">;</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>게시글 번호를 매개변수로 받아서 해당 글에 달린 댓글들만 불러온다.<br /><br /></li>
</ul>

<p align="center"><img src="../../assets/images/commentEmpty.png" /></p>

<ul>
  <li>작성된 댓글이 없을 때엔 불러오지 않는다.<br /><br /></li>
</ul>

<h1 id="진행상황-2">진행상황 2</h1>
<ul>
  <li>게시글에 댓글을 다는 기능을 추가했다.</li>
</ul>

<h2 id="boardcontentjsp-1">boardContent.jsp</h2>

<div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!-- 게시글 본문 영역 --&gt;</span>

<span class="c">&lt;!-- 댓글 영역 --&gt;</span>  
<span class="nt">&lt;form</span> <span class="na">action=</span><span class="s">"./CommentWriteAction.bo?post_num=</span><span class="nt">&lt;%=</span><span class="n">dto</span><span class="o">.</span><span class="na">getNum</span><span class="o">()</span> <span class="nt">%&gt;</span><span class="s">&amp;pageNum=</span><span class="nt">&lt;%=</span><span class="n">pageNum</span> <span class="nt">%&gt;</span><span class="s">"</span> <span class="na">method=</span><span class="s">"post"</span> <span class="na">onsubmit=</span><span class="s">"return writeComment();"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"hidden"</span> <span class="na">name=</span><span class="s">"id"</span> <span class="na">value=</span><span class="s">"</span><span class="nt">&lt;%=</span><span class="n">id</span><span class="nt">%&gt;</span><span class="s">"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"text"</span> <span class="na">id=</span><span class="s">"comment"</span> <span class="na">name=</span><span class="s">"comment"</span> <span class="na">placeholder=</span><span class="s">"댓글 달기"</span><span class="err">.</span> <span class="na">maxlength=</span><span class="s">"500"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;button</span> <span class="na">type=</span><span class="s">"submit"</span> <span class="na">class=</span><span class="s">"btn"</span> <span class="na">id=</span><span class="s">"commentBtn"</span><span class="nt">&gt;</span>입력<span class="nt">&lt;/button&gt;</span>
<span class="nt">&lt;/form&gt;&lt;br&gt;&lt;br&gt;</span>
<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"comments"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;h3&gt;</span>댓글<span class="nt">&lt;/h3&gt;</span>
  <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"hidden"</span> <span class="na">id=</span><span class="s">"postNum"</span> <span class="na">value=</span><span class="s">"</span><span class="nt">&lt;%=</span><span class="n">dto</span><span class="o">.</span><span class="na">getNum</span><span class="o">()</span><span class="nt">%&gt;</span><span class="s">"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;p&gt;</span>
    <span class="nt">&lt;%</span><span class="k">if</span> <span class="o">(!</span><span class="n">coList</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">())</span> <span class="o">{</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">coList</span><span class="o">.</span><span class="na">size</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span> 
            <span class="nc">CommentDTO</span> <span class="n">coDto</span> <span class="o">=</span> <span class="n">coList</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">);</span> <span class="nt">%&gt;</span>
    <span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">"comId"</span><span class="nt">&gt;</span>
      <span class="nt">&lt;%=</span><span class="n">coDto</span><span class="o">.</span><span class="na">getId</span><span class="o">()</span> <span class="nt">%&gt;</span><span class="ni">&amp;nbsp;</span>		
    <span class="nt">&lt;/span&gt;</span>
    <span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">"comDate"</span><span class="nt">&gt;</span>
      <span class="nt">&lt;%=</span><span class="n">coDto</span><span class="o">.</span><span class="na">getCommentedDate</span><span class="o">()</span> <span class="nt">%&gt;</span><span class="ni">&amp;nbsp;</span>
    <span class="nt">&lt;/span&gt;</span>
    <span class="nt">&lt;span&gt;</span>
      <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"#"</span><span class="nt">&gt;</span>수정<span class="ni">&amp;nbsp;</span><span class="nt">&lt;/a&gt;</span>
    <span class="nt">&lt;/span&gt;</span>
    <span class="nt">&lt;span&gt;</span>
      <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"#"</span><span class="nt">&gt;</span>삭제<span class="ni">&amp;nbsp;</span><span class="nt">&lt;/a&gt;</span>
    <span class="nt">&lt;/span&gt;</span>
  <span class="nt">&lt;/p&gt;</span>
  <span class="nt">&lt;p</span> <span class="na">class=</span><span class="s">"comContent"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;%=</span><span class="n">coDto</span><span class="o">.</span><span class="na">getContent</span><span class="o">()</span> <span class="nt">%&gt;</span>
  <span class="nt">&lt;/p&gt;&lt;br&gt;</span>
  <span class="nt">&lt;%</span> <span class="o">}}</span> <span class="nt">%&gt;</span>
<span class="nt">&lt;/div&gt;</span>
<span class="c">&lt;!-- 댓글 영역 --&gt;</span>

<span class="c">&lt;!-- 하단 버튼 영역 --&gt;</span>
</code></pre></div></div>

<ul>
  <li>작성한 댓글을 전송할 폼태그를 추가했다.</li>
</ul>

<h2 id="boardcontentjs">boardContent.js</h2>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nx">writeComment</span><span class="p">()</span>
<span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">#comment</span><span class="dl">'</span><span class="p">).</span><span class="nx">val</span><span class="p">().</span><span class="nx">length</span> <span class="o">&lt;=</span> <span class="mi">0</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nx">alert</span><span class="p">(</span><span class="dl">'</span><span class="s1">내용을 입력하세요.</span><span class="dl">'</span><span class="p">);</span>
        <span class="k">return</span> <span class="kc">false</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">else</span>
        <span class="k">return</span> <span class="kc">true</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<ul>
  <li>댓글 작성 서블릿으로 이동하기 전에 댓글이 작성된 것을 확인한 후 서블릿으로 이동한다.</li>
</ul>

<h2 id="commentwriteactionjava">CommentWriteAction.java</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.project.cafe.board.action</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletRequest</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletResponse</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">com.project.cafe.action.Action</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.project.cafe.action.ActionForward</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.project.cafe.board.db.BoardDAO</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.project.cafe.board.db.CommentDTO</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">CommentWriteAction</span> <span class="kd">implements</span> <span class="nc">Action</span> 
<span class="o">{</span>
    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="nc">ActionForward</span> <span class="nf">execute</span><span class="o">(</span><span class="nc">HttpServletRequest</span> <span class="n">request</span><span class="o">,</span> <span class="nc">HttpServletResponse</span> <span class="n">response</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">Exception</span> 
    <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"M : CommentWriteAction - execute() 호출"</span><span class="o">);</span>
		
        <span class="c1">// 한글처리</span>
        <span class="n">request</span><span class="o">.</span><span class="na">setCharacterEncoding</span><span class="o">(</span><span class="s">"utf-8"</span><span class="o">);</span>
		
        <span class="c1">// 파라메터 저장</span>
        <span class="nc">String</span> <span class="n">id</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"id"</span><span class="o">);</span>
        <span class="nc">String</span> <span class="n">comment</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"comment"</span><span class="o">);</span>
        <span class="kt">int</span> <span class="n">postNum</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"post_num"</span><span class="o">));</span>
        <span class="nc">String</span> <span class="n">pageNum</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"pageNum"</span><span class="o">);</span>
		
        <span class="nc">CommentDTO</span> <span class="n">dto</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">CommentDTO</span><span class="o">();</span>
        <span class="n">dto</span><span class="o">.</span><span class="na">setContent</span><span class="o">(</span><span class="n">comment</span><span class="o">);</span>
        <span class="n">dto</span><span class="o">.</span><span class="na">setId</span><span class="o">(</span><span class="n">id</span><span class="o">);</span>
        <span class="n">dto</span><span class="o">.</span><span class="na">setIp</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getRemoteAddr</span><span class="o">());</span>
        <span class="n">dto</span><span class="o">.</span><span class="na">setPost_num</span><span class="o">(</span><span class="n">postNum</span><span class="o">);</span>
		
        <span class="c1">// DB 연결해서 댓글 저장</span>
        <span class="nc">BoardDAO</span> <span class="n">dao</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BoardDAO</span><span class="o">();</span>
        <span class="n">dao</span><span class="o">.</span><span class="na">insertComment</span><span class="o">(</span><span class="n">dto</span><span class="o">);</span>
		
        <span class="c1">// 페이지 이동</span>
        <span class="nc">ActionForward</span> <span class="n">forward</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ActionForward</span><span class="o">();</span>
        <span class="n">forward</span><span class="o">.</span><span class="na">setPath</span><span class="o">(</span><span class="s">"./BoardContent.bo?num="</span><span class="o">+</span><span class="n">postNum</span><span class="o">+</span><span class="s">"&amp;pageNum="</span><span class="o">+</span><span class="n">pageNum</span><span class="o">);</span>
        <span class="n">forward</span><span class="o">.</span><span class="na">setRedirect</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
		
        <span class="k">return</span> <span class="n">forward</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>컨트롤러를 통해 댓글 작성 동작을 수행하는 서블릿으로 이동한다.</li>
  <li>게시글을 작성할 때와 마찬가지로 폼태그로 받아온 파라메터들을 저장한 후 <code class="language-plaintext highlighter-rouge">DB</code>에 접속해서 <code class="language-plaintext highlighter-rouge">insert</code> 동작을 수행한다.</li>
  <li>게시글 본문 페이지에서 게시글 번호와 페이지 번호 정보를 필요로 하기 때문에 <code class="language-plaintext highlighter-rouge">get</code>방식으로 함께 넘겨준다.</li>
</ul>

<h2 id="boarddaojava---insertcommentdto">BoardDAO.java - insertComment(dto)</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kt">void</span> <span class="nf">insertComment</span><span class="o">(</span><span class="nc">CommentDTO</span> <span class="n">dto</span><span class="o">)</span>
<span class="o">{</span>
    <span class="kt">int</span> <span class="n">lastNum</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>

    <span class="k">try</span> <span class="o">{</span>
        <span class="n">con</span> <span class="o">=</span> <span class="n">getCon</span><span class="o">();</span>
			
        <span class="c1">// 새 글 번호 찾기</span>
        <span class="n">sql</span> <span class="o">=</span> <span class="s">"select max(num) from cafe_comment"</span><span class="o">;</span>
        <span class="n">pstmt</span> <span class="o">=</span> <span class="n">con</span><span class="o">.</span><span class="na">prepareStatement</span><span class="o">(</span><span class="n">sql</span><span class="o">);</span>
			
        <span class="n">rs</span> <span class="o">=</span> <span class="n">pstmt</span><span class="o">.</span><span class="na">executeQuery</span><span class="o">();</span>
			
        <span class="k">if</span> <span class="o">(</span><span class="n">rs</span><span class="o">.</span><span class="na">next</span><span class="o">())</span>
            <span class="n">lastNum</span> <span class="o">=</span> <span class="n">rs</span><span class="o">.</span><span class="na">getInt</span><span class="o">(</span><span class="mi">1</span><span class="o">)</span> <span class="o">+</span> <span class="mi">1</span><span class="o">;</span>
			
        <span class="c1">// 댓글 삽입</span>
        <span class="n">sql</span> <span class="o">=</span> <span class="s">"insert into cafe_comment(num, post_num, id, content, commented_date, re_ref, re_lev, re_seq, ip)"</span>
                <span class="o">+</span> <span class="s">" values(?,?,?,?,now(),?,?,?,?)"</span><span class="o">;</span>
        <span class="n">pstmt</span> <span class="o">=</span> <span class="n">con</span><span class="o">.</span><span class="na">prepareStatement</span><span class="o">(</span><span class="n">sql</span><span class="o">);</span>
			
        <span class="n">pstmt</span><span class="o">.</span><span class="na">setInt</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="n">lastNum</span><span class="o">);</span>
        <span class="n">pstmt</span><span class="o">.</span><span class="na">setInt</span><span class="o">(</span><span class="mi">2</span><span class="o">,</span> <span class="n">dto</span><span class="o">.</span><span class="na">getPost_num</span><span class="o">());</span>
        <span class="n">pstmt</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="mi">3</span><span class="o">,</span> <span class="n">dto</span><span class="o">.</span><span class="na">getId</span><span class="o">());</span>
        <span class="n">pstmt</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="mi">4</span><span class="o">,</span> <span class="n">dto</span><span class="o">.</span><span class="na">getContent</span><span class="o">());</span>
        <span class="n">pstmt</span><span class="o">.</span><span class="na">setInt</span><span class="o">(</span><span class="mi">5</span><span class="o">,</span> <span class="n">lastNum</span><span class="o">);</span>
        <span class="n">pstmt</span><span class="o">.</span><span class="na">setInt</span><span class="o">(</span><span class="mi">6</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span>
        <span class="n">pstmt</span><span class="o">.</span><span class="na">setInt</span><span class="o">(</span><span class="mi">7</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span>
        <span class="n">pstmt</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="mi">8</span><span class="o">,</span> <span class="n">dto</span><span class="o">.</span><span class="na">getIp</span><span class="o">());</span>
			
        <span class="n">pstmt</span><span class="o">.</span><span class="na">executeUpdate</span><span class="o">();</span>
			
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"DAO : 댓글 삽입 완료"</span><span class="o">);</span>
    <span class="o">}</span>
    <span class="k">catch</span> <span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
    <span class="o">}</span>
    <span class="k">finally</span> <span class="o">{</span>
        <span class="n">closeDB</span><span class="o">();</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>게시글 삽입 때와 마찬가지로 삽입 연산을 수행한다.<br /><br /></li>
</ul>

<p align="center"><img src="../../assets/images/loadComments.png" /></p>

<ul>
  <li>댓글 삽입 연산이 완료된 후 다시 게시글 본문 페이지로 이동하면 새로 작성된 댓글을 확인할 수 있다.<br /><br /><br /></li>
</ul>

<h1 id="마감까지">마감까지</h1>
<ul>
  <li>마감 기한이 늘어났다.</li>
  <li><code class="language-plaintext highlighter-rouge">D-5</code></li>
</ul>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="Project Log" /><category term="Project" /><category term="Cafe" /><category term="Log" /><summary type="html"><![CDATA[개발환경 MacBook Air (M1, 2020) OpenJDK 8 Eclipse 2021-12 tomcat 8.5 MySQL Workbench 8.0.19]]></summary></entry><entry><title type="html">컴퓨터 네트워크) TCP와 UDP</title><link href="http://localhost:4000/computer%20network/computer-network-tcp-udp/" rel="alternate" type="text/html" title="컴퓨터 네트워크) TCP와 UDP" /><published>2022-04-03T00:00:00+09:00</published><updated>2022-04-03T00:00:00+09:00</updated><id>http://localhost:4000/computer%20network/computer-network-tcp-udp</id><content type="html" xml:base="http://localhost:4000/computer%20network/computer-network-tcp-udp/"><![CDATA[<h1 id="-transport-layer">👀 Transport Layer</h1>
<ul>
  <li>응용 계층 바로 아래에 있는 계층</li>
  <li>대표적인 서비스는 프로세스들 간의 논리적 연결</li>
  <li>하나의 컴퓨터 안에서는 여러 프로세스가 동시에 기동되고 있다.</li>
  <li>전송 계층 바로 아래에 있는 네트워크 계층에서는 <code class="language-plaintext highlighter-rouge">IP</code>를 이용해 상대 호스트를 찾아가는데 이것 만으로는 상대방의 어떤 프로세스에게 전달해야 하는지 알 수 없다.</li>
  <li>그래서 전송 계층에서 여러 프로세스들 중에서 어떤 프로세스에게 전달해야 할 지 알려주는 정보를 제공하는 것이다.</li>
  <li>전송 계층의 보내는 쪽에서는 보내고자 하는 메세지(파일 등)를 분할한 다음에 세그먼트에 담아서 전송한다.</li>
  <li>그러면 받는 쪽에서 분할되어 온 세그먼트들을 합친 후에 응용 계층으로 전달한다.</li>
  <li>이때 사용하는 프로토콜은 <code class="language-plaintext highlighter-rouge">TCP</code>와 <code class="language-plaintext highlighter-rouge">UDP</code> 두 가지가 대표적으로 사용된다.<br /><br /></li>
</ul>

<h1 id="tcp">TCP</h1>
<ul>
  <li>신뢰성 있는 전송</li>
  <li>보낸 순서대로 전송이 되는데 사실 데이터가 도착하는 순서는 제각각이다. 그걸 순서대로 도착한 것처럼 보이게 만들어서 응용 계층으로 보내는 것이 <code class="language-plaintext highlighter-rouge">TCP</code>가 하는 일이다.</li>
  <li>데이터를 주고받기 전에 먼저 <code class="language-plaintext highlighter-rouge">connection</code>을 설정한 뒤 둘 사이에 흐르는 데이터들의 에러나 속도를 제어해서 전체적으로 안정적인 서비스를 제공한다.<br /><br /></li>
</ul>

<h1 id="udp">UDP</h1>
<ul>
  <li>신뢰성 없는 전송</li>
  <li><code class="language-plaintext highlighter-rouge">TCP</code>에서 제공하는 <code class="language-plaintext highlighter-rouge">connection</code>과 순서 보장 등을 제공하지 않고 전송 계층에서 제공해야 하는 가장 기본적인 서비스만 제공하고 나머지는 아래 계층에 넘기는 방식</li>
  <li>그래서 <code class="language-plaintext highlighter-rouge">TCP</code>보다는 속도가 빠르다.<br /><br /><br /></li>
</ul>

<h1 id="출처">출처</h1>
<ul>
  <li><a href="http://www.kmooc.kr/courses/course-v1:PNUk+CN_C01+2021_KM_013/video">컴퓨터 네트워킹 - 부산대학교 K-MOOC 공개강의</a></li>
</ul>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="Computer Network" /><category term="CS" /><category term="Network" /><category term="Application" /><summary type="html"><![CDATA[👀 Transport Layer 응용 계층 바로 아래에 있는 계층 대표적인 서비스는 프로세스들 간의 논리적 연결 하나의 컴퓨터 안에서는 여러 프로세스가 동시에 기동되고 있다. 전송 계층 바로 아래에 있는 네트워크 계층에서는 IP를 이용해 상대 호스트를 찾아가는데 이것 만으로는 상대방의 어떤 프로세스에게 전달해야 하는지 알 수 없다. 그래서 전송 계층에서 여러 프로세스들 중에서 어떤 프로세스에게 전달해야 할 지 알려주는 정보를 제공하는 것이다. 전송 계층의 보내는 쪽에서는 보내고자 하는 메세지(파일 등)를 분할한 다음에 세그먼트에 담아서 전송한다. 그러면 받는 쪽에서 분할되어 온 세그먼트들을 합친 후에 응용 계층으로 전달한다. 이때 사용하는 프로토콜은 TCP와 UDP 두 가지가 대표적으로 사용된다.]]></summary></entry><entry><title type="html">OS) Memory Management</title><link href="http://localhost:4000/operating%20system/OS-08-Memory-Management/" rel="alternate" type="text/html" title="OS) Memory Management" /><published>2022-04-02T00:00:00+09:00</published><updated>2022-04-02T00:00:00+09:00</updated><id>http://localhost:4000/operating%20system/OS-08-Memory-Management</id><content type="html" xml:base="http://localhost:4000/operating%20system/OS-08-Memory-Management/"><![CDATA[<h1 id="-논리적-주소와-물리적-주소">👀 논리적 주소와 물리적 주소</h1>
<ul>
  <li>
    <p>데이터가 메모리에 위치하고 있는 곳을 가리키는 주소는 논리적 주소와 물리적 주소로 나뉜다.</p>
  </li>
  <li><code class="language-plaintext highlighter-rouge">Logical address (= virtual address)</code>
    <ul>
      <li>프로세스마다 독립적으로 가지는 주소 공간</li>
      <li>각 프로세스마다 0번지부터 시작</li>
      <li><code class="language-plaintext highlighter-rouge">CPU</code>가 보는 주소는 <code class="language-plaintext highlighter-rouge">logical address</code>임</li>
      <li>왜냐면 코드상의 주소가 <code class="language-plaintext highlighter-rouge">logical address</code>인데 이게 물리적 주소로 바뀐다 해서 코드상의 주소도 물리적 주소로 바뀌는 것은 아니다. 만약 바뀐다면 컴파일을 새로 해야 하는데 이러면 이상하다. 그래서 <code class="language-plaintext highlighter-rouge">CPU</code>는 논리적 주소를 참고하게 된다.</li>
    </ul>
  </li>
  <li><code class="language-plaintext highlighter-rouge">Physical address</code>
    <ul>
      <li>메모리에 실제로 올라가는 위치</li>
    </ul>
  </li>
  <li><code class="language-plaintext highlighter-rouge">CPU</code>가 <code class="language-plaintext highlighter-rouge">instruction</code>을 수행하다가 메모리에 있는 데이터에 접근할 필요가 있으면 그 데이터가 위치하고 있는 주소를 알아야 한다.</li>
  <li>이때 코드에 물리적 주소가 항상 명시되어 있어서 바로 그 위치로 가서 읽어오면 서로 편하겠지만 프로그램이 실행되는 컴퓨터와 환경에 따라 항상 같은 물리적 주소를 사용할 수 있다는 보장이 없다.</li>
  <li>그래서 코드에는 논리적 주소를 사용해 각 프로세스별로 전용 주소공간을 사용할 수 있게 하고 그 논리적 주소를 이용해 메모리에 실제로 올려져 있는 위치를 참고할 수 있도록 하는 것이다.</li>
  <li><code class="language-plaintext highlighter-rouge">CPU</code>는 메모리에 접근할 필요가 있으면 먼저 논리적 주소를 물리적 주소로 변환한 뒤 해당 위치에 접근해서 데이터를 읽어온다.</li>
</ul>

<h2 id="주소-바인딩address-binding">주소 바인딩(Address Binding)</h2>
<ul>
  <li>논리적 주소를 물리적 주소로 변환하는 것</li>
  <li>하지만 주소변환은 <code class="language-plaintext highlighter-rouge">CPU</code>가 하는 것이 아닌 하드웨어적으로 이루어진다.</li>
  <li>주소변환이 필요할 때마다 <code class="language-plaintext highlighter-rouge">CPU</code>가 필요하면 그 때마다 <code class="language-plaintext highlighter-rouge">interrupt</code>가 일어나게 될 것이고 그건 굉장히 비효율적일 것이다.</li>
</ul>

<h3 id="주소-바인딩-시점에-따른-분류">주소 바인딩 시점에 따른 분류</h3>
<ul>
  <li><code class="language-plaintext highlighter-rouge">Compile time binding</code>
    <ul>
      <li>컴파일될 때 물리적 주소가 결정된다.</li>
      <li>시작위치가 변경되면 재컴파일</li>
      <li>컴파일러는 절대 코드(absolute code) 생성</li>
      <li>옛날에 많이 쓰다가 지금은 잘 안 쓴다.</li>
    </ul>
  </li>
  <li><code class="language-plaintext highlighter-rouge">Load time binding</code>
    <ul>
      <li><code class="language-plaintext highlighter-rouge">Loader</code>의 책임하에 물리적 메모리 주소 부여</li>
      <li>프로그램이 메모리에 로드될 때 물리적 주소가 결정된다.</li>
      <li>컴파일러가 재배치 가능 코드(relocatable code)를 생성한 경우 가능</li>
    </ul>
  </li>
  <li><code class="language-plaintext highlighter-rouge">Execution time binding (= Run time binding)</code>
    <ul>
      <li>수행이 시작된 이후에도 프로세스의 메모리 상 위치를 옮길 수 있다.</li>
      <li><code class="language-plaintext highlighter-rouge">CPU</code>가 주소를 참조할 때마다 <code class="language-plaintext highlighter-rouge">binding</code> 점검 (address mapping table)</li>
      <li>하드웨어에서 지원해야 가능하다.</li>
      <li>최근 시스템에서 사용하는 방식</li>
    </ul>
  </li>
</ul>

<h2 id="memory-management-unit-mmu">Memory-Management Unit (MMU)</h2>
<ul>
  <li>주소 변환을 위한 하드웨어</li>
  <li>논리적 주소를 물리적 주소로 매핑해 준다.</li>
  <li>실제 물리적 주소의 시작점에서 논리적 주소의 <code class="language-plaintext highlighter-rouge">offset</code>만큼을 더해서 물리적 주소를 알려준다.</li>
  <li><code class="language-plaintext highlighter-rouge">Limit register</code> : 만약 프로세스가 자기 범위를 넘어가는 위치에 있는 데이터에 접근을 요구하면 다른 프로세스의 중요 데이터에 접근하게 될 수 있다. 그래서 주소를 변환할 때 프로세스가 가질 수 있는 주소의 최대 크기를 먼저 제한해놓고 그 범위 안에서만 변환할 수 있도록 한다.<br /><br /></li>
</ul>

<h1 id="메모리-로드-기법들">메모리 로드 기법들</h1>
<h2 id="dynamic-loading">Dynamic Loading</h2>
<ul>
  <li>프로세스 전체를 메모리에 미리 다 올리는 것이 아니라 해당 루틴이 불려질 때 메모리에 <code class="language-plaintext highlighter-rouge">load</code>하는 것</li>
  <li><code class="language-plaintext highlighter-rouge">memory utilization</code>이 향상됨</li>
  <li>가끔씩 사용되는 코드가 많을 때 유용하다.
    <ul>
      <li>자주 사용되는 부분이 한정적인데 전체를 올리면 비효율적이다.</li>
      <li>예 : 오류 처리 루틴</li>
    </ul>
  </li>
  <li>운영체제의 특별한 지원 없이 프로그램 자체에서 구현 가능 (<code class="language-plaintext highlighter-rouge">OS</code>는 라이브러리를 통해 지원 가능)</li>
</ul>

<h2 id="dynamic-linking">Dynamic Linking</h2>
<ul>
  <li><code class="language-plaintext highlighter-rouge">Linking</code>을 실행시간(execution time)`까지 미루는 기법</li>
  <li><code class="language-plaintext highlighter-rouge">Static linking</code>
    <ul>
      <li>라이브러리가 프로그램의 실행 파일 코드에 포함됨</li>
      <li>실행 파일의 크기가 커짐</li>
      <li>동일한 라이브러리를 각각의 프로세스가 메모리에 올리므로 메모리 낭비가 생긴다.(예: <code class="language-plaintext highlighter-rouge">printf</code>함수의 라이브러리 코드)</li>
    </ul>
  </li>
  <li><code class="language-plaintext highlighter-rouge">Overlays</code>
    <ul>
      <li>메모리에 프로세스의 부분 중 실제 필요한 정보만을 올림</li>
      <li>이렇게 보면 <code class="language-plaintext highlighter-rouge">Dynamic loading</code>과 비슷해 보이지만 프로그래머가 수작업으로 구현해야 한다는 점에서 다르다. 작은 공간의 메모리를 사용하던 초창기 시스템에서 사용하던 방식으로 프로그래밍이 매우 복잡하다.</li>
      <li>프로세스의 크기가 메모리보다 클 때 유용</li>
      <li>운영체제의 지원 없이 사용자에 의해 구현</li>
    </ul>
  </li>
  <li><code class="language-plaintext highlighter-rouge">Dynamic linking</code>
    <ul>
      <li>라이브러리가 실행시 연결된다.</li>
      <li>라이브러리 호출 부분에 라이브러리 루틴의 위치를 찾기 위한 <code class="language-plaintext highlighter-rouge">stub</code>이라는 작은 코드를 둔다.</li>
      <li>라이브러리가 이미 메모리에 있으면 그 루틴의 주소로 가고 없으면 디스크에서 읽어옴</li>
      <li>운영체제의 도움 필요</li>
    </ul>
  </li>
  <li><code class="language-plaintext highlighter-rouge">Swapping</code>
    <ul>
      <li>프로세스를 일시적으로 메모리에서 <code class="language-plaintext highlighter-rouge">backing store(하드디스크)</code>로 쫓아내는 것</li>
      <li><code class="language-plaintext highlighter-rouge">Backing store</code> : 많은 사용자의 프로세스 이미지를 담을 만큼 충분히 빠르고 큰 저장 공간</li>
      <li>일반적으로 중기 스케줄러(swapper)에 의해 <code class="language-plaintext highlighter-rouge">swap in/out</code>될 프로세스가 선정된다.</li>
      <li>프로세스의 우선순위에 따라 <code class="language-plaintext highlighter-rouge">swap</code>이 이루어진다.</li>
      <li><code class="language-plaintext highlighter-rouge">Compile time</code> 혹은 <code class="language-plaintext highlighter-rouge">load time binding</code>에서는 원래 메모리 위치로 <code class="language-plaintext highlighter-rouge">swap in</code>해야 함</li>
      <li><code class="language-plaintext highlighter-rouge">Execution time binding</code>에서는 추후 빈 메모리 영역 아무 곳에나 올릴 수 있다.</li>
      <li><code class="language-plaintext highlighter-rouge">swap time</code>은 대부분 <code class="language-plaintext highlighter-rouge">transfer time</code>(swap되는 양에 비례하는 시간)이다.</li>
    </ul>
  </li>
</ul>

<h2 id="allocation-of-physical-memory">Allocation of Physical Memory</h2>
<ul>
  <li>
    <p>메모리는 일반적으로 두 영역으로 나뉘어 사용된다.</p>
  </li>
  <li><code class="language-plaintext highlighter-rouge">OS</code> 상주 영역 : <code class="language-plaintext highlighter-rouge">interrupt vector</code>와 함께 낮은 주소 영역 사용</li>
  <li>사용자 프로세스 영역 : 높은 주소 영역 사용</li>
</ul>

<h2 id="사용자-프로세스-영역의-할당-방법">사용자 프로세스 영역의 할당 방법</h2>
<ul>
  <li><code class="language-plaintext highlighter-rouge">Contiguous allocation</code>
    <ul>
      <li>각각의 프로세스가 메모리의 연속적인 공간에 적재되도록 하는 것</li>
    </ul>
  </li>
  <li><code class="language-plaintext highlighter-rouge">Noncontiguous allocation</code>
    <ul>
      <li>하나의 프로세스가 메모리의 여러 영역에 분산되어 올라갈 수 있다.</li>
      <li>현대 운영체제에서 사용</li>
    </ul>
  </li>
</ul>

<h3 id="contiguous-allocation">Contiguous Allocation</h3>
<ul>
  <li>고정분할 (Fixed partition) 방식
    <ul>
      <li>물리적 메모리를 몇 개의 영구적 분할로 나눔</li>
      <li>분할의 크기가 모두 동일한 방식과 서로 다른 방식 존재</li>
      <li>분할당 하나의 프로그램 적재</li>
      <li>동시에 메모리에 로드되는 프로그램의 수가 고정됨</li>
      <li>최대 수행 가능 프로그램 크기 제한</li>
      <li><code class="language-plaintext highlighter-rouge">internal fragmentation(내부 조각)</code>, <code class="language-plaintext highlighter-rouge">external fragmentation(외부 조각)</code> 발생</li>
    </ul>
  </li>
  <li>가변분할 (Variable partition) 방식
    <ul>
      <li>프로그램의 크기를 고려해서 할당</li>
      <li>분할의 크기, 개수가 동적으로 변함</li>
      <li>기술적 관리 기법 필요</li>
      <li><code class="language-plaintext highlighter-rouge">external fragmentation(외부 조각)</code> 발생</li>
    </ul>
  </li>
  <li><code class="language-plaintext highlighter-rouge">External fragmentation(외부 조각)</code>
    <ul>
      <li>프로그램 크기보다 분할 크기가 작을 때 생김</li>
      <li>아무 프로그램에도 배정되지 않은 빈 공간이지만 프로그램이 올라갈 수 없는 작은 공간</li>
    </ul>
  </li>
  <li><code class="language-plaintext highlighter-rouge">Internal fragmentation(내부 조각)</code>
    <ul>
      <li>프로그램 크기보다 분할 크기가 글 때 생김</li>
      <li>하나의 분할 내부에서 발생하는 사용되지 않는 메모리 조각</li>
      <li>특정 프로그램에 배정되었지만 사용되지 않는 공간</li>
    </ul>
  </li>
  <li><code class="language-plaintext highlighter-rouge">Hole</code>
    <ul>
      <li>가용 메모리 공간</li>
      <li>다양한 크기의 <code class="language-plaintext highlighter-rouge">hole</code>들이 메모리 여러 곳에 흩어져 있다.</li>
      <li>프로세스가 도착하면 수용가능한 <code class="language-plaintext highlighter-rouge">hole</code>을 할당</li>
      <li>운영체제는 다음의 정보 유지 - 할당공간, 가용공간</li>
    </ul>
  </li>
  <li><code class="language-plaintext highlighter-rouge">Dynamic Storage-Allocation Problem</code>
    <ul>
      <li>
        <p>가변 분할 방식에서 size = n 인 요청을 만족하는 가장 적절한 <code class="language-plaintext highlighter-rouge">hole</code>을 찾는 문제</p>
      </li>
      <li><code class="language-plaintext highlighter-rouge">First-fit</code>
        <ul>
          <li>사이즈가 n 이상인 것 중 최초로 찾아지는 <code class="language-plaintext highlighter-rouge">hole</code>에 할당</li>
        </ul>
      </li>
      <li><code class="language-plaintext highlighter-rouge">Best-fit</code>
        <ul>
          <li>사이즈가 n 이상인 가장 작은 <code class="language-plaintext highlighter-rouge">hole</code>을 찾아서 할당</li>
          <li><code class="language-plaintext highlighter-rouge">hole</code>들의 리스트가 크기순으로 정렬되지 않은 경우 모든 <code class="language-plaintext highlighter-rouge">hole</code> 리스트를 탐색해야 함</li>
          <li>많은 수의 아주 작은 <code class="language-plaintext highlighter-rouge">hole</code>들이 생성됨</li>
        </ul>
      </li>
      <li><code class="language-plaintext highlighter-rouge">Wost-fit</code>
        <ul>
          <li>가장 큰 <code class="language-plaintext highlighter-rouge">hole</code>에 할당</li>
          <li>모든 리스트를 탐색해야 함</li>
          <li>상대적으로 아주 큰 <code class="language-plaintext highlighter-rouge">hole</code>들이 생성됨</li>
        </ul>
      </li>
      <li><code class="language-plaintext highlighter-rouge">First-fit</code>과 <code class="language-plaintext highlighter-rouge">Best-fit</code>이 <code class="language-plaintext highlighter-rouge">Wost-fit</code>보다 속도와 공간 이용률 측면에서 효과적</li>
    </ul>
  </li>
  <li><code class="language-plaintext highlighter-rouge">Compaction</code>
    <ul>
      <li><code class="language-plaintext highlighter-rouge">external fragmentation(외부 조각)</code> 문제를 해결하는 한 가지 방법</li>
      <li>사용 중인 메모리 영역을 한 군데로 몰고 <code class="language-plaintext highlighter-rouge">hole</code>들을 다른 한 곳으로 몰아 큰 <code class="language-plaintext highlighter-rouge">block</code>을 만드는 것</li>
      <li>이렇게 보면 <code class="language-plaintext highlighter-rouge">Windows</code>의 디스크 조각 모음과 비슷해 보이지만 디스크 모음은 디스크에 있는 조각들을 모으는 것인데 반해 <code class="language-plaintext highlighter-rouge">Compaction</code>은 실행 중인 메모리의 조각들을 모으는 것이라는 점에서 다르다.</li>
      <li>비용이 매우 많이 든다.</li>
      <li>최소한의 메모리 이동으로 <code class="language-plaintext highlighter-rouge">Compaction</code>하는 방법이 있지만 매우 복잡하다.</li>
      <li>프로세스의 주소가 실행 시간에 동적으로 재배치 가능한 경우에만 수행될 수 있다. 런타임 바인딩이 지원될 때에만 사용 가능</li>
    </ul>
  </li>
</ul>

<h1 id="paging">Paging</h1>
<ul>
  <li>프로세스의 <code class="language-plaintext highlighter-rouge">virtual memory</code>를 동일한 사이즈의 <code class="language-plaintext highlighter-rouge">page</code>로 나눈다.</li>
  <li><code class="language-plaintext highlighter-rouge">virtual memory</code>의 내용이 <code class="language-plaintext highlighter-rouge">page</code> 단위로 비연속적으로 저장된다.</li>
  <li>일부는 <code class="language-plaintext highlighter-rouge">backing storage</code>에, 일부는 <code class="language-plaintext highlighter-rouge">physical memory</code>에 저장</li>
  <li>
    <p>각 페이지마다 논리적 - 물리적 주소 매핑 정보(페이징 테이블)가 필요하다.</p>
  </li>
  <li><code class="language-plaintext highlighter-rouge">physical memory</code>를 동일한 크기의 <code class="language-plaintext highlighter-rouge">frame</code>으로 나눔</li>
  <li><code class="language-plaintext highlighter-rouge">logical memory</code>를 동일 크기의 <code class="language-plaintext highlighter-rouge">page</code>로 나눔(<code class="language-plaintext highlighter-rouge">frame</code>과 같은 크기)</li>
  <li>모든 가용 <code class="language-plaintext highlighter-rouge">frame</code>들을 관리</li>
  <li><code class="language-plaintext highlighter-rouge">page table</code>을 사용하여 논리적 주소를 물리적 주소로 바꾼다.</li>
  <li>
    <p>외부조각이 발생하지 않지만 페이징한 프로세스의 마지막 조각은 페이지 크기보다 작을 수 있기 때문에 내부조각은 발생할 수 있다.</p>
  </li>
  <li>속도 향상을 위해 <code class="language-plaintext highlighter-rouge">TLB(Translation Look-aside Buffer)</code>라는 하드웨어를 사용한다.
    <ul>
      <li>일종의 캐시로 논리적 - 물리적 주소 쌍을 가지고 있다.</li>
    </ul>
  </li>
  <li>페이지 갯수만큼 페이징 테이블이 필요하기 때문에 공간이 많이 필요하다.</li>
</ul>

<h2 id="two-level-page-table">Two-Level Page Table</h2>
<ul>
  <li>페이지 테이블 공간을 줄이기 위해 사용한다. (속도 향상적인 측면에서는 별 효과 없음)</li>
  <li>페이지 테이블 자체를 페이지로 구성해서 페이지 안에 페이지가 또 있는 형태이다.</li>
  <li>사용되지 않는 페이지 영역은 안쪽 페이지 테이블을 안 만들고 포인터를 <code class="language-plaintext highlighter-rouge">NULL</code>로 두기 때문에 공간을 절약할 수 있다.</li>
  <li>주소 공간이 더 커지면 다단계 페이지 테이블을 사용할 수도 있다.</li>
</ul>

<h2 id="memory-protection">Memory Protection</h2>
<ul>
  <li>
    <p>페이지 테이블 각 <code class="language-plaintext highlighter-rouge">entry</code>마다 <code class="language-plaintext highlighter-rouge">bit</code>를 둔다.</p>
  </li>
  <li><code class="language-plaintext highlighter-rouge">Protection bit</code>
    <ul>
      <li>페이지에 대한 접근 권한 설정(read/write/read-only 등 연산에 대한 접근 권한)</li>
    </ul>
  </li>
  <li><code class="language-plaintext highlighter-rouge">Valid-invalid bit</code>
    <ul>
      <li><code class="language-plaintext highlighter-rouge">valid</code> : 해당 주소의 <code class="language-plaintext highlighter-rouge">frame</code>에 그 프로세스를 구성하는 유효한 내용이 있음을 뜻함(접근 허용)</li>
      <li><code class="language-plaintext highlighter-rouge">invalid</code> : 해당 주소의 <code class="language-plaintext highlighter-rouge">frame</code>에 유효한 내용이 없음 (접근 불허)
        <ul>
          <li>프로세스가 그 주소 부분을 사용하지 않는 경우</li>
          <li>해당 페이지가 메모리에 올라와 있지 않고 <code class="language-plaintext highlighter-rouge">swap area</code>에 있는 경우</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<h2 id="inverted-page-table">Inverted Page Table</h2>
<ul>
  <li>페이지 갯수가 많아짐에 따라 페이지 테이블이 커지는 문제를 줄여보려고 사용하는 테이블</li>
  <li>프로세스별로 페이지 테이블을 두는 것이 아닌 페이지 프레임 하나당 페이지 테이블에 하나의 <code class="language-plaintext highlighter-rouge">entry</code>를 둔 것</li>
  <li>각 <code class="language-plaintext highlighter-rouge">page table entry</code>는 각각의 물리적 메모리의 <code class="language-plaintext highlighter-rouge">page frame</code>이 담고 있는 내용 표시</li>
  <li>물리적 주소를 보고 논리적 주소를 알 수 있는 테이블이라 할 수 있다.</li>
</ul>

<h1 id="shared-page">Shared Page</h1>
<ul>
  <li><code class="language-plaintext highlighter-rouge">Shared code</code>
    <ul>
      <li>공유가 가능한 코드는 <code class="language-plaintext highlighter-rouge">read-only</code>로 한 <code class="language-plaintext highlighter-rouge">frame</code>에만 올리는 것</li>
      <li>모든 프로세스의 <code class="language-plaintext highlighter-rouge">logical address space</code>에서 동일한 위치에 있어야 함</li>
    </ul>
  </li>
  <li><code class="language-plaintext highlighter-rouge">Private code and data</code>
    <ul>
      <li>각 프로세스들은 독자적으로 메모리에 올림</li>
      <li><code class="language-plaintext highlighter-rouge">private data</code>는 <code class="language-plaintext highlighter-rouge">logical address space</code> 아무 곳에 와도 무방함</li>
    </ul>
  </li>
</ul>

<h1 id="segmentation">Segmentation</h1>
<ul>
  <li>프로그램은 의미 단위인 여러 개의 <code class="language-plaintext highlighter-rouge">segment</code>로 구성</li>
  <li>작게는 프로그램을 구성하는 함수 하나하나에서 크게는 프로그램 전체까지도 가능</li>
  <li>일반적으로는 <code class="language-plaintext highlighter-rouge">code</code>, <code class="language-plaintext highlighter-rouge">data</code>, <code class="language-plaintext highlighter-rouge">stack</code> 부분이 하나씩의 세그먼트로 정의됨
    <ul>
      <li><code class="language-plaintext highlighter-rouge">main()</code>, <code class="language-plaintext highlighter-rouge">function</code>, <code class="language-plaintext highlighter-rouge">global variables</code>, <code class="language-plaintext highlighter-rouge">stack</code>, <code class="language-plaintext highlighter-rouge">symbol table</code>, <code class="language-plaintext highlighter-rouge">arrays</code></li>
    </ul>
  </li>
  <li>논리적 주소는 <code class="language-plaintext highlighter-rouge">segment-number, offest</code> 쌍으로 구성된다.</li>
  <li>세그먼트별 주소 변환 정보를 담고 있는 <code class="language-plaintext highlighter-rouge">segment table</code>이 필요하다.</li>
  <li><code class="language-plaintext highlighter-rouge">segment-number</code>로부터 <code class="language-plaintext highlighter-rouge">offest</code>만큼 떨어진 위치에 접근하는 방식</li>
  <li>각 세그먼트별로 <code class="language-plaintext highlighter-rouge">protection bit</code> 설정하기가 용이하다.</li>
  <li>의미 단위이기 때문에 공유와 보안에 있어 페이징 기법보다 훨씬 효과적이다.(페이징은 한 페이지 안에 한 종류만 들어있지 않을 수 있기 때문에 종류별로 보안 설정을 다르게 해 줘야 한다)</li>
  <li>페이징 기법보다는 테이블 크기가 작다.</li>
  <li>외부조각 발생</li>
  <li>할당은 <code class="language-plaintext highlighter-rouge">first fit / best fit</code> 방식으로 이루어지며 세그먼트의 길이가 동일하지 않기 때문에 가변분할에서와 동일한 문제점이 발생한다.</li>
</ul>

<h1 id="segmentation-with-paging">Segmentation with Paging</h1>
<ul>
  <li>세그먼트 하나가 여러개의 페이지로 구성된다. 둘을 섞은 것</li>
  <li>훨씬 효율적이라 많이 쓰는 방식이다.</li>
  <li>메모리에 올라갈 땐 페이지 단위로 올라가고 공유는 세그먼트 단위에서 이루어진다.<br /><br /><br /></li>
</ul>

<h1 id="출처">출처</h1>
<ul>
  <li><a href="http://www.kocw.net/home/search/kemView.do?kemId=1046323">운영체제 - 이화여자대학교 KOCW 공개강의</a></li>
</ul>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="Operating System" /><category term="CS" /><category term="OS" /><category term="Process" /><category term="MemoryManagement" /><summary type="html"><![CDATA[👀 논리적 주소와 물리적 주소 데이터가 메모리에 위치하고 있는 곳을 가리키는 주소는 논리적 주소와 물리적 주소로 나뉜다.]]></summary></entry><entry><title type="html">JAVA Servlet 프로젝트) Cafe(웹 사이트) 만들기 22 - 게시판 이미지 썸네일 보여주는 기능 추가</title><link href="http://localhost:4000/project%20log/cafe-project-22/" rel="alternate" type="text/html" title="JAVA Servlet 프로젝트) Cafe(웹 사이트) 만들기 22 - 게시판 이미지 썸네일 보여주는 기능 추가" /><published>2022-04-02T00:00:00+09:00</published><updated>2022-04-02T00:00:00+09:00</updated><id>http://localhost:4000/project%20log/cafe-project-22</id><content type="html" xml:base="http://localhost:4000/project%20log/cafe-project-22/"><![CDATA[<h1 id="개발환경">개발환경</h1>
<ul>
  <li>MacBook Air (M1, 2020)</li>
  <li>OpenJDK 8</li>
  <li>Eclipse 2021-12</li>
  <li>tomcat 8.5</li>
  <li>MySQL Workbench 8.0.19<br /><br /><br /></li>
</ul>

<h1 id="시작">시작</h1>
<ul>
  <li>2022.3.4 ~ <br /><br /><br /></li>
</ul>

<h1 id="주제">주제</h1>
<ul>
  <li>웹 백엔드 수업 중 중간 과제로 개인 프로젝트를 진행하게 되었다.</li>
  <li>회원가입/로그인/탈퇴 등 기본적인 회원관리 시스템을 가진 웹 사이트를 만드는 것이다. 주어진 기한은 <code class="language-plaintext highlighter-rouge">한 달</code></li>
  <li>나는 <code class="language-plaintext highlighter-rouge">다음 카페</code>를 소규모로 만들어 보기로 했다. 평소 자주 이용하기도 했고 과제의 평가 기준에서 요구하는 기능들을 다 담고 있기도 했기 때문에 이번 기회에 구현해 보면 그동안 배운 것들을 활용하기에 좋을 거 같았다.</li>
  <li>평가 기준에 사이트의 디자인 구현(HTML/CSS 등 프론트엔드)은 포함되지 않기 때문에 본인이 쓰고 싶은 HTML/CSS 템플릿을 구한 뒤 회원 관리 기능을 구현하면 된다.<br /><br /><br /></li>
</ul>

<h1 id="진행상황">진행상황</h1>
<ul>
  <li>게시글에 첨부된 이미지가 있으면 메인 화면에서 게시글 내용을 미리보기로 보여줄 때 이미지도 함께 보여주는 기능을 추가했다.</li>
  <li>원본 이미지로 썸네일용 이미지를 만들어주는 <code class="language-plaintext highlighter-rouge">Thumbnailator</code> 라이브러리를 사용했다.</li>
</ul>

<h2 id="thumbnailator-라이브러리-다운로드-및-설치">Thumbnailator 라이브러리 다운로드 및 설치</h2>
<ul>
  <li><a href="https://search.maven.org/artifact/net.coobird/thumbnailator/0.4.17/jar">https://search.maven.org/artifact/net.coobird/thumbnailator/0.4.17/jar</a></li>
  <li>위 사이트에 접속해서 오른쪽 상단에 보이는 <code class="language-plaintext highlighter-rouge">Download</code> 버튼을 눌러 <code class="language-plaintext highlighter-rouge">jar</code>파일을 다운로드 한다.</li>
  <li>다운받은 <code class="language-plaintext highlighter-rouge">thumbnailator-0.4.17.jar</code> 파일을 <code class="language-plaintext highlighter-rouge">WEB-INF/lib</code> 폴더에 넣는다.</li>
</ul>

<h2 id="boardwriteactionjava">BoardWriteAction.java</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.project.cafe.board.action</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.io.File</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.servlet.ServletContext</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletRequest</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletResponse</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">com.oreilly.servlet.multipart.FilePart</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.oreilly.servlet.multipart.MultipartParser</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.oreilly.servlet.multipart.ParamPart</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.oreilly.servlet.multipart.Part</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.project.cafe.action.Action</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.project.cafe.action.ActionForward</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.project.cafe.board.db.BoardDAO</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.project.cafe.board.db.BoardDTO</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">net.coobird.thumbnailator.Thumbnails</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">net.coobird.thumbnailator.name.Rename</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">BoardWriteAction</span> <span class="kd">implements</span> <span class="nc">Action</span> 
<span class="o">{</span>
    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="nc">ActionForward</span> <span class="nf">execute</span><span class="o">(</span><span class="nc">HttpServletRequest</span> <span class="n">request</span><span class="o">,</span> <span class="nc">HttpServletResponse</span> <span class="n">response</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">Exception</span> 
    <span class="o">{</span>
        <span class="c1">// .. 생략</span>
		
        <span class="k">while</span> <span class="o">((</span><span class="n">part</span> <span class="o">=</span> <span class="n">mp</span><span class="o">.</span><span class="na">readNextPart</span><span class="o">())</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span>
        <span class="o">{</span>
            <span class="c1">//.. 생략</span>
            
            <span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="n">part</span><span class="o">.</span><span class="na">isFile</span><span class="o">()</span> <span class="o">&amp;&amp;</span> <span class="n">name</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"image"</span><span class="o">))</span>
            <span class="o">{</span>
                <span class="c1">// 이미지 파일일 때</span>
                <span class="c1">// 이미지 저장 경로 지정</span>
                <span class="nc">File</span> <span class="n">dir</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">File</span><span class="o">(</span><span class="n">ctx</span><span class="o">.</span><span class="na">getRealPath</span><span class="o">(</span><span class="s">"/images"</span><span class="o">));</span>
                <span class="nc">File</span> <span class="n">originDir</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">File</span><span class="o">(</span><span class="n">dir</span> <span class="o">+</span> <span class="nc">File</span><span class="o">.</span><span class="na">separator</span> <span class="o">+</span> <span class="s">"origins"</span><span class="o">);</span> <span class="c1">// 원본 이미지 저장 경로</span>
                <span class="nc">File</span> <span class="n">thumbnailDir</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">File</span><span class="o">(</span><span class="n">dir</span> <span class="o">+</span> <span class="nc">File</span><span class="o">.</span><span class="na">separator</span> <span class="o">+</span> <span class="s">"thumbnails"</span><span class="o">);</span> <span class="c1">// 썸네일 저장 경로</span>
				
                <span class="c1">// 경로가 없으면 생성</span>
                <span class="k">if</span> <span class="o">(!</span><span class="n">dir</span><span class="o">.</span><span class="na">isDirectory</span><span class="o">())</span> <span class="n">dir</span><span class="o">.</span><span class="na">mkdir</span><span class="o">();</span>
                <span class="k">if</span> <span class="o">(!</span><span class="n">originDir</span><span class="o">.</span><span class="na">isDirectory</span><span class="o">())</span> <span class="n">originDir</span><span class="o">.</span><span class="na">mkdir</span><span class="o">();</span>
                <span class="k">if</span> <span class="o">(!</span><span class="n">thumbnailDir</span><span class="o">.</span><span class="na">isDirectory</span><span class="o">())</span> <span class="n">thumbnailDir</span><span class="o">.</span><span class="na">mkdir</span><span class="o">();</span>
				
                <span class="nc">FilePart</span> <span class="n">filePart</span> <span class="o">=</span> <span class="o">(</span><span class="nc">FilePart</span><span class="o">)</span> <span class="n">part</span><span class="o">;</span>
                <span class="nc">String</span> <span class="n">file</span> <span class="o">=</span> <span class="n">filePart</span><span class="o">.</span><span class="na">getFileName</span><span class="o">();</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">file</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span>
                <span class="o">{</span>
                    <span class="c1">// 지정한 경로에 원본 이미지 파일 쓰기</span>
                    <span class="n">filePart</span><span class="o">.</span><span class="na">writeTo</span><span class="o">(</span><span class="n">originDir</span><span class="o">);</span>
                    <span class="n">dto</span><span class="o">.</span><span class="na">setImage</span><span class="o">(</span><span class="n">file</span><span class="o">);</span>
					
                    <span class="c1">// 원본 이미지 파일을 이용해서 썸네일을 만들어 저장</span>
                    <span class="c1">// 크기 지정 후 지정 경로에 저장</span>
                    <span class="nc">Thumbnails</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="k">new</span> <span class="nc">File</span><span class="o">(</span><span class="n">originDir</span><span class="o">.</span><span class="na">getPath</span><span class="o">()</span> <span class="o">+</span> <span class="nc">File</span><span class="o">.</span><span class="na">separator</span> <span class="o">+</span> <span class="n">file</span><span class="o">))</span>
                        <span class="o">.</span><span class="na">size</span><span class="o">(</span><span class="mi">300</span><span class="o">,</span> <span class="mi">400</span><span class="o">)</span>
                        <span class="o">.</span><span class="na">toFiles</span><span class="o">(</span><span class="n">thumbnailDir</span><span class="o">,</span> <span class="nc">Rename</span><span class="o">.</span><span class="na">NO_CHANGE</span><span class="o">);</span>
					
                    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"img name: "</span><span class="o">+</span><span class="n">file</span><span class="o">);</span>
                <span class="o">}</span>
                <span class="k">else</span> 
                    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"image; name: "</span> <span class="o">+</span> <span class="n">name</span> <span class="o">+</span> <span class="s">"; EMPTY"</span><span class="o">);</span>
            <span class="o">}</span>
            <span class="c1">// .. 생략</span>
        <span class="o">}</span>
		
        <span class="c1">// .. 생략</span>
		
        <span class="k">return</span> <span class="n">forward</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>새 게시글을 작성하는 서블릿에서 원본 이미지 외에도 썸네일을 만들어 저장하는 코드를 추가했다.</li>
  <li>원본 이미지와 썸네일을 저장할 폴더를 각각 구분해서 업로드한다.</li>
</ul>

<h2 id="boardimgactionjava">BoardImgAction.java</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.project.cafe.board.action</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.awt.image.renderable.ParameterBlock</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.File</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.FileInputStream</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.net.URLEncoder</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.servlet.ServletContext</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.ServletOutputStream</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletRequest</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletResponse</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">com.project.cafe.action.Action</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.project.cafe.action.ActionForward</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">BoardImgAction</span> <span class="kd">implements</span> <span class="nc">Action</span> 
<span class="o">{</span>
    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="nc">ActionForward</span> <span class="nf">execute</span><span class="o">(</span><span class="nc">HttpServletRequest</span> <span class="n">request</span><span class="o">,</span> <span class="nc">HttpServletResponse</span> <span class="n">response</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">Exception</span> 
    <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"M : BoardImgAction - execute() 호출"</span><span class="o">);</span>
		
        <span class="c1">// 전달된 이미지 파일 이름 저장</span>
        <span class="nc">String</span> <span class="n">originImgName</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"img_name"</span><span class="o">);</span>
        <span class="nc">String</span> <span class="n">thumbnailName</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"thumbnail"</span><span class="o">);</span>
        <span class="nc">String</span> <span class="n">imgName</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
		
        <span class="c1">// 서버에 업로드 된 폴더 찾기</span>
        <span class="nc">String</span> <span class="n">savePath</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">originImgName</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span>
        <span class="o">{</span>
            <span class="n">savePath</span> <span class="o">=</span> <span class="s">"images/origins"</span><span class="o">;</span>
            <span class="n">imgName</span> <span class="o">=</span> <span class="n">originImgName</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="k">else</span> 
        <span class="o">{</span>
            <span class="n">savePath</span> <span class="o">=</span> <span class="s">"images/thumbnails"</span><span class="o">;</span>
            <span class="n">imgName</span> <span class="o">=</span> <span class="n">thumbnailName</span><span class="o">;</span>
        <span class="o">}</span>
		
        <span class="c1">// 서버에 업로드 된 파일 위치 계산</span>
        <span class="nc">ServletContext</span> <span class="n">ctx</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getServletContext</span><span class="o">();</span>
        <span class="nc">String</span> <span class="n">downloadPath</span> <span class="o">=</span> <span class="n">ctx</span><span class="o">.</span><span class="na">getRealPath</span><span class="o">(</span><span class="n">savePath</span><span class="o">);</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"download path: "</span><span class="o">+</span><span class="n">downloadPath</span><span class="o">);</span>
		
        <span class="c1">// 다운로드 할 이미지의 전체 경로 계산</span>
        <span class="c1">// 사용자 OS에 따라 연결자 구분</span>
        <span class="nc">String</span> <span class="n">imgPath</span> <span class="o">=</span> <span class="n">downloadPath</span> <span class="o">+</span> <span class="nc">File</span><span class="o">.</span><span class="na">separator</span> <span class="o">+</span> <span class="n">imgName</span><span class="o">;</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"imgPath: "</span><span class="o">+</span><span class="n">imgPath</span><span class="o">);</span>
		
        <span class="c1">//.. 이하 생략</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>썸네일을 불러오는 로직 또한 기존에 만들었던 이미지 로드 로직과 같기 때문에 기존 함수를 약간 수정했다.</li>
  <li>파라미터로 받은 값에 따라 원본 이미지가 있는 폴더와 썸네일이 있는 폴더에 각각 접근해서 이미지를 불러온다.</li>
  <li>하략한 코드는 <a href="https://miro7923.github.io/project%20log/cafe-project-21/">JAVA Servlet 프로젝트) Cafe(웹 사이트) 만들기 21 - 게시물에 첨부된 이미지와 파일 다른 경로에 저장하기</a> 에서 확인할 수 있다.</li>
</ul>

<h2 id="mainjsp">main.jsp</h2>

<div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;section</span> <span class="na">data-theme=</span><span class="s">"_bgp"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;div</span> <span class="na">data-layout=</span><span class="s">"_r"</span> <span class="na">class=</span><span class="s">"MOD_ARTICLEBLOCKS1"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">data-layout=</span><span class="s">"al16 ec8"</span> <span class="na">class=</span><span class="s">"MOD_ARTICLEBLOCKS1_Cont"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;h2&gt;</span>최신글<span class="nt">&lt;/h2&gt;</span>
      <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">""</span> <span class="na">class=</span><span class="s">"MOD_ARTICLEBLOCKS1_BlockLarge"</span> <span class="na">id=</span><span class="s">"mainHref1"</span><span class="nt">&gt;</span>
        <span class="c">&lt;!-- 썸네일 보여주는 부분 --&gt;</span>
        <span class="nt">&lt;img</span> <span class="na">id=</span><span class="s">"thumbnail1"</span> <span class="na">src=</span><span class="s">""</span> <span class="na">class=</span><span class="s">"MOD_ARTICLEBLOCKS1_Img"</span> <span class="na">role=</span><span class="s">"img"</span> <span class="na">aria-label=</span><span class="s">"alt text"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"MOD_ARTICLEBLOCKS1_Txt"</span><span class="nt">&gt;</span>
          <span class="nt">&lt;h3</span> <span class="na">class=</span><span class="s">"MOD_ARTICLEBLOCKS1_Title"</span> <span class="na">id=</span><span class="s">"mainTitle1"</span><span class="nt">&gt;</span>Article Title<span class="nt">&lt;/h3&gt;</span>
          <span class="nt">&lt;p</span> <span class="na">class=</span><span class="s">"MOD_ARTICLEBLOCKS1_Category"</span> <span class="na">id=</span><span class="s">"mainContent1"</span><span class="nt">&gt;</span>Category<span class="nt">&lt;/p&gt;</span>
        <span class="nt">&lt;/div&gt;</span>
      <span class="nt">&lt;/a&gt;</span>
    <span class="nt">&lt;/div&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">data-layout=</span><span class="s">"al16 ch8 ec4"</span> <span class="na">class=</span><span class="s">"MOD_ARTICLEBLOCKS1_Cont"</span><span class="nt">&gt;</span>
      <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">""</span> <span class="na">class=</span><span class="s">"MOD_ARTICLEBLOCKS1_BlockSmall"</span> <span class="na">id=</span><span class="s">"mainHref2"</span><span class="nt">&gt;</span>
        <span class="c">&lt;!-- 썸네일 보여주는 부분 --&gt;</span>
        <span class="nt">&lt;img</span> <span class="na">id=</span><span class="s">"thumbnail2"</span> <span class="na">src=</span><span class="s">""</span> <span class="na">class=</span><span class="s">"MOD_ARTICLEBLOCKS1_Img"</span> <span class="na">role=</span><span class="s">"img"</span> <span class="na">aria-label=</span><span class="s">"alt text"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"MOD_ARTICLEBLOCKS1_Txt"</span><span class="nt">&gt;</span>
          <span class="nt">&lt;h3</span> <span class="na">class=</span><span class="s">"MOD_ARTICLEBLOCKS1_Title"</span> <span class="na">id=</span><span class="s">"mainTitle2"</span><span class="nt">&gt;</span>Article Title<span class="nt">&lt;/h3&gt;</span>
          <span class="nt">&lt;p</span> <span class="na">class=</span><span class="s">"MOD_ARTICLEBLOCKS1_Category"</span> <span class="na">id=</span><span class="s">"mainContent2"</span><span class="nt">&gt;</span>Category<span class="nt">&lt;/p&gt;</span>
        <span class="nt">&lt;/div&gt;</span>
      <span class="nt">&lt;/a&gt;</span>
    <span class="nt">&lt;/div&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">data-layout=</span><span class="s">"al16 ch8 ec4"</span> <span class="na">class=</span><span class="s">"MOD_ARTICLEBLOCKS1_Cont"</span><span class="nt">&gt;</span>
      <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"#"</span> <span class="na">class=</span><span class="s">"MOD_ARTICLEBLOCKS1_BlockSmall"</span> <span class="na">id=</span><span class="s">"mainHref3"</span><span class="nt">&gt;</span>
        <span class="c">&lt;!-- 썸네일 보여주는 부분 --&gt;</span>
        <span class="nt">&lt;img</span> <span class="na">id=</span><span class="s">"thumbnail3"</span> <span class="na">src=</span><span class="s">""</span> <span class="na">class=</span><span class="s">"MOD_ARTICLEBLOCKS1_Img"</span> <span class="na">role=</span><span class="s">"img"</span> <span class="na">aria-label=</span><span class="s">"alt text"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"MOD_ARTICLEBLOCKS1_Txt"</span><span class="nt">&gt;</span>
          <span class="nt">&lt;h3</span> <span class="na">class=</span><span class="s">"MOD_ARTICLEBLOCKS1_Title"</span> <span class="na">id=</span><span class="s">"mainTitle3"</span><span class="nt">&gt;</span>Article Title<span class="nt">&lt;/h3&gt;</span>
          <span class="nt">&lt;p</span> <span class="na">class=</span><span class="s">"MOD_ARTICLEBLOCKS1_Category"</span> <span class="na">id=</span><span class="s">"mainContent3"</span><span class="nt">&gt;</span>Category<span class="nt">&lt;/p&gt;</span>
        <span class="nt">&lt;/div&gt;</span>
      <span class="nt">&lt;/a&gt;</span>
    <span class="nt">&lt;/div&gt;</span>
  <span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/section&gt;</span>
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">img</code> 태그에 각각 <code class="language-plaintext highlighter-rouge">thumbnail1, 2, 3</code> 형식으로 <code class="language-plaintext highlighter-rouge">id</code>를 설정해 자바스크립트로 <code class="language-plaintext highlighter-rouge">src</code>를 세팅해 줄 것이다.</li>
</ul>

<h2 id="mainjs">main.js</h2>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">$</span><span class="p">(</span><span class="nb">document</span><span class="p">).</span><span class="nx">ready</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span>
<span class="p">{</span>
    <span class="nx">getFeeds</span><span class="p">();</span>
<span class="p">});</span>

<span class="kd">function</span> <span class="nx">getFeeds</span><span class="p">()</span>
<span class="p">{</span>
    <span class="nx">$</span><span class="p">.</span><span class="nx">ajax</span><span class="p">({</span>
        <span class="na">type</span><span class="p">:</span> <span class="dl">'</span><span class="s1">POST</span><span class="dl">'</span><span class="p">,</span>
        <span class="na">async</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
        <span class="na">url</span><span class="p">:</span> <span class="dl">'</span><span class="s1">./GetFeed.bo</span><span class="dl">'</span><span class="p">,</span>
        <span class="na">dataType</span><span class="p">:</span> <span class="dl">'</span><span class="s1">json</span><span class="dl">'</span><span class="p">,</span>
        <span class="na">data</span><span class="p">:</span> <span class="p">{</span>
            <span class="dl">'</span><span class="s1">cnt</span><span class="dl">'</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span>
            <span class="dl">'</span><span class="s1">len</span><span class="dl">'</span><span class="p">:</span> <span class="mi">70</span>
        <span class="p">},</span>
        <span class="na">success</span><span class="p">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">data</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">if</span> <span class="p">(</span><span class="nx">data</span> <span class="o">!=</span> <span class="kc">null</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">data</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span>
                <span class="p">{</span>
                    <span class="kd">var</span> <span class="nx">titleId</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">#mainTitle</span><span class="dl">'</span><span class="p">;</span>
                    <span class="nx">titleId</span> <span class="o">+=</span> <span class="p">(</span><span class="nx">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">);</span>
                    <span class="nx">$</span><span class="p">(</span><span class="nx">titleId</span><span class="p">).</span><span class="nx">html</span><span class="p">(</span><span class="nx">data</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">title</span><span class="p">);</span>

                    <span class="kd">var</span> <span class="nx">contentId</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">#mainContent</span><span class="dl">'</span><span class="p">;</span>
                    <span class="nx">contentId</span> <span class="o">+=</span> <span class="p">(</span><span class="nx">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">);</span>
                    <span class="nx">$</span><span class="p">(</span><span class="nx">contentId</span><span class="p">).</span><span class="nx">html</span><span class="p">(</span><span class="nx">data</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">content</span><span class="p">);</span>

                    <span class="kd">var</span> <span class="nx">hrefId</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">#mainHref</span><span class="dl">'</span><span class="p">;</span>
                    <span class="nx">hrefId</span> <span class="o">+=</span> <span class="p">(</span><span class="nx">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">);</span>
                    <span class="nx">$</span><span class="p">(</span><span class="nx">hrefId</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="dl">'</span><span class="s1">href</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">./BoardContent.bo?num=</span><span class="dl">'</span><span class="o">+</span><span class="nx">data</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">num</span><span class="o">+</span><span class="dl">'</span><span class="s1">&amp;pageNum=1</span><span class="dl">'</span><span class="p">);</span>
					
                    <span class="kd">var</span> <span class="nx">thumbnailId</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">#thumbnail</span><span class="dl">'</span><span class="p">;</span>
                    <span class="nx">thumbnailId</span> <span class="o">+=</span> <span class="p">(</span><span class="nx">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">);</span>
                    <span class="k">if</span> <span class="p">(</span><span class="nx">data</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">image</span> <span class="o">==</span> <span class="dl">'</span><span class="s1">없음</span><span class="dl">'</span><span class="p">)</span>
                        <span class="nx">$</span><span class="p">(</span><span class="nx">thumbnailId</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="dl">'</span><span class="s1">src</span><span class="dl">'</span><span class="p">,</span> <span class="dl">''</span><span class="p">);</span>
                    <span class="k">else</span> 
                        <span class="nx">$</span><span class="p">(</span><span class="nx">thumbnailId</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="dl">'</span><span class="s1">src</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">./BoardImgAction.bo?thumbnail=</span><span class="dl">'</span><span class="o">+</span><span class="nx">data</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">image</span><span class="p">);</span>
                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">});</span>
<span class="p">}</span>
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">GetFeed.java</code>에서 가져온 데이터 중 이미지 정보가 있을 때에만 썸네일 이미지를 출력한다.</li>
</ul>

<h2 id="getfeedjava">GetFeed.java</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.project.cafe.board.action</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletRequest</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletResponse</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">org.json.simple.JSONArray</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.json.simple.JSONObject</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">com.project.cafe.action.Action</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.project.cafe.action.ActionForward</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.project.cafe.board.db.BoardDAO</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.project.cafe.board.db.BoardDTO</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">GetFeed</span> <span class="kd">implements</span> <span class="nc">Action</span> 
<span class="o">{</span>
    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="nc">ActionForward</span> <span class="nf">execute</span><span class="o">(</span><span class="nc">HttpServletRequest</span> <span class="n">request</span><span class="o">,</span> <span class="nc">HttpServletResponse</span> <span class="n">response</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">Exception</span> 
    <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"ajax 시작_GetFeed - execute() 호출"</span><span class="o">);</span>
		
        <span class="nc">BoardDAO</span> <span class="n">dao</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BoardDAO</span><span class="o">();</span>
        <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">BoardDTO</span><span class="o">&gt;</span> <span class="n">list</span> <span class="o">=</span> <span class="n">dao</span><span class="o">.</span><span class="na">getPosts</span>
            <span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"cnt"</span><span class="o">)),</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"len"</span><span class="o">)));</span>
		
        <span class="c1">// DB에서 가져온 데이터들을 json에 저장</span>
        <span class="nc">JSONArray</span> <span class="n">feedList</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">JSONArray</span><span class="o">();</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">list</span><span class="o">.</span><span class="na">size</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span>
        <span class="o">{</span>
            <span class="nc">JSONObject</span> <span class="n">feed</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">JSONObject</span><span class="o">();</span>
            <span class="n">feed</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"num"</span><span class="o">,</span> <span class="n">list</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">).</span><span class="na">getNum</span><span class="o">());</span>
            <span class="n">feed</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"title"</span><span class="o">,</span> <span class="n">list</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">).</span><span class="na">getTitle</span><span class="o">());</span>
            <span class="n">feed</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"content"</span><span class="o">,</span> <span class="n">list</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">).</span><span class="na">getContent</span><span class="o">());</span>
            <span class="n">feed</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"image"</span><span class="o">,</span> <span class="n">list</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">).</span><span class="na">getImage</span><span class="o">());</span>
			
            <span class="n">feedList</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">feed</span><span class="o">);</span>
        <span class="o">}</span>
		
        <span class="c1">// 클라이언트에게 데이터 보내기</span>
        <span class="c1">// 한글처리</span>
        <span class="n">response</span><span class="o">.</span><span class="na">setCharacterEncoding</span><span class="o">(</span><span class="s">"UTF-8"</span><span class="o">);</span>
        <span class="c1">// json 데이터 넘김</span>
        <span class="n">response</span><span class="o">.</span><span class="na">getWriter</span><span class="o">().</span><span class="na">print</span><span class="o">(</span><span class="n">feedList</span><span class="o">.</span><span class="na">toJSONString</span><span class="o">());</span>
        <span class="n">response</span><span class="o">.</span><span class="na">getWriter</span><span class="o">().</span><span class="na">close</span><span class="o">();</span>
		
        <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">GetFeed.java</code>에서는 <code class="language-plaintext highlighter-rouge">json</code>데이터를 넘긴다.<br /><br /></li>
</ul>

<p align="center"><img src="../../assets/images/thumbnail.png" /></p>

<ul>
  <li>완성! 👏</li>
  <li>첨부된 이미지가 있을 때에만 썸네일을 출력하고 없을 때엔 출력하지 않는다.<br /><br /></li>
</ul>

<h1 id="출처">출처</h1>
<ul>
  <li><a href="https://nm-it-diary.tistory.com/66">[JAVA] 이미지 리사이즈, 썸네일 만들기 - Thumbnails.of</a><br /><br /><br /></li>
</ul>

<h1 id="마감까지">마감까지</h1>
<ul>
  <li>마감 기한이 늘어났다.</li>
  <li><code class="language-plaintext highlighter-rouge">D-5</code></li>
</ul>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="Project Log" /><category term="Project" /><category term="Cafe" /><category term="Log" /><summary type="html"><![CDATA[개발환경 MacBook Air (M1, 2020) OpenJDK 8 Eclipse 2021-12 tomcat 8.5 MySQL Workbench 8.0.19]]></summary></entry><entry><title type="html">MySQL) 다른 데이터베이스로 테이블 이동, 복사 및 변경하기</title><link href="http://localhost:4000/mysql/mysql-alter-table/" rel="alternate" type="text/html" title="MySQL) 다른 데이터베이스로 테이블 이동, 복사 및 변경하기" /><published>2022-04-01T00:00:00+09:00</published><updated>2022-04-01T00:00:00+09:00</updated><id>http://localhost:4000/mysql/mysql-alter-table</id><content type="html" xml:base="http://localhost:4000/mysql/mysql-alter-table/"><![CDATA[<h1 id="다른-데이터베이스로-테이블을-이동하고-싶을-때">다른 데이터베이스로 테이블을 이동하고 싶을 때</h1>
<ul>
  <li>테이블 이름을 변경하는 명령어는 다음과 같다.</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">alter</span> <span class="k">table</span> <span class="err">테이블명</span> <span class="k">rename</span> <span class="err">새</span> <span class="err">테이블명</span><span class="p">;</span>
</code></pre></div></div>
<p><br /></p>

<ul>
  <li>이걸 이용해서 테이블을 다른 데이터베이스로 옮길 수 있다.</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">alter</span> <span class="k">table</span> <span class="err">데이터베이스</span><span class="n">A</span><span class="p">.</span><span class="err">테이블명</span> <span class="k">rename</span> <span class="err">데이터베이스</span><span class="n">B</span><span class="p">.</span><span class="err">테이블명</span><span class="p">;</span>
</code></pre></div></div>
<p><br /><br /><br /></p>

<h1 id="테이블-복사">테이블 복사</h1>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">create</span> <span class="k">table</span> <span class="err">새</span> <span class="err">테이블명</span> <span class="k">like</span> <span class="err">복사할</span> <span class="err">테이블명</span><span class="p">;</span>
</code></pre></div></div>
<p><br /></p>

<ul>
  <li>이걸 이용해서 다른 데이터베이스에 있는 테이블을 복사할 수 있다.</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">create</span> <span class="k">table</span> <span class="err">데이터베이스</span><span class="n">A</span><span class="p">.</span><span class="err">테이블명</span> <span class="k">like</span> <span class="err">데이터베이스</span><span class="n">B</span><span class="p">.</span><span class="err">테이블명</span><span class="p">;</span>
</code></pre></div></div>
<p><br /></p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">insert</code> 구문을 이용한 방법</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">insert</span> <span class="k">into</span> <span class="err">새</span> <span class="err">테이블명</span> <span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="err">원본테이블명</span><span class="p">;</span>
</code></pre></div></div>
<p><br /></p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">insert</code> 구문을 이용해서 다른 데이터베이스에 있는 테이블 복사</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">insert</span> <span class="k">into</span> <span class="err">데이터베이스</span><span class="n">B</span><span class="p">.</span><span class="err">테이블명</span> <span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="err">데이터베이스</span><span class="n">A</span><span class="p">.</span><span class="err">테이블명</span><span class="p">;</span>
</code></pre></div></div>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="MySQL" /><category term="MySQL" /><category term="alterTable" /><summary type="html"><![CDATA[다른 데이터베이스로 테이블을 이동하고 싶을 때 테이블 이름을 변경하는 명령어는 다음과 같다.]]></summary></entry><entry><title type="html">Python) 이것이 취업을 위한 코딩테스트다 07 실전문제 3. 떡볶이 떡 만들기</title><link href="http://localhost:4000/boj/CodingTestBook-07-8-py/" rel="alternate" type="text/html" title="Python) 이것이 취업을 위한 코딩테스트다 07 실전문제 3. 떡볶이 떡 만들기" /><published>2022-04-01T00:00:00+09:00</published><updated>2022-04-01T00:00:00+09:00</updated><id>http://localhost:4000/boj/CodingTestBook-07-8-py</id><content type="html" xml:base="http://localhost:4000/boj/CodingTestBook-07-8-py/"><![CDATA[<h1 id="문제-출처">문제 출처</h1>
<hr />

<ul>
  <li>이것이 취업을 위한 코딩테스트다 with 파이썬</li>
  <li>Chapter 07 - 실전문제 3. 떡볶이 떡 만들기<br /><br /></li>
</ul>

<h1 id="제한">제한</h1>
<hr />

<ul>
  <li>시간 제한 : 2 초</li>
  <li>메모리 제한 : 128 MB<br /><br /></li>
</ul>

<h1 id="문제">문제</h1>
<hr />

<ul>
  <li>오늘 동빈이는 여행 가신 부모님을 대신해서 떡집 일을 하기로 했다. 오늘은 떡볶이 떡을 만드는 날이다. 동빈이네 떡볶이 떡은 재밌게도 떡볶이 떡의 길이가 일정하지 않다. 대신에 한 봉지 안에 들어가는 떡의 총 길이는 절단기로 잘라서 맞춰준다.</li>
  <li>절단기에 높이(H)를 지정하면 줄지어진 떡을 한 번에 절단한다. 높이가 H보다 긴 떡은 H 위의 부분이 잘릴 것이고, 낮은 떡은 잘리지 않는다.</li>
  <li>예를 들어 높이가 19, 14, 10, 17cm인 떡이 나란히 있고 절단기 높이를 15cm로 지정하면 자른 뒤 떡의 높이는 15, 14, 10, 15cm가 될 것이다. 잘린 떡의 높이는 차례대로 4, 0, 0, 2cm이다. 손님은 6cm만큼의 길이를 가져간다.</li>
  <li>손님이 왔을 때 요청한 총 길이가 M일 때 적어도 M만큼의 떡을 얻기 위해 절단기에 설정할 수 있는 높이의 최댓값을 구하는 프로그램을 작성하시오.<br /><br /></li>
</ul>

<h1 id="입력">입력</h1>
<hr />

<ul>
  <li>첫째 줄에 떡의 개수 N과 요청한 떡의 길이 M이 주어진다. (1 &lt;= N &lt;= 1,000,000, 1 &lt;= M &lt;= 2,000,000,000)</li>
  <li>둘째 줄에는 떡의 개별 높이가 주어진다. 떡 높이의 총합은 항상 M 이상이므로, 손님은 필요한 양만큼 떡을 사갈 수 있다. 높이는 10억보다 작거나 같은 양의 정수 또는 0이다.<br /><br /></li>
</ul>

<h1 id="출력">출력</h1>
<hr />

<ul>
  <li>적어도 M만큼의 떡을 집에 가져가기 위해 절단기에 설정할 수 있는 높이의 최댓값을 출력한다.<br /><br /><br /></li>
</ul>

<h1 id="-풀이">👀 풀이</h1>
<hr />

<ul>
  <li>이진탐색 문제이자 파라메트릭 서치 문제라고 한다.</li>
  <li>이런 유형의 문제는 풀어본 적이 없어서 책에 나와 있는 해설을 보고 풀었다.</li>
  <li>자른 떡의 길이가 M과 같아질 때까지 절단기의 위치를 옮겨가면서 적절한 높이(H)를 찾는다.<br /><br /></li>
</ul>

<h1 id="코드">코드</h1>
<hr />

<script src="https://gist.github.com/miro7923/16e20d83fcb01090e7464e072607dbdb.js"></script>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="BOJ" /><category term="Algorithm" /><category term="BinarySearch" /><category term="Python" /><summary type="html"><![CDATA[문제 출처 이것이 취업을 위한 코딩테스트다 with 파이썬 Chapter 07 - 실전문제 3. 떡볶이 떡 만들기 제한 시간 제한 : 2 초 메모리 제한 : 128 MB]]></summary></entry><entry><title type="html">Python) 이것이 취업을 위한 코딩테스트다 07 실전문제 2. 부품 찾기</title><link href="http://localhost:4000/boj/CodingTestBook-07-5-py/" rel="alternate" type="text/html" title="Python) 이것이 취업을 위한 코딩테스트다 07 실전문제 2. 부품 찾기" /><published>2022-04-01T00:00:00+09:00</published><updated>2022-04-01T00:00:00+09:00</updated><id>http://localhost:4000/boj/CodingTestBook-07-5-py</id><content type="html" xml:base="http://localhost:4000/boj/CodingTestBook-07-5-py/"><![CDATA[<h1 id="문제-출처">문제 출처</h1>
<hr />

<ul>
  <li>이것이 취업을 위한 코딩테스트다 with 파이썬</li>
  <li>Chapter 07 - 실전문제 2. 부품 찾기<br /><br /></li>
</ul>

<h1 id="제한">제한</h1>
<hr />

<ul>
  <li>시간 제한 : 1 초</li>
  <li>메모리 제한 : 128 MB<br /><br /></li>
</ul>

<h1 id="문제">문제</h1>
<hr />

<ul>
  <li>동빈이네 전자 매장에는 부품이 N개 있다. 각 부품은 정수 형태의 고유한 번호가 있다. 어느 날 손님이 M개 종류의 부품을 대량으로 구매하겠다며 당일 날 견적서를 요청했다. 동빈이는 때를 놓치지 않고 손님이 문의한 부품 M개 종류를 모두 확인해서 견적서를 작성해야 한다. 이때 가게 안에 부품이 모두 있는지 확인하는 프로그램을 작성해보자.</li>
  <li>손님이 요청한 부품 번호의 순서대로 부품을 확인해 부품이 있으면 yes를, 없으면 no를 출력한다. 구분은 공백으로 한다.<br /><br /></li>
</ul>

<h1 id="입력">입력</h1>
<hr />

<ul>
  <li>첫째 줄에 정수 N이 주어진다. (1 &lt;= N &lt;= 1,000,000)</li>
  <li>둘째 줄에는 공백으로 구분하여 N개의 정수가 주어진다. 이때 정수는 1보다 크고 1,000,000 이하이다.</li>
  <li>셋째 줄에는 정수 M이 주어진다. (1 &lt;= M &lt;= 100,000)</li>
  <li>넷째 줄에는 공백으로 구분하여 M개의 정수가 주어진다. 이때 정수는 1보다 크고 1,000,000 이하이다.<br /><br /></li>
</ul>

<h1 id="출력">출력</h1>
<hr />

<ul>
  <li>첫째 줄에 공백으로 구분하여 각 부품이 존재하면 yes를, 없으면 no를 출력한다.<br /><br /><br /></li>
</ul>

<h1 id="-풀이">👀 풀이</h1>
<hr />

<ul>
  <li>이진탐색으로 풀 수 있는 문제이지만 책에는 이진탐색 외에도 두 가지 방법을 더 사용해 푸는 방법이 나와 있어서 모두 연습해 보았다.</li>
  <li>이진탐색으로 풀 경우에는 가게에 있는 부품 배열을 먼저 오름차순으로 정렬한 후에 손님 배열의 원소를 하나씩 이진탐색으로 찾는다.<br /><br /></li>
</ul>

<h1 id="코드">코드</h1>
<hr />

<ul>
  <li>이진탐색 코드</li>
</ul>

<script src="https://gist.github.com/miro7923/c1027fffb78b83143e2238e337f9fd37.js"></script>

<ul>
  <li>계수정렬을 사용한 코드</li>
</ul>

<script src="https://gist.github.com/miro7923/cac49cf2696f190a80f965bd68662e02.js"></script>

<ul>
  <li>집합 자료형을 사용한 코드</li>
</ul>

<script src="https://gist.github.com/miro7923/71c4854afe7c44680d6208f1caabab6a.js"></script>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="BOJ" /><category term="Algorithm" /><category term="BinarySearch" /><category term="Python" /><summary type="html"><![CDATA[문제 출처 이것이 취업을 위한 코딩테스트다 with 파이썬 Chapter 07 - 실전문제 2. 부품 찾기 제한 시간 제한 : 1 초 메모리 제한 : 128 MB]]></summary></entry><entry><title type="html">JAVA Servlet 프로젝트) Cafe(웹 사이트) 만들기 21 - 게시물에 첨부된 이미지와 파일 다른 경로에 저장하기</title><link href="http://localhost:4000/project%20log/cafe-project-21/" rel="alternate" type="text/html" title="JAVA Servlet 프로젝트) Cafe(웹 사이트) 만들기 21 - 게시물에 첨부된 이미지와 파일 다른 경로에 저장하기" /><published>2022-04-01T00:00:00+09:00</published><updated>2022-04-01T00:00:00+09:00</updated><id>http://localhost:4000/project%20log/cafe-project-21</id><content type="html" xml:base="http://localhost:4000/project%20log/cafe-project-21/"><![CDATA[<h1 id="개발환경">개발환경</h1>
<ul>
  <li>MacBook Air (M1, 2020)</li>
  <li>OpenJDK 8</li>
  <li>Eclipse 2021-12</li>
  <li>tomcat 8.5</li>
  <li>MySQL Workbench 8.0.19<br /><br /><br /></li>
</ul>

<h1 id="시작">시작</h1>
<ul>
  <li>2022.3.4 ~ <br /><br /><br /></li>
</ul>

<h1 id="주제">주제</h1>
<ul>
  <li>웹 백엔드 수업 중 중간 과제로 개인 프로젝트를 진행하게 되었다.</li>
  <li>회원가입/로그인/탈퇴 등 기본적인 회원관리 시스템을 가진 웹 사이트를 만드는 것이다. 주어진 기한은 <code class="language-plaintext highlighter-rouge">한 달</code></li>
  <li>나는 <code class="language-plaintext highlighter-rouge">다음 카페</code>를 소규모로 만들어 보기로 했다. 평소 자주 이용하기도 했고 과제의 평가 기준에서 요구하는 기능들을 다 담고 있기도 했기 때문에 이번 기회에 구현해 보면 그동안 배운 것들을 활용하기에 좋을 거 같았다.</li>
  <li>평가 기준에 사이트의 디자인 구현(HTML/CSS 등 프론트엔드)은 포함되지 않기 때문에 본인이 쓰고 싶은 HTML/CSS 템플릿을 구한 뒤 회원 관리 기능을 구현하면 된다.<br /><br /><br /></li>
</ul>

<h1 id="진행상황">진행상황</h1>
<ul>
  <li>게시물에 이미지를 첨부하고 볼 수 있는 기능을 추가했다.</li>
  <li>한 게시물에 이미지와 일반 파일을 함께 업로드 할 수 있게 했다. 그래서 이미지와 일반 파일을 다른 경로에 업로드할 것이다.</li>
  <li><code class="language-plaintext highlighter-rouge">COS</code> 라이브러리를 사용했다.</li>
</ul>

<h2 id="cos-라이브러리-다운로드-및-설치">COS 라이브러리 다운로드 및 설치</h2>
<ul>
  <li><a href="http://www.servlets.com/cos/">http://www.servlets.com/</a></li>
  <li>위 사이트에 접속해서 하단에 <code class="language-plaintext highlighter-rouge">Download</code> 탭에 있는 압축파일을 다운로드 한다.</li>
  <li>다운받은 파일 압축을 푼 후 <code class="language-plaintext highlighter-rouge">cos.jar</code> 파일을 <code class="language-plaintext highlighter-rouge">WEB-INF/lib</code> 폴더에 넣는다.</li>
</ul>

<h2 id="boardwritejsp">boardWrite.jsp</h2>

<div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;section</span> <span class="na">class=</span><span class="s">"MOD_SUBNAVIGATION1"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;div</span> <span class="na">data-layout=</span><span class="s">"_r"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;jsp:include </span><span class="na">page=</span><span class="s">"../inc/leftNav.jsp"</span><span class="nt">&gt;&lt;/jsp:include&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">data-layout=</span><span class="s">"al-o1 de-o2 de10"</span> <span class="na">class=</span><span class="s">"MOD_SUBNAVIGATION1_Page"</span><span class="nt">&gt;</span>
    	<span class="nt">&lt;h2&gt;</span>게시글 작성<span class="nt">&lt;/h2&gt;</span>
    	<span class="nt">&lt;form</span> <span class="na">name=</span><span class="s">"write"</span> <span class="na">action=</span><span class="s">"./BoardWriteAction.bo"</span> <span class="na">method=</span><span class="s">"post"</span> <span class="na">enctype=</span><span class="s">"multipart/form-data"</span> <span class="na">onsubmit=</span><span class="s">"return finalCheck();"</span><span class="nt">&gt;</span>
    	<span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"hidden"</span> <span class="na">name=</span><span class="s">"id"</span> <span class="na">value=</span><span class="s">"</span><span class="nt">&lt;%=</span><span class="n">id</span><span class="nt">%&gt;</span><span class="s">"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"formRow"</span><span class="nt">&gt;</span>
          <span class="nt">&lt;label</span> <span class="na">for=</span><span class="s">"MOD_TEXTFORM_NameField"</span><span class="nt">&gt;</span>제목 <span class="nt">&lt;/label&gt;&lt;input</span> <span class="na">type=</span><span class="s">"text"</span> <span class="na">name=</span><span class="s">"title"</span> <span class="na">id=</span><span class="s">"title"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;/div&gt;</span>
        <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"formRow"</span><span class="nt">&gt;</span>
          <span class="nt">&lt;label</span> <span class="na">for=</span><span class="s">"MOD_TEXTFORM_MsgField"</span><span class="nt">&gt;</span>내용 <span class="nt">&lt;/label&gt;</span>
          <span class="nt">&lt;textarea</span> <span class="na">id=</span><span class="s">"MOD_TEXTFORM_MsgField"</span> <span class="na">name=</span><span class="s">"content"</span><span class="nt">&gt;&lt;/textarea&gt;</span>
        <span class="nt">&lt;/div&gt;</span>
        <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"formRow"</span><span class="nt">&gt;</span>
          <span class="nt">&lt;label</span> <span class="na">for=</span><span class="s">"MOD_TEXTFORM_NameField"</span><span class="nt">&gt;</span>이미지 등록 <span class="nt">&lt;/label&gt;&lt;input</span> <span class="na">type=</span><span class="s">"file"</span> <span class="na">name=</span><span class="s">"image"</span> <span class="na">id=</span><span class="s">"image"</span> <span class="na">oninput=</span><span class="s">"formatCheck();"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;/div&gt;</span>
        <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"formRow"</span><span class="nt">&gt;</span>
          <span class="nt">&lt;label</span> <span class="na">for=</span><span class="s">"MOD_TEXTFORM_NameField"</span><span class="nt">&gt;</span>파일 등록 <span class="nt">&lt;/label&gt;&lt;input</span> <span class="na">type=</span><span class="s">"file"</span> <span class="na">name=</span><span class="s">"file"</span> <span class="na">id=</span><span class="s">"file"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;/div&gt;</span>
        <span class="nt">&lt;button</span> <span class="na">type=</span><span class="s">"submit"</span> <span class="na">class=</span><span class="s">"btn"</span><span class="nt">&gt;</span>글 등록<span class="nt">&lt;/button&gt;</span>
      <span class="nt">&lt;/form&gt;</span>
      <span class="nt">&lt;/div&gt;</span>
  <span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/section&gt;</span>
</code></pre></div></div>

<ul>
  <li>이미지 파일 등록도 <code class="language-plaintext highlighter-rouge">input</code> 태그의 <code class="language-plaintext highlighter-rouge">file</code> 속성을 사용한다.</li>
</ul>

<h2 id="boardcontentjs">BoardContent.js</h2>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nx">formatCheck</span><span class="p">()</span>
<span class="p">{</span>
    <span class="c1">// 확장자 확인할 정규식</span>
    <span class="kd">var</span> <span class="nx">regex</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="dl">"</span><span class="s2">(.*?)</span><span class="se">\</span><span class="s2">.(jpg|jpeg|png|gif)</span><span class="dl">"</span><span class="p">);</span>
    <span class="kd">var</span> <span class="nx">maxSize</span> <span class="o">=</span> <span class="mi">10</span> <span class="o">*</span> <span class="mi">1024</span> <span class="o">*</span> <span class="mi">1024</span><span class="p">;</span>
	
    <span class="kd">var</span> <span class="nx">fileSize</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">#image</span><span class="dl">'</span><span class="p">)[</span><span class="mi">0</span><span class="p">].</span><span class="nx">files</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">size</span><span class="p">;</span>
    <span class="k">if</span> <span class="p">(</span><span class="nx">fileSize</span> <span class="o">&gt;</span> <span class="nx">maxSize</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nx">alert</span><span class="p">(</span><span class="dl">'</span><span class="s1">5MB 이하만 첨부 가능합니다.</span><span class="dl">'</span><span class="p">);</span>
        <span class="nx">crossBrowsing</span><span class="p">();</span>
    <span class="p">}</span>
	
    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">regex</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">#image</span><span class="dl">'</span><span class="p">).</span><span class="nx">val</span><span class="p">()))</span>
    <span class="p">{</span>
        <span class="nx">alert</span><span class="p">(</span><span class="dl">'</span><span class="s1">확장자가 jpeg, jpg, png, gif인 이미지 파일만 등록 가능합니다.</span><span class="dl">'</span><span class="p">);</span>
        <span class="nx">crossBrowsing</span><span class="p">();</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="kd">function</span> <span class="nx">crossBrowsing</span><span class="p">()</span>
<span class="p">{</span>
    <span class="kd">var</span> <span class="nx">agent</span> <span class="o">=</span> <span class="nb">navigator</span><span class="p">.</span><span class="nx">userAgent</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">();</span>
	
    <span class="c1">// 크로스 브라우징 처리</span>
    <span class="c1">// IE일 때</span>
    <span class="k">if</span> <span class="p">(</span><span class="nb">navigator</span><span class="p">.</span><span class="nx">appName</span> <span class="o">==</span> <span class="dl">'</span><span class="s1">Netscape</span><span class="dl">'</span> <span class="o">&amp;&amp;</span> <span class="nb">navigator</span><span class="p">.</span><span class="nx">userAgent</span><span class="p">.</span><span class="nx">search</span><span class="p">(</span><span class="dl">'</span><span class="s1">Trident</span><span class="dl">'</span><span class="p">)</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span> <span class="o">||</span> <span class="nx">agent</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="dl">"</span><span class="s2">msie</span><span class="dl">"</span><span class="p">)</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span>
        <span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">#image</span><span class="dl">'</span><span class="p">).</span><span class="nx">replaceWith</span><span class="p">(</span><span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">#image</span><span class="dl">'</span><span class="p">).</span><span class="nx">clone</span><span class="p">(</span><span class="kc">true</span><span class="p">));</span>
    <span class="k">else</span> <span class="c1">// 그 외 브라우저</span>
        <span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">#image</span><span class="dl">'</span><span class="p">).</span><span class="nx">val</span><span class="p">(</span><span class="dl">''</span><span class="p">);</span>	
<span class="p">}</span>
</code></pre></div></div>

<ul>
  <li>이미지 파일 업로드를 시도하면 파일 크기와 확장자 확인을 통해 유효한 파일만 등록할 수 있게 한다.</li>
</ul>

<h2 id="boardwriteactionjava">BoardWriteAction.java</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.project.cafe.board.action</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.io.File</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.servlet.ServletContext</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletRequest</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletResponse</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">com.oreilly.servlet.multipart.FilePart</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.oreilly.servlet.multipart.MultipartParser</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.oreilly.servlet.multipart.ParamPart</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.oreilly.servlet.multipart.Part</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.project.cafe.action.Action</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.project.cafe.action.ActionForward</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.project.cafe.board.db.BoardDAO</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.project.cafe.board.db.BoardDTO</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">BoardWriteAction</span> <span class="kd">implements</span> <span class="nc">Action</span> 
<span class="o">{</span>
    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="nc">ActionForward</span> <span class="nf">execute</span><span class="o">(</span><span class="nc">HttpServletRequest</span> <span class="n">request</span><span class="o">,</span> <span class="nc">HttpServletResponse</span> <span class="n">response</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">Exception</span> 
    <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"M : BoardWriteAction - execute() 호출"</span><span class="o">);</span>
		
        <span class="n">request</span><span class="o">.</span><span class="na">setCharacterEncoding</span><span class="o">(</span><span class="s">"utf-8"</span><span class="o">);</span>
		
        <span class="nc">BoardDTO</span> <span class="n">dto</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BoardDTO</span><span class="o">();</span>
		
        <span class="nc">ServletContext</span> <span class="n">ctx</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getServletContext</span><span class="o">();</span>
		
        <span class="c1">// 파일의 저장크기</span>
        <span class="kt">int</span> <span class="n">maxSize</span> <span class="o">=</span> <span class="mi">10</span> <span class="o">*</span> <span class="mi">1024</span> <span class="o">*</span> <span class="mi">1024</span><span class="o">;</span> <span class="c1">// 10MB</span>
		
        <span class="nc">MultipartParser</span> <span class="n">mp</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">MultipartParser</span><span class="o">(</span><span class="n">request</span><span class="o">,</span> <span class="n">maxSize</span><span class="o">);</span>
        <span class="n">mp</span><span class="o">.</span><span class="na">setEncoding</span><span class="o">(</span><span class="s">"utf-8"</span><span class="o">);</span>
        <span class="nc">Part</span> <span class="n">part</span><span class="o">;</span>
		
        <span class="k">while</span> <span class="o">((</span><span class="n">part</span> <span class="o">=</span> <span class="n">mp</span><span class="o">.</span><span class="na">readNextPart</span><span class="o">())</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span>
        <span class="o">{</span>
            <span class="c1">// form 태그로 저장된 파라미터를 읽어옴</span>
            <span class="nc">String</span> <span class="n">name</span> <span class="o">=</span> <span class="n">part</span><span class="o">.</span><span class="na">getName</span><span class="o">();</span>
			
            <span class="k">if</span> <span class="o">(</span><span class="n">part</span><span class="o">.</span><span class="na">isParam</span><span class="o">())</span>
            <span class="o">{</span>
                <span class="c1">// 파일이 아닐 때</span>
                <span class="nc">ParamPart</span> <span class="n">param</span> <span class="o">=</span> <span class="o">(</span><span class="nc">ParamPart</span><span class="o">)</span><span class="n">part</span><span class="o">;</span>
                <span class="nc">String</span> <span class="n">value</span> <span class="o">=</span> <span class="n">param</span><span class="o">.</span><span class="na">getStringValue</span><span class="o">();</span>
				
                <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"param name :"</span> <span class="o">+</span> <span class="n">name</span> <span class="o">+</span> <span class="s">" value : "</span> <span class="o">+</span> <span class="n">value</span><span class="o">);</span>
				
                <span class="c1">// 각 파라미터에 맞춰 dto에 저장</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">name</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"id"</span><span class="o">))</span>
                    <span class="n">dto</span><span class="o">.</span><span class="na">setId</span><span class="o">(</span><span class="n">value</span><span class="o">);</span>
                <span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="n">name</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"title"</span><span class="o">))</span>
                    <span class="n">dto</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="n">value</span><span class="o">);</span>
                <span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="n">name</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"content"</span><span class="o">))</span>
                    <span class="n">dto</span><span class="o">.</span><span class="na">setContent</span><span class="o">(</span><span class="n">value</span><span class="o">);</span>
            <span class="o">}</span>
            <span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="n">part</span><span class="o">.</span><span class="na">isFile</span><span class="o">()</span> <span class="o">&amp;&amp;</span> <span class="n">name</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"image"</span><span class="o">))</span>
            <span class="o">{</span>
                <span class="c1">// 이미지 파일일 때</span>
                <span class="c1">// 이미지 저장 경로 지정</span>
                <span class="nc">File</span> <span class="n">dir</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">File</span><span class="o">(</span><span class="n">ctx</span><span class="o">.</span><span class="na">getRealPath</span><span class="o">(</span><span class="s">"/images"</span><span class="o">));</span>
				
                <span class="c1">// 경로가 없으면 생성</span>
                <span class="k">if</span> <span class="o">(!</span><span class="n">dir</span><span class="o">.</span><span class="na">isDirectory</span><span class="o">())</span> <span class="n">dir</span><span class="o">.</span><span class="na">mkdir</span><span class="o">();</span>
				
                <span class="nc">FilePart</span> <span class="n">filePart</span> <span class="o">=</span> <span class="o">(</span><span class="nc">FilePart</span><span class="o">)</span> <span class="n">part</span><span class="o">;</span>
                <span class="nc">String</span> <span class="n">file</span> <span class="o">=</span> <span class="n">filePart</span><span class="o">.</span><span class="na">getFileName</span><span class="o">();</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">file</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span>
                <span class="o">{</span>
                    <span class="c1">// 지정한 경로에 파일 쓰기</span>
                    <span class="n">filePart</span><span class="o">.</span><span class="na">writeTo</span><span class="o">(</span><span class="n">dir</span><span class="o">);</span>
                    <span class="n">dto</span><span class="o">.</span><span class="na">setImage</span><span class="o">(</span><span class="n">file</span><span class="o">);</span>
                    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"img name: "</span><span class="o">+</span><span class="n">file</span><span class="o">);</span>
                <span class="o">}</span>
                <span class="k">else</span> 
                    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"image; name: "</span> <span class="o">+</span> <span class="n">name</span> <span class="o">+</span> <span class="s">"; EMPTY"</span><span class="o">);</span>
            <span class="o">}</span>
            <span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="n">part</span><span class="o">.</span><span class="na">isFile</span><span class="o">()</span> <span class="o">&amp;&amp;</span> <span class="n">name</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"file"</span><span class="o">))</span>
            <span class="o">{</span>
                <span class="c1">// 일반 파일일 때</span>
                <span class="nc">File</span> <span class="n">dir</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">File</span><span class="o">(</span><span class="n">ctx</span><span class="o">.</span><span class="na">getRealPath</span><span class="o">(</span><span class="s">"/upload"</span><span class="o">));</span>
				
                <span class="c1">// 경로 없으면 생성</span>
                <span class="k">if</span> <span class="o">(!</span><span class="n">dir</span><span class="o">.</span><span class="na">isDirectory</span><span class="o">())</span> <span class="n">dir</span><span class="o">.</span><span class="na">mkdir</span><span class="o">();</span>
				
                <span class="nc">FilePart</span> <span class="n">filePart</span> <span class="o">=</span> <span class="o">(</span><span class="nc">FilePart</span><span class="o">)</span> <span class="n">part</span><span class="o">;</span>
                <span class="nc">String</span> <span class="n">file</span> <span class="o">=</span> <span class="n">filePart</span><span class="o">.</span><span class="na">getFileName</span><span class="o">();</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">file</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span>
                <span class="o">{</span>
                    <span class="n">filePart</span><span class="o">.</span><span class="na">writeTo</span><span class="o">(</span><span class="n">dir</span><span class="o">);</span> <span class="c1">// 지정한 경로에 파일 쓰기</span>
                    <span class="n">dto</span><span class="o">.</span><span class="na">setFile</span><span class="o">(</span><span class="n">file</span><span class="o">);</span>
                    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"file name: "</span><span class="o">+</span><span class="n">file</span><span class="o">);</span>
                <span class="o">}</span>
                <span class="k">else</span>
                    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"file; name: "</span> <span class="o">+</span> <span class="n">name</span> <span class="o">+</span> <span class="s">"; EMPTY"</span><span class="o">);</span>
            <span class="o">}</span>
        <span class="o">}</span>
		
        <span class="c1">// 사용자 ip주소 저장</span>
        <span class="n">dto</span><span class="o">.</span><span class="na">setIp</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getRemoteAddr</span><span class="o">());</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"M : "</span><span class="o">+</span><span class="n">dto</span><span class="o">);</span>
		
        <span class="c1">// DB에 DTO 보내서 저장</span>
        <span class="nc">BoardDAO</span> <span class="n">dao</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BoardDAO</span><span class="o">();</span>
        <span class="n">dao</span><span class="o">.</span><span class="na">insertPost</span><span class="o">(</span><span class="n">dto</span><span class="o">);</span>
		
        <span class="c1">// 완료되면 글 목록 페이지로 이동</span>
        <span class="nc">ActionForward</span> <span class="n">forward</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ActionForward</span><span class="o">();</span>
        <span class="n">forward</span><span class="o">.</span><span class="na">setPath</span><span class="o">(</span><span class="s">"./BoardList.bo"</span><span class="o">);</span>
        <span class="n">forward</span><span class="o">.</span><span class="na">setRedirect</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
		
        <span class="k">return</span> <span class="n">forward</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>한 게시물에서 이미지와 일반파일 두 개가 업로드 되는데 파일 종류별로 경로를 나눠서 저장하고 싶었다.</li>
  <li>한 폴더에 들어 있으면 정신없기도 하지만 종류별로 구분해 놓으면 이미지를 불러올 땐 이미지만 저장된 폴더에서 찾아서 가져오면 되니까 한꺼번에 섞인 폴더에서 찾아오는 것 보다는 빠르게 찾아올 수 있을 것이라 생각했기 때문이다.</li>
  <li>그래서 <code class="language-plaintext highlighter-rouge">MultipartParser</code>를 사용해서 파라미터 이름별로 업로드 경로를 구분해서 파일을 업로드 한다.</li>
</ul>

<h2 id="boardcontentjsp">boardContent.jsp</h2>

<div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;tbody&gt;</span>
  <span class="nt">&lt;tr&gt;</span>
    <span class="nt">&lt;td</span> <span class="na">colspan=</span><span class="s">"5"</span> <span class="na">style=</span><span class="s">"white-space:pre-wrap; word-wrap:break-word; word-break: break-all;"</span><span class="nt">&gt;&lt;%=</span><span class="n">dto</span><span class="o">.</span><span class="na">getContent</span><span class="o">()</span> <span class="nt">%&gt;&lt;br&gt;&lt;br&gt;</span>
      <span class="nt">&lt;%</span><span class="k">if</span> <span class="o">(</span><span class="n">dto</span><span class="o">.</span><span class="na">getImage</span><span class="o">()</span> <span class="o">!=</span> <span class="kc">null</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="n">dto</span><span class="o">.</span><span class="na">getImage</span><span class="o">().</span><span class="na">equals</span><span class="o">(</span><span class="s">"없음"</span><span class="o">))</span> <span class="o">{</span> <span class="nt">%&gt;</span>
        <span class="nt">&lt;img</span> <span class="na">src=</span><span class="s">"./BoardImgAction.bo?img_name=</span><span class="nt">&lt;%=</span><span class="n">dto</span><span class="o">.</span><span class="na">getImage</span><span class="o">()</span> <span class="nt">%&gt;</span><span class="s">"</span><span class="nt">&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/td&gt;</span>
      <span class="nt">&lt;%</span> <span class="o">}</span> <span class="nt">%&gt;</span>
  <span class="nt">&lt;/tr&gt;</span>
  <span class="nt">&lt;tr&gt;</span>
    <span class="nt">&lt;td</span> <span class="na">colspan=</span><span class="s">"2"</span><span class="nt">&gt;</span>첨부파일<span class="nt">&lt;/td&gt;</span>
    <span class="nt">&lt;td</span> <span class="na">colspan=</span><span class="s">"3"</span><span class="nt">&gt;</span>
      <span class="c">&lt;!-- 첨부파일이 있을 때에만 하이퍼링크 연결 --&gt;</span>
      <span class="nt">&lt;%</span><span class="k">if</span> <span class="o">(</span><span class="n">dto</span><span class="o">.</span><span class="na">getFile</span><span class="o">()</span> <span class="o">==</span> <span class="kc">null</span> <span class="o">||</span> <span class="n">dto</span><span class="o">.</span><span class="na">getFile</span><span class="o">().</span><span class="na">equals</span><span class="o">(</span><span class="s">"없음"</span><span class="o">))</span> <span class="o">{</span> <span class="nt">%&gt;</span>
        <span class="nt">&lt;%=</span><span class="n">dto</span><span class="o">.</span><span class="na">getFile</span><span class="o">()</span> <span class="nt">%&gt;</span>
      <span class="nt">&lt;%</span> <span class="o">}</span>
        <span class="k">else</span> <span class="o">{</span> <span class="nt">%&gt;</span>
        <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"./BoardFileDownloadAction.bo?file_name=</span><span class="nt">&lt;%=</span><span class="n">dto</span><span class="o">.</span><span class="na">getFile</span><span class="o">()</span> <span class="nt">%&gt;</span><span class="s">"</span><span class="nt">&gt;&lt;%=</span><span class="n">dto</span><span class="o">.</span><span class="na">getFile</span><span class="o">()</span> <span class="nt">%&gt;&lt;/a&gt;</span>
      <span class="nt">&lt;%</span> <span class="o">}</span> <span class="nt">%&gt;</span>
    <span class="nt">&lt;/td&gt;</span>
  <span class="nt">&lt;/tr&gt;</span>
<span class="nt">&lt;/tbody&gt;</span>
</code></pre></div></div>

<ul>
  <li>게시글 본문 페이지에 들어오면 첨부된 이미지가 있을 때에만 이미지를 불러온다.</li>
</ul>

<h2 id="boardimgactionjava">BoardImgAction.java</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.project.cafe.board.action</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.io.FileInputStream</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.net.URLEncoder</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.servlet.ServletContext</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.ServletOutputStream</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletRequest</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletResponse</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">com.project.cafe.action.Action</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.project.cafe.action.ActionForward</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">BoardImgAction</span> <span class="kd">implements</span> <span class="nc">Action</span> 
<span class="o">{</span>
    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="nc">ActionForward</span> <span class="nf">execute</span><span class="o">(</span><span class="nc">HttpServletRequest</span> <span class="n">request</span><span class="o">,</span> <span class="nc">HttpServletResponse</span> <span class="n">response</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">Exception</span> 
    <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"M : BoardImgAction - execute() 호출"</span><span class="o">);</span>
		
        <span class="c1">// 전달된 이미지 파일 이름 저장</span>
        <span class="nc">String</span> <span class="n">imgName</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"img_name"</span><span class="o">);</span>
		
        <span class="c1">// 서버에 업로드 된 폴더 찾기</span>
        <span class="nc">String</span> <span class="n">savePath</span> <span class="o">=</span> <span class="s">"images"</span><span class="o">;</span>
		
        <span class="c1">// 서버에 업로드 된 파일 위치 계산</span>
        <span class="nc">ServletContext</span> <span class="n">ctx</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getServletContext</span><span class="o">();</span>
        <span class="nc">String</span> <span class="n">downloadPath</span> <span class="o">=</span> <span class="n">ctx</span><span class="o">.</span><span class="na">getRealPath</span><span class="o">(</span><span class="n">savePath</span><span class="o">);</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"download path: "</span><span class="o">+</span><span class="n">downloadPath</span><span class="o">);</span>
		
        <span class="c1">// 다운로드 할 이미지의 전체 경로 계산</span>
        <span class="c1">// 사용자 OS에 따라 연결자 구분</span>
        <span class="nc">String</span> <span class="n">imgPath</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
        <span class="nc">String</span> <span class="n">agent</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getHeader</span><span class="o">(</span><span class="s">"User-Agent"</span><span class="o">);</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">agent</span><span class="o">.</span><span class="na">indexOf</span><span class="o">(</span><span class="s">"Windows"</span><span class="o">)</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="o">)</span>
            <span class="n">imgPath</span> <span class="o">=</span> <span class="n">downloadPath</span> <span class="o">+</span> <span class="s">"\\"</span> <span class="o">+</span> <span class="n">imgName</span><span class="o">;</span>
        <span class="k">else</span> 
            <span class="n">imgPath</span> <span class="o">=</span> <span class="n">downloadPath</span> <span class="o">+</span> <span class="s">"/"</span> <span class="o">+</span> <span class="n">imgName</span><span class="o">;</span>
		
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"imgPath: "</span><span class="o">+</span><span class="n">imgPath</span><span class="o">);</span>
		
        <span class="c1">// 파일 저장 배열</span>
        <span class="kt">byte</span><span class="o">[]</span> <span class="n">b</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">byte</span><span class="o">[</span><span class="mi">4096</span><span class="o">];</span>
		
        <span class="c1">// 데이터 주고받을 통로 생성</span>
        <span class="nc">FileInputStream</span> <span class="n">fis</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">FileInputStream</span><span class="o">(</span><span class="n">imgPath</span><span class="o">);</span>
		
        <span class="c1">// MIME 타입 정보 얻어오기</span>
        <span class="nc">String</span> <span class="n">mimeType</span> <span class="o">=</span> <span class="n">ctx</span><span class="o">.</span><span class="na">getMimeType</span><span class="o">(</span><span class="n">imgPath</span><span class="o">);</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"MIME type: "</span><span class="o">+</span><span class="n">mimeType</span><span class="o">);</span>
		
        <span class="k">if</span> <span class="o">(</span><span class="n">mimeType</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span>
            <span class="n">mimeType</span> <span class="o">=</span> <span class="s">"application/octet-stream"</span><span class="o">;</span>
		
        <span class="c1">// 전달받은 MIME 타입으로 브라우저 정보 설정</span>
        <span class="n">response</span><span class="o">.</span><span class="na">setContentType</span><span class="o">(</span><span class="n">mimeType</span><span class="o">);</span>
		
        <span class="c1">// 인터넷 익스플로러 일 때 구분해서 처리</span>
        <span class="kt">boolean</span> <span class="n">ieBrowser</span> <span class="o">=</span> <span class="o">(</span><span class="n">agent</span><span class="o">.</span><span class="na">indexOf</span><span class="o">(</span><span class="s">"MISE"</span><span class="o">)</span> <span class="o">&gt;</span> <span class="o">-</span><span class="mi">1</span> <span class="o">||</span> <span class="n">agent</span><span class="o">.</span><span class="na">indexOf</span><span class="o">(</span><span class="s">"Trident"</span><span class="o">)</span> <span class="o">&gt;</span> <span class="o">-</span><span class="mi">1</span><span class="o">);</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">ieBrowser</span><span class="o">)</span>
            <span class="n">imgName</span> <span class="o">=</span> <span class="nc">URLEncoder</span><span class="o">.</span><span class="na">encode</span><span class="o">(</span><span class="n">imgName</span><span class="o">,</span> <span class="s">"utf-8"</span><span class="o">).</span><span class="na">replaceAll</span><span class="o">(</span><span class="s">"\\+"</span><span class="o">,</span> <span class="s">"%20"</span><span class="o">);</span>
        <span class="k">else</span> 
            <span class="n">imgName</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">String</span><span class="o">(</span><span class="n">imgName</span><span class="o">.</span><span class="na">getBytes</span><span class="o">(</span><span class="s">"utf-8"</span><span class="o">),</span> <span class="s">"iso-8859-1"</span><span class="o">);</span>
		
        <span class="c1">// 응답정보 설정</span>
        <span class="n">response</span><span class="o">.</span><span class="na">setHeader</span><span class="o">(</span><span class="s">"Content-Disposition"</span><span class="o">,</span> <span class="n">mimeType</span><span class="o">);</span>
		
        <span class="c1">// 출력스트림 생성</span>
        <span class="nc">ServletOutputStream</span> <span class="n">out</span> <span class="o">=</span> <span class="n">response</span><span class="o">.</span><span class="na">getOutputStream</span><span class="o">();</span>
		
        <span class="kt">int</span> <span class="n">data</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="k">while</span> <span class="o">((</span><span class="n">data</span> <span class="o">=</span> <span class="n">fis</span><span class="o">.</span><span class="na">read</span><span class="o">(</span><span class="n">b</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">b</span><span class="o">.</span><span class="na">length</span><span class="o">))</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="o">)</span>
            <span class="n">out</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">b</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">data</span><span class="o">);</span>
		
        <span class="n">out</span><span class="o">.</span><span class="na">flush</span><span class="o">();</span>
		
        <span class="n">out</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
        <span class="n">fis</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
		
        <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>여기까지 하면 게시글에 입장했을 때 업로드 한 이미지가 출력된다.<br /><br /><br /></li>
</ul>

<h1 id="출처">출처</h1>
<ul>
  <li><a href="https://m.blog.naver.com/PostView.naver?isHttpsRedirect=true&amp;blogId=cacung82&amp;logNo=220502809071">[JAVA] MultipartParser 파일 저장경로를 파라메터로 받아서 업로드하기</a></li>
  <li><a href="https://velog.io/@jgkim0320/Java-%EA%B0%81%EA%B0%81-%EB%8B%A4%EB%A5%B8-%EA%B2%BD%EB%A1%9C%EB%A1%9C-File-Upload">Java 각각 다른 경로로 File Upload</a>
<br /><br /><br /></li>
</ul>

<h1 id="마감까지">마감까지</h1>
<ul>
  <li><code class="language-plaintext highlighter-rouge">D-4</code></li>
</ul>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="Project Log" /><category term="Project" /><category term="Cafe" /><category term="Log" /><summary type="html"><![CDATA[개발환경 MacBook Air (M1, 2020) OpenJDK 8 Eclipse 2021-12 tomcat 8.5 MySQL Workbench 8.0.19]]></summary></entry><entry><title type="html">JAVA Servlet 프로젝트) Cafe(웹 사이트) 만들기 20 - 파일업로드 기능 추가</title><link href="http://localhost:4000/project%20log/cafe-project-20/" rel="alternate" type="text/html" title="JAVA Servlet 프로젝트) Cafe(웹 사이트) 만들기 20 - 파일업로드 기능 추가" /><published>2022-03-31T00:00:00+09:00</published><updated>2022-03-31T00:00:00+09:00</updated><id>http://localhost:4000/project%20log/cafe-project-20</id><content type="html" xml:base="http://localhost:4000/project%20log/cafe-project-20/"><![CDATA[<h1 id="개발환경">개발환경</h1>
<ul>
  <li>MacBook Air (M1, 2020)</li>
  <li>OpenJDK 8</li>
  <li>Eclipse 2021-12</li>
  <li>tomcat 8.5</li>
  <li>MySQL Workbench 8.0.19<br /><br /><br /></li>
</ul>

<h1 id="시작">시작</h1>
<ul>
  <li>2022.3.4 ~ <br /><br /><br /></li>
</ul>

<h1 id="주제">주제</h1>
<ul>
  <li>웹 백엔드 수업 중 중간 과제로 개인 프로젝트를 진행하게 되었다.</li>
  <li>회원가입/로그인/탈퇴 등 기본적인 회원관리 시스템을 가진 웹 사이트를 만드는 것이다. 주어진 기한은 <code class="language-plaintext highlighter-rouge">한 달</code></li>
  <li>나는 <code class="language-plaintext highlighter-rouge">다음 카페</code>를 소규모로 만들어 보기로 했다. 평소 자주 이용하기도 했고 과제의 평가 기준에서 요구하는 기능들을 다 담고 있기도 했기 때문에 이번 기회에 구현해 보면 그동안 배운 것들을 활용하기에 좋을 거 같았다.</li>
  <li>평가 기준에 사이트의 디자인 구현(HTML/CSS 등 프론트엔드)은 포함되지 않기 때문에 본인이 쓰고 싶은 HTML/CSS 템플릿을 구한 뒤 회원 관리 기능을 구현하면 된다.<br /><br /><br /></li>
</ul>

<h1 id="진행상황">진행상황</h1>
<ul>
  <li>파일업로드 기능을 추가했다.</li>
  <li><code class="language-plaintext highlighter-rouge">COS</code> 라이브러리를 사용했다.</li>
</ul>

<h2 id="cos-라이브러리-다운로드-및-설치">COS 라이브러리 다운로드 및 설치</h2>
<ul>
  <li><a href="http://www.servlets.com/cos/">http://www.servlets.com/</a></li>
  <li>위 사이트에 접속해서 하단에 <code class="language-plaintext highlighter-rouge">Download</code> 탭에 있는 압축파일을 다운로드 한다.</li>
  <li>다운받은 파일 압축을 푼 후 <code class="language-plaintext highlighter-rouge">cos.jar</code> 파일을 <code class="language-plaintext highlighter-rouge">WEB-INF/lib</code> 폴더에 넣는다.</li>
</ul>

<h2 id="boardwritejsp">boardWrite.jsp</h2>

<div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;section</span> <span class="na">class=</span><span class="s">"MOD_SUBNAVIGATION1"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;div</span> <span class="na">data-layout=</span><span class="s">"_r"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;jsp:include </span><span class="na">page=</span><span class="s">"../inc/leftNav.jsp"</span><span class="nt">&gt;&lt;/jsp:include&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">data-layout=</span><span class="s">"al-o1 de-o2 de10"</span> <span class="na">class=</span><span class="s">"MOD_SUBNAVIGATION1_Page"</span><span class="nt">&gt;</span>
    	<span class="nt">&lt;h2&gt;</span>게시글 작성<span class="nt">&lt;/h2&gt;</span>
    	<span class="nt">&lt;form</span> <span class="na">name=</span><span class="s">"write"</span> <span class="na">action=</span><span class="s">"./BoardWriteAction.bo"</span> <span class="na">method=</span><span class="s">"post"</span> <span class="na">enctype=</span><span class="s">"multipart/form-data"</span> <span class="na">onsubmit=</span><span class="s">"return finalCheck();"</span><span class="nt">&gt;</span>
    	<span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"hidden"</span> <span class="na">name=</span><span class="s">"id"</span> <span class="na">value=</span><span class="s">"</span><span class="nt">&lt;%=</span><span class="n">id</span><span class="nt">%&gt;</span><span class="s">"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"formRow"</span><span class="nt">&gt;</span>
          <span class="nt">&lt;label</span> <span class="na">for=</span><span class="s">"MOD_TEXTFORM_NameField"</span><span class="nt">&gt;</span>제목 <span class="nt">&lt;/label&gt;&lt;input</span> <span class="na">type=</span><span class="s">"text"</span> <span class="na">name=</span><span class="s">"title"</span> <span class="na">id=</span><span class="s">"title"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;/div&gt;</span>
        <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"formRow"</span><span class="nt">&gt;</span>
          <span class="nt">&lt;label</span> <span class="na">for=</span><span class="s">"MOD_TEXTFORM_MsgField"</span><span class="nt">&gt;</span>내용 <span class="nt">&lt;/label&gt;</span>
          <span class="nt">&lt;textarea</span> <span class="na">id=</span><span class="s">"MOD_TEXTFORM_MsgField"</span> <span class="na">name=</span><span class="s">"content"</span><span class="nt">&gt;&lt;/textarea&gt;</span>
        <span class="nt">&lt;/div&gt;</span>
        <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"formRow"</span><span class="nt">&gt;</span>
          <span class="nt">&lt;label</span> <span class="na">for=</span><span class="s">"MOD_TEXTFORM_NameField"</span><span class="nt">&gt;</span>파일 등록 <span class="nt">&lt;/label&gt;&lt;input</span> <span class="na">type=</span><span class="s">"file"</span> <span class="na">name=</span><span class="s">"file"</span> <span class="na">id=</span><span class="s">"file"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;/div&gt;</span>
        <span class="nt">&lt;button</span> <span class="na">type=</span><span class="s">"submit"</span> <span class="na">class=</span><span class="s">"btn"</span><span class="nt">&gt;</span>글 등록<span class="nt">&lt;/button&gt;</span>
      <span class="nt">&lt;/form&gt;</span>
      <span class="nt">&lt;/div&gt;</span>
  <span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/section&gt;</span>
</code></pre></div></div>

<ul>
  <li>기존에 글을 작성하던 페이지에 업로드 할 파일을 등록하는 태그를 추가했다.</li>
  <li>사용자가 선택한 파일 객체가 전송될 수 있도록 인코딩 타입을 <code class="language-plaintext highlighter-rouge">multipart/form-data</code>로 지정해 주었다.</li>
</ul>

<h2 id="boardwriteactionjava">BoardWriteAction.java</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.project.cafe.board.action</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.servlet.ServletContext</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletRequest</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletResponse</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">com.oreilly.servlet.MultipartRequest</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.oreilly.servlet.multipart.DefaultFileRenamePolicy</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.project.cafe.action.Action</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.project.cafe.action.ActionForward</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.project.cafe.board.db.BoardDAO</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.project.cafe.board.db.BoardDTO</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">BoardWriteAction</span> <span class="kd">implements</span> <span class="nc">Action</span> 
<span class="o">{</span>
    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="nc">ActionForward</span> <span class="nf">execute</span><span class="o">(</span><span class="nc">HttpServletRequest</span> <span class="n">request</span><span class="o">,</span> <span class="nc">HttpServletResponse</span> <span class="n">response</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">Exception</span> 
    <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"M : BoardWriteAction - execute() 호출"</span><span class="o">);</span>
		
        <span class="c1">// 한글처리</span>
        <span class="n">request</span><span class="o">.</span><span class="na">setCharacterEncoding</span><span class="o">(</span><span class="s">"UTF-8"</span><span class="o">);</span>
		
        <span class="c1">// 파일 업로드 먼저 하기</span>
        <span class="c1">// 1. 저장경로 생성</span>
        <span class="nc">ServletContext</span> <span class="n">ctx</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getServletContext</span><span class="o">();</span>
        <span class="nc">String</span> <span class="n">realPath</span> <span class="o">=</span> <span class="n">ctx</span><span class="o">.</span><span class="na">getRealPath</span><span class="o">(</span><span class="s">"/upload"</span><span class="o">);</span>
		
        <span class="c1">// 2. 파일의 저장크기</span>
        <span class="kt">int</span> <span class="n">maxSize</span> <span class="o">=</span> <span class="mi">10</span> <span class="o">*</span> <span class="mi">1024</span> <span class="o">*</span> <span class="mi">1024</span><span class="o">;</span> <span class="c1">// 10MB</span>
		
        <span class="c1">// 3. 파일업로드(객체 생성)</span>
        <span class="nc">MultipartRequest</span> <span class="n">multi</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">MultipartRequest</span><span class="o">(</span>
                <span class="n">request</span><span class="o">,</span> 
                <span class="n">realPath</span><span class="o">,</span>
                <span class="n">maxSize</span><span class="o">,</span>
                <span class="s">"utf-8"</span><span class="o">,</span>
                <span class="k">new</span> <span class="nf">DefaultFileRenamePolicy</span><span class="o">()</span>
                <span class="o">);</span>
		
        <span class="c1">// 파라메터를 DTO에 저장</span>
        <span class="c1">// MultipartRequest 객체 안에 들은 파라미터 정보에 접근해야 한다.</span>
        <span class="nc">BoardDTO</span> <span class="n">dto</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BoardDTO</span><span class="o">();</span>
        <span class="n">dto</span><span class="o">.</span><span class="na">setContent</span><span class="o">(</span><span class="n">multi</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"content"</span><span class="o">));</span>
        <span class="n">dto</span><span class="o">.</span><span class="na">setId</span><span class="o">(</span><span class="n">multi</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"id"</span><span class="o">));</span>
        <span class="n">dto</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="n">multi</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"title"</span><span class="o">));</span>
        
        <span class="c1">// 파일이름에 접근할 때엔 getFilesystemName() 메소드 사용</span>
        <span class="n">dto</span><span class="o">.</span><span class="na">setFile</span><span class="o">(</span><span class="n">multi</span><span class="o">.</span><span class="na">getFilesystemName</span><span class="o">(</span><span class="s">"file"</span><span class="o">));</span>
		
        <span class="c1">// 사용자 ip주소 저장</span>
        <span class="n">dto</span><span class="o">.</span><span class="na">setIp</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getRemoteAddr</span><span class="o">());</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"M : "</span><span class="o">+</span><span class="n">dto</span><span class="o">);</span>
		
        <span class="c1">// DB에 DTO 보내서 저장</span>
        <span class="nc">BoardDAO</span> <span class="n">dao</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BoardDAO</span><span class="o">();</span>
        <span class="n">dao</span><span class="o">.</span><span class="na">insertPost</span><span class="o">(</span><span class="n">dto</span><span class="o">);</span>
		
        <span class="c1">// 완료되면 글 목록 페이지로 이동</span>
        <span class="nc">ActionForward</span> <span class="n">forward</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ActionForward</span><span class="o">();</span>
        <span class="n">forward</span><span class="o">.</span><span class="na">setPath</span><span class="o">(</span><span class="s">"./BoardList.bo"</span><span class="o">);</span>
        <span class="n">forward</span><span class="o">.</span><span class="na">setRedirect</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
		
        <span class="k">return</span> <span class="n">forward</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h2 id="boarddao---insertpostdto">BoardDAO - insertPost(dto)</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kt">void</span> <span class="nf">insertPost</span><span class="o">(</span><span class="nc">BoardDTO</span> <span class="n">dto</span><span class="o">)</span>
<span class="o">{</span>
    <span class="kt">int</span> <span class="n">postNum</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> 
		
    <span class="k">try</span> <span class="o">{</span>
        <span class="c1">// 1.2. DB 연결</span>
        <span class="n">con</span> <span class="o">=</span> <span class="n">getCon</span><span class="o">();</span>
			
        <span class="c1">// 3. sql 작성 &amp; pstmt 객체</span>
        <span class="c1">// 이번 차례에 DB에 저장될 글번호 계산</span>
        <span class="n">sql</span> <span class="o">=</span> <span class="s">"select max(num) from cafe_board"</span><span class="o">;</span>
        <span class="n">pstmt</span> <span class="o">=</span> <span class="n">con</span><span class="o">.</span><span class="na">prepareStatement</span><span class="o">(</span><span class="n">sql</span><span class="o">);</span>
			
        <span class="n">rs</span> <span class="o">=</span> <span class="n">pstmt</span><span class="o">.</span><span class="na">executeQuery</span><span class="o">();</span>
			
        <span class="k">if</span> <span class="o">(</span><span class="n">rs</span><span class="o">.</span><span class="na">next</span><span class="o">())</span>
            <span class="n">postNum</span> <span class="o">=</span> <span class="n">rs</span><span class="o">.</span><span class="na">getInt</span><span class="o">(</span><span class="mi">1</span><span class="o">)</span> <span class="o">+</span> <span class="mi">1</span><span class="o">;</span>
			
        <span class="c1">// 3. 데이터 삽입용 sql 작성 &amp; pstmt 설정</span>
        <span class="n">sql</span> <span class="o">=</span> <span class="s">"insert into cafe_board(num, id, title, content, readcount, re_ref, re_lev, re_seq, date, ip, file) "</span>
                <span class="o">+</span> <span class="s">"values(?,?,?,?,?,?,?,?,now(),?,?)"</span><span class="o">;</span>
        <span class="n">pstmt</span> <span class="o">=</span> <span class="n">con</span><span class="o">.</span><span class="na">prepareStatement</span><span class="o">(</span><span class="n">sql</span><span class="o">);</span>
			
        <span class="c1">// ? 채우기</span>
        <span class="n">pstmt</span><span class="o">.</span><span class="na">setInt</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="n">postNum</span><span class="o">);</span>
        <span class="n">pstmt</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="mi">2</span><span class="o">,</span> <span class="n">dto</span><span class="o">.</span><span class="na">getId</span><span class="o">());</span>
        <span class="n">pstmt</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="mi">3</span><span class="o">,</span> <span class="n">dto</span><span class="o">.</span><span class="na">getTitle</span><span class="o">());</span>
        <span class="n">pstmt</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="mi">4</span><span class="o">,</span> <span class="n">dto</span><span class="o">.</span><span class="na">getContent</span><span class="o">());</span>
        <span class="n">pstmt</span><span class="o">.</span><span class="na">setInt</span><span class="o">(</span><span class="mi">5</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span> <span class="c1">// 처음에 조회수 0</span>
        <span class="n">pstmt</span><span class="o">.</span><span class="na">setInt</span><span class="o">(</span><span class="mi">6</span><span class="o">,</span> <span class="n">postNum</span><span class="o">);</span> <span class="c1">// 답글의 그룹. 일반글의 글번호와 동일하게 만듦</span>
        <span class="n">pstmt</span><span class="o">.</span><span class="na">setInt</span><span class="o">(</span><span class="mi">7</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span> <span class="c1">// 답글의 레벨. 처음엔 들여쓰기 없음</span>
        <span class="n">pstmt</span><span class="o">.</span><span class="na">setInt</span><span class="o">(</span><span class="mi">8</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span> <span class="c1">// 답글의 순서. 처음엔 가장 최상단</span>
        <span class="n">pstmt</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="mi">9</span><span class="o">,</span> <span class="n">dto</span><span class="o">.</span><span class="na">getIp</span><span class="o">());</span>
			
        <span class="k">if</span> <span class="o">(</span><span class="n">dto</span><span class="o">.</span><span class="na">getFile</span><span class="o">()</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span>
            <span class="n">pstmt</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="mi">10</span><span class="o">,</span> <span class="s">"없음"</span><span class="o">);</span>
        <span class="k">else</span> 
            <span class="n">pstmt</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="mi">10</span><span class="o">,</span> <span class="n">dto</span><span class="o">.</span><span class="na">getFile</span><span class="o">());</span>
			
        <span class="c1">// 4. sql 실행</span>
        <span class="n">pstmt</span><span class="o">.</span><span class="na">executeUpdate</span><span class="o">();</span>
			
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"DAO : 게시글 DB 삽입 완료"</span><span class="o">);</span>
    <span class="o">}</span>
    <span class="k">catch</span> <span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
    <span class="o">}</span>
    <span class="k">finally</span> <span class="o">{</span>
        <span class="n">closeDB</span><span class="o">();</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>기존에 새 게시글을 <code class="language-plaintext highlighter-rouge">DB</code> 삽입하는 동작을 수행하던 <code class="language-plaintext highlighter-rouge">BoardWriteAction</code>과 <code class="language-plaintext highlighter-rouge">insertPost()</code> 메소드를 약간 수정했다.</li>
</ul>

<h2 id="boardcontentjsp">boardContent.jsp</h2>

<div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;tbody&gt;</span>
  <span class="nt">&lt;tr&gt;</span>
    <span class="nt">&lt;td</span> <span class="na">colspan=</span><span class="s">"5"</span> <span class="na">style=</span><span class="s">"white-space:pre-wrap; word-wrap:break-word; word-break: break-all;"</span><span class="nt">&gt;&lt;%=</span><span class="n">dto</span><span class="o">.</span><span class="na">getContent</span><span class="o">()</span> <span class="nt">%&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/td&gt;</span>
  <span class="nt">&lt;/tr&gt;</span>
  <span class="nt">&lt;tr&gt;</span>
    <span class="nt">&lt;td</span> <span class="na">colspan=</span><span class="s">"2"</span><span class="nt">&gt;</span>첨부파일<span class="nt">&lt;/td&gt;</span>
    <span class="nt">&lt;td</span> <span class="na">colspan=</span><span class="s">"3"</span><span class="nt">&gt;</span>
    <span class="c">&lt;!-- 첨부파일이 있을 때에만 하이퍼링크 연결 --&gt;</span>
      <span class="nt">&lt;%</span> <span class="k">if</span> <span class="o">(</span><span class="n">dto</span><span class="o">.</span><span class="na">getFile</span><span class="o">()</span> <span class="o">==</span> <span class="kc">null</span> <span class="o">||</span> <span class="n">dto</span><span class="o">.</span><span class="na">getFile</span><span class="o">().</span><span class="na">equals</span><span class="o">(</span><span class="s">"없음"</span><span class="o">))</span> <span class="o">{</span> <span class="nt">%&gt;</span>
        <span class="nt">&lt;%=</span><span class="n">dto</span><span class="o">.</span><span class="na">getFile</span><span class="o">()</span> <span class="nt">%&gt;</span>
      <span class="nt">&lt;%</span> <span class="o">}</span>
        <span class="k">else</span> <span class="o">{</span> <span class="nt">%&gt;</span>
        <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"./BoardFileDownloadAction.bo?file_name=</span><span class="nt">&lt;%=</span><span class="n">dto</span><span class="o">.</span><span class="na">getFile</span><span class="o">()</span> <span class="nt">%&gt;</span><span class="s">"</span><span class="nt">&gt;&lt;%=</span><span class="n">dto</span><span class="o">.</span><span class="na">getFile</span><span class="o">()</span> <span class="nt">%&gt;&lt;/a&gt;</span>
      <span class="nt">&lt;%</span> <span class="o">}</span> <span class="nt">%&gt;</span>
    <span class="nt">&lt;/td&gt;</span>
  <span class="nt">&lt;/tr&gt;</span>
<span class="nt">&lt;/tbody&gt;</span>
</code></pre></div></div>

<ul>
  <li>게시글 내용을 보여주는 페이지에서는 첨부파일이 있을 때에만 하이퍼링크를 연결하도록 했다.</li>
</ul>

<p align="center"><img src="../../assets/images/fileDownload.png" width="500" /></p>
<p align="center"><img src="../../assets/images/fileDownloadNull.png" width="500" /></p>

<ul>
  <li>여기까지 하면 파일 유무에 따라서 하이퍼링크 연결까지 된다.</li>
</ul>

<h2 id="boardfiledownloadactionjava">BoardFileDownloadAction.java</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.project.cafe.board.action</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.io.FileInputStream</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.net.URLEncoder</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.servlet.ServletContext</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.ServletOutputStream</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletRequest</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletResponse</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">com.project.cafe.action.Action</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.project.cafe.action.ActionForward</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">BoardFileDownloadAction</span> <span class="kd">implements</span> <span class="nc">Action</span> 
<span class="o">{</span>
    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="nc">ActionForward</span> <span class="nf">execute</span><span class="o">(</span><span class="nc">HttpServletRequest</span> <span class="n">request</span><span class="o">,</span> <span class="nc">HttpServletResponse</span> <span class="n">response</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">Exception</span> 
    <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"M : BoardFileDownloadAction - execute() 호출"</span><span class="o">);</span>
		
        <span class="c1">// 전달된 파일 이름 저장</span>
        <span class="nc">String</span> <span class="n">fileName</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"file_name"</span><span class="o">);</span>
		
        <span class="c1">// 서버에 업로드 된 폴더 찾기</span>
        <span class="nc">String</span> <span class="n">savePath</span> <span class="o">=</span> <span class="s">"upload"</span><span class="o">;</span>
		
        <span class="c1">// 서버에 업로드 된 파일의 위치 계산(물리적 경로)</span>
        <span class="nc">ServletContext</span> <span class="n">ctx</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getServletContext</span><span class="o">();</span>
        <span class="nc">String</span> <span class="n">downloadPath</span> <span class="o">=</span> <span class="n">ctx</span><span class="o">.</span><span class="na">getRealPath</span><span class="o">(</span><span class="n">savePath</span><span class="o">);</span>
		
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"downloadPath : "</span><span class="o">+</span><span class="n">downloadPath</span><span class="o">);</span>
		
        <span class="c1">// 다운로드 할 파일의 전체 경로 계산</span>
        <span class="c1">// 사용자 OS에 따라 연결문자 구분</span>
        <span class="nc">String</span> <span class="n">filePath</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
        <span class="nc">String</span> <span class="n">agent</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getHeader</span><span class="o">(</span><span class="s">"User-Agent"</span><span class="o">);</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"agent: "</span><span class="o">+</span><span class="n">agent</span><span class="o">);</span>
		
        <span class="k">if</span> <span class="o">(</span><span class="n">agent</span><span class="o">.</span><span class="na">indexOf</span><span class="o">(</span><span class="s">"Windows"</span><span class="o">)</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="o">)</span>
            <span class="n">filePath</span> <span class="o">=</span> <span class="n">downloadPath</span> <span class="o">+</span> <span class="s">"\\"</span> <span class="o">+</span> <span class="n">fileName</span><span class="o">;</span>
        <span class="k">else</span>
            <span class="n">filePath</span> <span class="o">=</span> <span class="n">downloadPath</span> <span class="o">+</span> <span class="s">"/"</span> <span class="o">+</span> <span class="n">fileName</span><span class="o">;</span>
		
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"filePath : "</span><span class="o">+</span><span class="n">filePath</span><span class="o">);</span>
		
        <span class="c1">///////////////////////////////////////////</span>
		
        <span class="c1">// 파일을 저장하는 배열(버퍼)</span>
        <span class="kt">byte</span><span class="o">[]</span> <span class="n">b</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">byte</span><span class="o">[</span><span class="mi">4096</span><span class="o">];</span> <span class="c1">// 4kb</span>
		
        <span class="c1">// 데이터를 주고받을 수 있는 통로 만들기</span>
        <span class="nc">FileInputStream</span> <span class="n">fis</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">FileInputStream</span><span class="o">(</span><span class="n">filePath</span><span class="o">);</span>
		
        <span class="c1">// MIME 타입 얻어오기</span>
        <span class="nc">String</span> <span class="n">mimeType</span> <span class="o">=</span> <span class="n">ctx</span><span class="o">.</span><span class="na">getMimeType</span><span class="o">(</span><span class="n">filePath</span><span class="o">);</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"mimeType: "</span><span class="o">+</span><span class="n">mimeType</span><span class="o">);</span>
		
        <span class="c1">// MIME 타입 정보가 없는 경우</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">mimeType</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span>
        <span class="o">{</span>
            <span class="c1">// 실제로 잘 알려지지 않은 이진파일을 의미하며, 브라우저가 자동 실행하지 않고 실행여부를 질문한다.</span>
            <span class="n">mimeType</span> <span class="o">=</span> <span class="s">"application/octet-stream"</span><span class="o">;</span>
        <span class="o">}</span>
		
        <span class="c1">// 브라우저가 전달받은 MIME 타입으로 응답정보 설정</span>
        <span class="n">response</span><span class="o">.</span><span class="na">setContentType</span><span class="o">(</span><span class="n">mimeType</span><span class="o">);</span>
		
        <span class="c1">// IE / 그 외 나머지 브라우저 구분</span>
        <span class="kt">boolean</span> <span class="n">ieBrowser</span> <span class="o">=</span> <span class="o">(</span><span class="n">agent</span><span class="o">.</span><span class="na">indexOf</span><span class="o">(</span><span class="s">"MISE"</span><span class="o">)</span> <span class="o">&gt;</span> <span class="o">-</span><span class="mi">1</span> <span class="o">||</span> <span class="n">agent</span><span class="o">.</span><span class="na">indexOf</span><span class="o">(</span><span class="s">"Trident"</span><span class="o">)</span> <span class="o">&gt;</span> <span class="o">-</span><span class="mi">1</span><span class="o">);</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">ieBrowser</span><span class="o">)</span>
        <span class="o">{</span>
            <span class="c1">// 인터넷 익스플로러일 때</span>
            <span class="c1">// 인터넷 익스플로러에서는 한글 다운로드시 한글 인코딩이 깨져서 utf-8로 바꿔준다.</span>
            <span class="c1">// 인터넷 익스플로러에서는 공백문자 표시가 [+]라서 [%20]으로 바꿔준다.</span>
            <span class="n">fileName</span> <span class="o">=</span> <span class="nc">URLEncoder</span><span class="o">.</span><span class="na">encode</span><span class="o">(</span><span class="n">fileName</span><span class="o">,</span> <span class="s">"utf-8"</span><span class="o">).</span><span class="na">replaceAll</span><span class="o">(</span><span class="s">"\\+"</span><span class="o">,</span> <span class="s">"%20"</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="k">else</span>
        <span class="o">{</span>
            <span class="c1">// 그 외 브라우저</span>
            <span class="c1">// 브라우저 다운로드시 한글 깨짐 처리</span>
            <span class="c1">// 8859-1 &lt; EUC-KR &lt; MS949 &lt; UTF-8</span>
            <span class="c1">// -&gt; 방향으로 갈수록 인코딩 범위가 커짐 (한글처리할 수 있는 범위가 늘어남)</span>
            <span class="n">fileName</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">String</span><span class="o">(</span><span class="n">fileName</span><span class="o">.</span><span class="na">getBytes</span><span class="o">(</span><span class="s">"utf-8"</span><span class="o">),</span> <span class="s">"iso-8859-1"</span><span class="o">);</span>
        <span class="o">}</span>
		
        <span class="c1">// 브라우저에서 해석되는(미리보기 형태로 바로 볼 수 있는) 파일도 다운로드 형태로 처리가능하게 변경</span>
        <span class="n">response</span><span class="o">.</span><span class="na">setHeader</span><span class="o">(</span><span class="s">"Content-Disposition"</span><span class="o">,</span> <span class="s">"attachment; filename="</span> <span class="o">+</span> <span class="n">fileName</span><span class="o">);</span>
		
        <span class="c1">// 다운로드할 파일 출력</span>
        <span class="nc">ServletOutputStream</span> <span class="n">out</span> <span class="o">=</span> <span class="n">response</span><span class="o">.</span><span class="na">getOutputStream</span><span class="o">();</span>
		
        <span class="kt">int</span> <span class="n">data</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="c1">// 데이터를 배열을 사용해 배열의 길이만큼 잘라서 data에 저장한다. EOF가 아닐 때까지</span>
        <span class="k">while</span> <span class="o">((</span><span class="n">data</span> <span class="o">=</span> <span class="n">fis</span><span class="o">.</span><span class="na">read</span><span class="o">(</span><span class="n">b</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">b</span><span class="o">.</span><span class="na">length</span><span class="o">))</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="o">)</span>
        <span class="o">{</span>
            <span class="c1">// 가져온 data 길이만큼 출력</span>
            <span class="n">out</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">b</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">data</span><span class="o">);</span>
        <span class="o">}</span>
		
        <span class="c1">// ServletOutputStream은 버퍼의 길이가 다 찼을 때에만 데이터를 전달하기 때문에 </span>
        <span class="c1">// flush로 버퍼의 빈 공간을 채워서 전송함</span>
        <span class="n">out</span><span class="o">.</span><span class="na">flush</span><span class="o">();</span>
		
        <span class="n">out</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
        <span class="n">fis</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
		
        <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>업로드 된 파일을 클릭하면 파일 다운로드를 처리하는 서블릿으로 이동한다.</li>
  <li>다운로드 할 파일의 경로를 설정할 때 <code class="language-plaintext highlighter-rouge">Mac OS</code>에서는 파일 경로 구분자를 <code class="language-plaintext highlighter-rouge">"/"</code>를 사용하는데 <code class="language-plaintext highlighter-rouge">Windows OS</code>에서는 <code class="language-plaintext highlighter-rouge">"\"</code>를 사용하기 때문에 <code class="language-plaintext highlighter-rouge">filePath</code>를 설정하는 부분에서 <code class="language-plaintext highlighter-rouge">"\\"</code>만 쓰면 맥에서 경로를 제대로 못 찾는다.(난 맥북을 쓰는데 수업은 윈도우 기반이라서 처음에 윈도우 버전으로 따라하면서 <code class="language-plaintext highlighter-rouge">"\\"</code> 쓰니까 안 되서 헤멨었음)</li>
  <li>
    <p>그래서 사용자의 OS에 따라 다르게 처리하는 부분을 추가했다.</p>
  </li>
  <li>여기까지 하면 다운로드도 잘 된다.<br /><br /><br /></li>
</ul>

<h1 id="마감까지">마감까지</h1>
<ul>
  <li><code class="language-plaintext highlighter-rouge">D-4</code></li>
</ul>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="Project Log" /><category term="Project" /><category term="Cafe" /><category term="Log" /><summary type="html"><![CDATA[개발환경 MacBook Air (M1, 2020) OpenJDK 8 Eclipse 2021-12 tomcat 8.5 MySQL Workbench 8.0.19]]></summary></entry><entry><title type="html">Python) 이것이 취업을 위한 코딩테스트다 06 실전문제 4. 두 배열의 원소 교체</title><link href="http://localhost:4000/boj/CodingTestBook-06-12-py/" rel="alternate" type="text/html" title="Python) 이것이 취업을 위한 코딩테스트다 06 실전문제 4. 두 배열의 원소 교체" /><published>2022-03-31T00:00:00+09:00</published><updated>2022-03-31T00:00:00+09:00</updated><id>http://localhost:4000/boj/CodingTestBook-06-12-py</id><content type="html" xml:base="http://localhost:4000/boj/CodingTestBook-06-12-py/"><![CDATA[<h1 id="문제-출처">문제 출처</h1>
<hr />

<ul>
  <li>이것이 취업을 위한 코딩테스트다 with 파이썬</li>
  <li>Chapter 06 - 실전문제 4. 두 배열의 원소 교체<br /><br /></li>
</ul>

<h1 id="제한">제한</h1>
<hr />

<ul>
  <li>시간 제한 : 2 초</li>
  <li>메모리 제한 : 128 MB<br /><br /></li>
</ul>

<h1 id="문제">문제</h1>
<hr />

<ul>
  <li>동빈이는 두 개의 배열 A와 B를 가지고 있다. 두 배열은 N개의 원소로 구성되어 있으며, 배열의 원소는 모두 자연수이다. 동빈이는 최대 K번의 바꿔치기 연산을 수행할 수 있는데, 바꿔치기 연산이란 배열 A에 있는 원소 하나와 배열 B에 있는 원소 하나를 골라서 두 원소를 서로 바꾸는 것을 말한다. 동빈이의 최종 목표는 배열 A의 모든 원소의 합이 최대가 되도록 하는 것이며, 여러분은 동빈이를 도와야 한다.</li>
  <li>N, K, 그리고 배열 A와 B의 정보가 주어졌을 때, 최대 K번의 바꿔치기 연산을 수행하여 만들 수 있는 배열 A의 모든 원소의 합의 최댓값을 출력하는 프로그램을 작성하시오.<br /><br /></li>
</ul>

<h1 id="입력">입력</h1>
<hr />

<ul>
  <li>첫째 줄에 N, K가 공백으로 구분되어 입력된다. (1 &lt;= N &lt;= 100,000,0 &lt;= K &lt;= N)</li>
  <li>두 번째 줄에 배열 A의 원소들이 공백으로 구분되어 입력된다. 모든 원소는 10,000,000보다 작은 자연수이다.</li>
  <li>세 번째 줄에 배열 B의 원소들이 공백으로 구분되어 입력된다. 모든 원소는 10,000,000보다 작은 자연수이다.<br /><br /></li>
</ul>

<h1 id="출력">출력</h1>
<hr />

<ul>
  <li>최대 K번의 바꿔치기 연산을 수행하여 만들 수 있는 배열 A의 모든 원소의 합의 최댓값을 출력한다.<br /><br /><br /></li>
</ul>

<h1 id="-풀이">👀 풀이</h1>
<hr />

<ul>
  <li><code class="language-plaintext highlighter-rouge">배열 A</code>의 <code class="language-plaintext highlighter-rouge">최솟값</code>을 <code class="language-plaintext highlighter-rouge">배열 B</code>의 <code class="language-plaintext highlighter-rouge">최댓값</code>과 <code class="language-plaintext highlighter-rouge">K</code>번만큼 바꿔가면 된다.</li>
  <li>그럴려면 <code class="language-plaintext highlighter-rouge">배열 A는 오름차순 정렬</code>, <code class="language-plaintext highlighter-rouge">배열 B는 내림차순 정렬</code>을 해야 한다.</li>
  <li>그 후 <code class="language-plaintext highlighter-rouge">0</code>번째부터 <code class="language-plaintext highlighter-rouge">K - 1</code>번째 원소까지 두 배열의 원소를 바꿔주면 되는데 <code class="language-plaintext highlighter-rouge">배열 A</code>의 <code class="language-plaintext highlighter-rouge">i</code>번째 원소가 <code class="language-plaintext highlighter-rouge">배열 B</code>의 <code class="language-plaintext highlighter-rouge">i</code>번째 원소보다 작을 때에만 바꿔준다. 만약 <code class="language-plaintext highlighter-rouge">배열 A</code>의 <code class="language-plaintext highlighter-rouge">i</code>번째 원소가 <code class="language-plaintext highlighter-rouge">배열 B</code>의 <code class="language-plaintext highlighter-rouge">i</code>번째 원소보다 크다면 거기부터는 <code class="language-plaintext highlighter-rouge">배열 B</code>의 원소가 항상 작은 것이기 때문에 남은 <code class="language-plaintext highlighter-rouge">K</code>번만큼 계속 바꾸면 오답을 받게 될 것이다.<br /><br /></li>
</ul>

<h1 id="코드">코드</h1>
<hr />

<script src="https://gist.github.com/miro7923/e0b6d22501b86b0f97b9e17a7ea0c974.js"></script>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="BOJ" /><category term="Algorithm" /><category term="BFS" /><category term="Python" /><summary type="html"><![CDATA[문제 출처 이것이 취업을 위한 코딩테스트다 with 파이썬 Chapter 06 - 실전문제 4. 두 배열의 원소 교체 제한 시간 제한 : 2 초 메모리 제한 : 128 MB]]></summary></entry></feed>