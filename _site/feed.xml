<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2022-02-05T18:28:34+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Yujin Dev Log</title><subtitle>개발 공부하는 블로그</subtitle><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><entry><title type="html">Java) BOJ 5622. 다이얼</title><link href="http://localhost:4000/boj/boj5622/" rel="alternate" type="text/html" title="Java) BOJ 5622. 다이얼" /><published>2022-02-04T00:00:00+09:00</published><updated>2022-02-04T00:00:00+09:00</updated><id>http://localhost:4000/boj/boj5622</id><content type="html" xml:base="http://localhost:4000/boj/boj5622/"><![CDATA[<h1 id="문제-링크">문제 링크</h1>
<ul>
  <li><a href="https://www.acmicpc.net/problem/5622">https://www.acmicpc.net/problem/5622</a><br /><br /></li>
</ul>

<h1 id="문제">문제</h1>
<ul>
  <li>
    <p>상근이의 할머니는 아래 그림과 같이 오래된 다이얼 전화기를 사용한다.
<img src="https://upload.acmicpc.net/9c88dd24-3a4c-4a09-bc50-e6496958214d/-/preview/" alt="dial" class="align-center" width="250" height="150" /></p>
  </li>
  <li>
    <p>전화를 걸고 싶은 번호가 있다면, 숫자를 하나를 누른 다음에 금속 핀이 있는 곳 까지 시계방향으로 돌려야 한다. 숫자를 하나 누르면 다이얼이 처음 위치로 돌아가고, 다음 숫자를 누르려면 다이얼을 처음 위치에서 다시 돌려야 한다.</p>
  </li>
  <li>
    <p>숫자 1을 걸려면 총 2초가 필요하다. 1보다 큰 수를 거는데 걸리는 시간은 이보다 더 걸리며, 한 칸 옆에 있는 숫자를 걸기 위해선 1초씩 더 걸린다.</p>
  </li>
  <li>
    <p>상근이의 할머니는 전화 번호를 각 숫자에 해당하는 문자로 외운다. 즉, 어떤 단어를 걸 때, 각 알파벳에 해당하는 숫자를 걸면 된다. 예를 들어, UNUCIC는 868242와 같다.</p>
  </li>
  <li>
    <p>할머니가 외운 단어가 주어졌을 때, 이 전화를 걸기 위해서 필요한 최소 시간을 구하는 프로그램을 작성하시오.<br /><br /></p>
  </li>
</ul>

<h1 id="입력">입력</h1>
<ul>
  <li>첫째 줄에 알파벳 대문자로 이루어진 단어가 주어진다. 단어의 길이는 2보다 크거나 같고, 15보다 작거나 같다.<br /><br /></li>
</ul>

<h1 id="출력">출력</h1>
<ul>
  <li>첫째 줄에 다이얼을 걸기 위해서 필요한 최소 시간을 출력한다.<br /><br /><br /></li>
</ul>

<h1 id="-풀이">👀 풀이</h1>
<ul>
  <li>다소 하드코딩으로 풀었는데… 1~9까지 돌리는데 걸리는 최소 시간을 배열에 저장한 다음에 각 문자의 범위별로 인덱스값을 정해주어 시간을 저장한 배열에서 시간을 가져와서 더해주었다.<br /><br /></li>
</ul>

<script src="https://gist.github.com/miro7923/dab5efa1b825e30802d5afffe75fb522.js"></script>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="BOJ" /><category term="Algorithm" /><category term="BOJ" /><category term="No5622" /><category term="String" /><category term="Java" /><summary type="html"><![CDATA[문제 링크 https://www.acmicpc.net/problem/5622]]></summary></entry><entry><title type="html">MySQL Workbench 시작하기</title><link href="http://localhost:4000/mysql/mysql-workbench-beginning/" rel="alternate" type="text/html" title="MySQL Workbench 시작하기" /><published>2022-02-04T00:00:00+09:00</published><updated>2022-02-04T00:00:00+09:00</updated><id>http://localhost:4000/mysql/mysql-workbench-beginning</id><content type="html" xml:base="http://localhost:4000/mysql/mysql-workbench-beginning/"><![CDATA[<h1 id="-mysql-workbench란">👀 MySQL Workbench란?</h1>
<ul>
  <li>터미널을 통한 데이터베이스 관리를 좀 더 편하게 할 수 있게 해주는 도구</li>
  <li><code class="language-plaintext highlighter-rouge">IDE</code>를 이용해서 프로그래밍 하는 것처럼 자동완성도 되고 테이블도 시각적으로 좀 더 편하게 볼 수 있고 터미널보다 훨씬 편하다.</li>
  <li>최신버전에는 버그가 있어서 <code class="language-plaintext highlighter-rouge">8.0.19</code> 버전으로 수업을 진행할 예정</li>
  <li>윈도우라면 <code class="language-plaintext highlighter-rouge">MySQL</code> 인스톨러에서 <code class="language-plaintext highlighter-rouge">Remove</code> 버튼을 눌러 개별 프로그램만 간편히 제거한 후 <code class="language-plaintext highlighter-rouge">Add</code> 버튼을 눌러 원하는 버전으로 선택해서 설치할 수 있다.</li>
  <li>하지만 난 맥을 써서 <code class="language-plaintext highlighter-rouge">homebrew</code>로 <code class="language-plaintext highlighter-rouge">MySQL</code>만 따로 깔았기 때문에 <code class="language-plaintext highlighter-rouge">Workbench</code>는 홈페이지에서 dmg 파일을 따로 받아서 설치했다.
<br /><br /><br /></li>
</ul>

<h1 id="mysql-주석문">MySQL 주석문</h1>
<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">#</span> <span class="err">주석문</span>
<span class="c1">-- 주석문</span>
<span class="cm">/* 주석문 */</span>
</code></pre></div></div>

<ul>
  <li>셋 다 사용가능하다.
<br /><br /><br /></li>
</ul>

<h1 id="db-조회">DB 조회</h1>
<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">jspdb</span><span class="p">.</span><span class="n">tbl_member</span><span class="p">;</span>
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">Workbench</code>에서 테이블을 조회하려면 테이블 앞에 <code class="language-plaintext highlighter-rouge">DB명</code>을 꼭 붙여줘야 한다.</li>
  <li>그런데 매번 이렇게 쓰려면 좀 귀찮다…</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">use</span> <span class="n">jspdb</span><span class="p">;</span>

<span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">tbl_member</span><span class="p">;</span>
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">C++</code>에서 <code class="language-plaintext highlighter-rouge">using</code>을 쓰듯 <code class="language-plaintext highlighter-rouge">use</code>를 써서 <code class="language-plaintext highlighter-rouge">DB명</code>을 선언해주면 그 다음부터는 <code class="language-plaintext highlighter-rouge">DB명</code> 없이 테이블을 부를 수 있다.</li>
</ul>

<h2 id="쿼리문-실행">쿼리문 실행</h2>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Windows) ctrl + enter
Mac) command + enter
</code></pre></div></div>

<ul>
  <li>일정 쿼리 구문들만 실행하고 싶으면 해당 쿼리문들을 블록으로 선택한 후 위 명령어를 입력하면 해당 쿼리문들만 실행된다.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Windows) ctrl + shift + enter
Mac) command + shift + enter
</code></pre></div></div>

<ul>
  <li>전체 쿼리 실행은 위 명령어를 입력한다.</li>
</ul>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="MySQL" /><category term="MySQL" /><category term="Workbench" /><category term="Database" /><category term="JSP" /><summary type="html"><![CDATA[👀 MySQL Workbench란? 터미널을 통한 데이터베이스 관리를 좀 더 편하게 할 수 있게 해주는 도구 IDE를 이용해서 프로그래밍 하는 것처럼 자동완성도 되고 테이블도 시각적으로 좀 더 편하게 볼 수 있고 터미널보다 훨씬 편하다. 최신버전에는 버그가 있어서 8.0.19 버전으로 수업을 진행할 예정 윈도우라면 MySQL 인스톨러에서 Remove 버튼을 눌러 개별 프로그램만 간편히 제거한 후 Add 버튼을 눌러 원하는 버전으로 선택해서 설치할 수 있다. 하지만 난 맥을 써서 homebrew로 MySQL만 따로 깔았기 때문에 Workbench는 홈페이지에서 dmg 파일을 따로 받아서 설치했다.]]></summary></entry><entry><title type="html">Java) BOJ 2908. 상수</title><link href="http://localhost:4000/boj/boj2908/" rel="alternate" type="text/html" title="Java) BOJ 2908. 상수" /><published>2022-02-04T00:00:00+09:00</published><updated>2022-02-04T00:00:00+09:00</updated><id>http://localhost:4000/boj/boj2908</id><content type="html" xml:base="http://localhost:4000/boj/boj2908/"><![CDATA[<h1 id="문제-링크">문제 링크</h1>
<ul>
  <li><a href="https://www.acmicpc.net/problem/2908">https://www.acmicpc.net/problem/2908</a><br /><br /></li>
</ul>

<h1 id="문제">문제</h1>
<ul>
  <li>
    <p>상근이의 동생 상수는 수학을 정말 못한다. 상수는 숫자를 읽는데 문제가 있다. 이렇게 수학을 못하는 상수를 위해서 상근이는 수의 크기를 비교하는 문제를 내주었다. 상근이는 세 자리 수 두 개를 칠판에 써주었다. 그 다음에 크기가 큰 수를 말해보라고 했다.</p>
  </li>
  <li>
    <p>상수는 수를 다른 사람과 다르게 거꾸로 읽는다. 예를 들어, 734와 893을 칠판에 적었다면, 상수는 이 수를 437과 398로 읽는다. 따라서, 상수는 두 수중 큰 수인 437을 큰 수라고 말할 것이다.</p>
  </li>
  <li>
    <p>두 수가 주어졌을 때, 상수의 대답을 출력하는 프로그램을 작성하시오.<br /><br /></p>
  </li>
</ul>

<h1 id="입력">입력</h1>
<ul>
  <li>첫째 줄에 상근이가 칠판에 적은 두 수 A와 B가 주어진다. 두 수는 같지 않은 세 자리 수이며, 0이 포함되어 있지 않다.<br /><br /></li>
</ul>

<h1 id="출력">출력</h1>
<ul>
  <li>첫째 줄에 상수의 대답을 출력한다.<br /><br /><br /></li>
</ul>

<h1 id="-풀이">👀 풀이</h1>
<ul>
  <li>입력으로 주어지는 숫자들을 % 연산을 이용해 뒤집은 다음 뒤집은 수들을 비교한 뒤 큰 값을 출력한다.</li>
  <li>버퍼입출력을 이용해 출력할 때 주의점은 정수형은 string으로 타입캐스팅을 해 주어야 제대로 출력된다.(처음에 이걸 모르고 정수형 그대로 넣어서 이상한 값이 출력되어서 헤멨다…)<br /><br /></li>
</ul>

<script src="https://gist.github.com/miro7923/b980385c09874e8349d10b6b1dfe72d1.js"></script>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="BOJ" /><category term="Algorithm" /><category term="BOJ" /><category term="No2908" /><category term="String" /><category term="Java" /><summary type="html"><![CDATA[문제 링크 https://www.acmicpc.net/problem/2908]]></summary></entry><entry><title type="html">MySQL 시작하기</title><link href="http://localhost:4000/mysql/mysql-beginning/" rel="alternate" type="text/html" title="MySQL 시작하기" /><published>2022-02-03T00:00:00+09:00</published><updated>2022-02-03T00:00:00+09:00</updated><id>http://localhost:4000/mysql/mysql-beginning</id><content type="html" xml:base="http://localhost:4000/mysql/mysql-beginning/"><![CDATA[<h1 id="-mysql-시작하기">👀 MySql 시작하기</h1>
<ul>
  <li>맥 기준으로 <code class="language-plaintext highlighter-rouge">MySql</code>을 설치하는 방법에는 2가지가 있는데</li>
  <li><code class="language-plaintext highlighter-rouge">homebrew</code>를 통해 설치하는 방법과</li>
  <li>
    <p>MySql 홈페이지에서 <code class="language-plaintext highlighter-rouge">dmg</code> 파일을 다운받아 설치하는 방법이 있다. <br /><br /></p>
  </li>
  <li>나는 여기서 <code class="language-plaintext highlighter-rouge">homebrew</code>를 통해 설치하는 방법을 택했다.</li>
  <li><code class="language-plaintext highlighter-rouge">homebrew</code>는 맥에서 쓸 수 있는 터미널 버전 앱스토어 같은 느낌으로 개발에 필요한 각종 소프트웨어들을 명령어 한 줄로 간편하게 설치할 수 있다.</li>
</ul>

<h2 id="mysql-설치">MySql 설치</h2>
<ul>
  <li><code class="language-plaintext highlighter-rouge">homebrew</code>가 설치되어 있다는 전제하에 <code class="language-plaintext highlighter-rouge">homebrew</code> 터미널을 열어 명령어 입력을 통한 설치를 진행할 것인데, 먼저 홈 브루를 최신 버전으로 업데이트 시켜주고 시작하자.
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>brew update
</code></pre></div>    </div>
  </li>
  <li>업데이트가 완료되면 아래 명령어를 입력하면 MySql이 설치된다.
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>brew install mysql
</code></pre></div>    </div>
  </li>
  <li>설치가 완료된 후
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>brew list
</code></pre></div>    </div>
  </li>
  <li>를 입력하면 홈 브루를 통해 설치된 프로그램들이 나열되는데 그 중에 mysql이 있으면 설치가 잘 된 것임</li>
</ul>

<h2 id="mysql-실행">MySql 실행</h2>
<ul>
  <li>아까 설치할 때 썼던 터미널창에서 명령어 입력을 통해 <code class="language-plaintext highlighter-rouge">MySql</code>을 실행할 수 있는데 역시 2가지 방법이 있다.
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>brew services start mysql 혹은
mysql.server start
</code></pre></div>    </div>
  </li>
  <li>둘 중 하나를 입력해서 <code class="language-plaintext highlighter-rouge">MySql</code>서버를 시작할 수 있다.</li>
  <li>네트워크 연결 허용하겠냐는 창이 뜨면 허용하겠다고 하면 된다.</li>
</ul>

<h2 id="mysql-초기-설정">MySql 초기 설정</h2>
<ul>
  <li>서버가 시작되었다고 바로 쓸 수 있는 것은 아니고 간단한 설정을 해 주어야 한다.
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>mysql_secure_installation
</code></pre></div>    </div>
  </li>
  <li>
    <p>위 명령어를 입력하면 <code class="language-plaintext highlighter-rouge">MySql</code> 초기 세팅을 시작할 수 있다.<br /><br /></p>
  </li>
  <li>
    <table>
      <tbody>
        <tr>
          <td>“Would you like to setup VALIDATE PASSWORD component? (Press y</td>
          <td>Y for Yes, any other key for No)”</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>비밀번호를 복잡하게 설정하겠느냐는 것인데 아직 초보 단계니까 <code class="language-plaintext highlighter-rouge">No</code>를 입력해서 ‘1234’와 같은 쉬운 비밀번호를 설정한다. (<code class="language-plaintext highlighter-rouge">Yes</code>를 입력하면 복잡한 비밀번호 설정)</li>
  <li>
    <p>새 비밀번호를 입력하라는 메시지가 나오면 입력하고 엔터 누르면 된다.<br /><br /></p>
  </li>
  <li>
    <table>
      <tbody>
        <tr>
          <td>“Remove anonymous users? (Press y</td>
          <td>Y for Yes. any other key for No)”</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>사용자 설정을 묻는 것인데 <code class="language-plaintext highlighter-rouge">Yes</code>를 선택했다.</li>
  <li>Yes - 접속하는 경우 “mysql -uroot”처럼 -u 옵션 필요</li>
  <li>
    <p>No - 접속하는 경우 “mysql”처럼 -u 옵션 불필요<br /><br /></p>
  </li>
  <li>
    <table>
      <tbody>
        <tr>
          <td>“Disallow root login remotely? (Press y</td>
          <td>Y for Yes, any other key for No)”</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>다른 IP에서 root 아이디로 원격 접속이 가능한지 묻는 것인데 <code class="language-plaintext highlighter-rouge">Yes</code>는 불가능, <code class="language-plaintext highlighter-rouge">No</code>는 가능</li>
  <li>
    <p>나는 <code class="language-plaintext highlighter-rouge">Yes</code>로 선택했다.<br /><br /></p>
  </li>
  <li>
    <table>
      <tbody>
        <tr>
          <td>“Remove test database and access to it? (Press y</td>
          <td>Y for Yes, any other key for No)”</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>
    <p>테스트 데이터베이스를 삭제할건지 말건지 묻는 것인데 나는 <code class="language-plaintext highlighter-rouge">Yes</code>로 선택했다.<br /><br /></p>
  </li>
  <li>
    <table>
      <tbody>
        <tr>
          <td>“Reload privilege tables now? (Press y</td>
          <td>Y for Yes, any other key for No)”</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>
    <p>변경된 권한을 테이블에 적용하는 설정에 대한 질문인데 이 질문은 무조건 <code class="language-plaintext highlighter-rouge">Yes</code>로 선택하는 것이 좋다고 한다.<br /><br /></p>
  </li>
  <li>여기까지 하면 모든 초기 설정이 완료된다.</li>
</ul>

<h2 id="mysql-접속">MySql 접속</h2>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>mysql -u root -p
</code></pre></div></div>
<ul>
  <li>위 명령어를 입력하면 root 아이디로 로그인할 수 있다.</li>
  <li>비밀번호 입력창이 나오면 비밀번호를 입력 후(보이지 않지만 그냥 치면 됨) 엔터를 누르면 로그인이 완료된다.</li>
  <li>정상적으로 로그인 되면 쉘이 <code class="language-plaintext highlighter-rouge">mysql&gt;</code>로 바뀐다.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>mysql&gt; status;
</code></pre></div></div>
<ul>
  <li>위 명령어를 입력하면 현재 설정을 확인할 수 있다.</li>
</ul>

<h2 id="mysql-종료">MySql 종료</h2>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>mysql&gt; exit
</code></pre></div></div>
<ul>
  <li>위 명령어를 입력하면 <code class="language-plaintext highlighter-rouge">Bye</code>라는 메시지와 함께 <code class="language-plaintext highlighter-rouge">mysql</code>에서 빠져나올 수 있다.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>brew services stop mysql 혹은
mysql.server stop
</code></pre></div></div>
<ul>
  <li>둘 중 하나를 입력하면 <code class="language-plaintext highlighter-rouge">MySql</code> 서버가 종료된다.</li>
</ul>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="MySQL" /><category term="MySQL" /><category term="Database" /><category term="JSP" /><summary type="html"><![CDATA[👀 MySql 시작하기 맥 기준으로 MySql을 설치하는 방법에는 2가지가 있는데 homebrew를 통해 설치하는 방법과 MySql 홈페이지에서 dmg 파일을 다운받아 설치하는 방법이 있다.]]></summary></entry><entry><title type="html">운영체제</title><link href="http://localhost:4000/operating%20system/OS-01/" rel="alternate" type="text/html" title="운영체제" /><published>2022-02-02T00:00:00+09:00</published><updated>2022-02-02T00:00:00+09:00</updated><id>http://localhost:4000/operating%20system/OS-01</id><content type="html" xml:base="http://localhost:4000/operating%20system/OS-01/"><![CDATA[<h1 id="-운영체제란">👀 운영체제란?</h1>
<ul>
  <li>Operating System, OS</li>
  <li>
    <p>컴퓨터 하드웨어 바로 위에 설치되어 사용자 및 다른 모든 소프트웨어와 하드웨어를 연결하는 소프트웨어 계층<br /><br />
<img src="../../assets/images/os.png" alt="os" /><br /><br /></p>
  </li>
  <li>좁은 의미의 운영체제(커널)
    <ul>
      <li>운영체제의 핵심 부분으로 메모리에 상주하는 부분</li>
      <li>전공자 입장에서는 운영체제 하면 커널만을 이야기한다.</li>
    </ul>
  </li>
  <li>넓은 의미의 운영체제
    <ul>
      <li>커널 뿐 아니라 메모리에 상주하지 않는 각종 주변 시스템 유틸리티를 포함한 개념<br /><br /></li>
    </ul>
  </li>
</ul>

<h2 id="-운영체제의-목적">🔸 운영체제의 목적<br /></h2>
<ol>
  <li>컴퓨터 시스템을 편라하게 사용할 수 있는 환경 제공</li>
  <li>컴퓨터 시스템의 <strong>자원을 효율적으로 관리</strong>
    <ul>
      <li>하드웨어 자원인 프로세서, 기억장치, 입출력 장치들의 관리와</li>
      <li>소프트웨어 자원인 프로세스, 파일, 메시지 등 모든 것을 관리한다.</li>
      <li>사용자간의 형평성 있는 자원 분배가 가능해야 하고 <strong>주어진 자원으로 최대한의 성능</strong>을 낼 수 있어야 한다.</li>
      <li>실행 중인 프로그램들은 CPU를 번갈아가며 차지하며 동작을 하게 되는데 이 때 운영체제는 한 프로그램이 CPU를 너무 오랫동안 쓰지 않고 짧은 시간동안 번갈아 쓰도록 할당해 주어야 한다.</li>
      <li>또한 실행 중인 프로그램들에게 메모리 공간을 적절히 분배해 주어야 한다.<br /><br /></li>
    </ul>
  </li>
</ol>

<h2 id="-운영체제의-분류">🔸 운영체제의 분류</h2>
<ul>
  <li>동시 작업 가능 여부</li>
  <li>사용자의 수</li>
  <li>처리 방식<br /><br /></li>
  <li>위 세 가지에 따라 분류할 수 있는데 현대 운영체제는 동시 작업이 가능하고 다중 사용자를 지원하며 시분할이 가능하다고 정리할 수 있다.</li>
</ul>

<h3 id="️-동시-작업-가능-여부">☑️ 동시 작업 가능 여부</h3>
<h4 id="단일-작업single-tasking">단일 작업(single tasking)</h4>
<ul>
  <li>한 번에 하나의 작업만을 처리한다.</li>
  <li>예) MS-DOS 프롬프트 상에서는 한 명령의 수행을 끝내기 전에 다른 명령을 수행시킬 수 없음</li>
  <li>과거에 MS-DOS에서 주로 사용되던 방식으로 현대 컴퓨터에선 쓰이지 않지만 엘리베이터처럼 기능이 단순하거나 특수 목적을 수행하는 기계에는 지금도 사용되고 있다.</li>
</ul>

<h4 id="다중-작업multi-tasking">다중 작업(multi tasking)</h4>
<ul>
  <li>동시에 두 개 이상의 작업 처리</li>
  <li>예) UNIX, MS Windows 등에서는 한 명령의 수행이 끝나기 전에 다른 명령이나 프로그램을 수행할 수 있음</li>
  <li>스마트폰을 포함한 현대의 대부분의 하드웨어에서 사용되는 운영체제이다.<br /><br /></li>
</ul>

<h3 id="️-사용자의-수">☑️ 사용자의 수</h3>
<h4 id="단일-사용자single-user">단일 사용자(single user)</h4>
<ul>
  <li>예) MS-DOS, MS Windows</li>
</ul>

<h4 id="다중-사용자multi-user">다중 사용자(multi user)</h4>
<ul>
  <li>예) UNIX, NT server</li>
  <li>사용자가 많아지면 파일에 대한 접근 권한이나 사용자간 자원 분배를 형평성 있게 해 줄 수 있어야 한다.<br /><br /></li>
</ul>

<h3 id="️-처리-방식">☑️ 처리 방식</h3>
<h4 id="일괄-처리batch-processing">일괄 처리(batch processing)</h4>
<ul>
  <li><code class="language-plaintext highlighter-rouge">Interactive</code> 하지 않은 방식</li>
  <li>작업 요청을 일정량 모아서 한꺼번에 처리</li>
  <li>작업이 완전 종료될 때까지 기다려야 함(하루 이상 걸림)</li>
  <li>에) 초기 Punch Card 처리 시스템</li>
</ul>

<h4 id="시분할time-sharing">시분할(time sharing)</h4>
<ul>
  <li><code class="language-plaintext highlighter-rouge">Interactive</code>한 방식</li>
  <li>현대에 주로 사용하는 운영체제로 일반적인 범용 컴퓨터에서 사용</li>
  <li>여러 작업을 수행할 때 컴퓨터 처리 능력을 일정한 시간 단위로 분할해서 사용</li>
  <li>일괄 처리 시스템에 비해 짧은 응답 시간을 가짐(UNIX)</li>
  <li>하지만 응답 시간이 항상 고정된 것은 아니며 사용자가 많아지면 느려질 수 있다.</li>
  <li>사람이 빠르다고 느끼면서 주어진 자원과 시간을 최대한 활용하는 것이 목적이다.</li>
</ul>

<h4 id="실시간realtime-os">실시간(Realtime OS)</h4>
<ul>
  <li>정해진 시간 안에 어떠한 일이 반드시 종료됨이 보장되어야 하는 실시간시스템을 위한 OS</li>
  <li>원자로/공장 제어, 미사일 제어, 반도체 장비, 로보트 제어 등 특수 목적을 가진 시스템에서 사용된다.</li>
</ul>

<h5 id="️-실시간-시스템의-개념-확장">▪️ 실시간 시스템의 개념 확장</h5>
<ul>
  <li>Hard realtime system(경성 실시간 시스템)
    <ul>
      <li>데드라인을 지키지 않으면 큰일나는 시스템</li>
      <li>예) 반도체, 미사일 등</li>
    </ul>
  </li>
  <li>Soft realtime system(연성 실시간 시스템)
    <ul>
      <li>데드라인을 좀 못 지켜도 괜찮은 시스템</li>
      <li>예) OTT<br /><br /></li>
    </ul>
  </li>
</ul>

<h2 id="-비슷한-의미로-사용되지만-약간-다른-용어들">🔸 비슷한 의미로 사용되지만 약간 다른 용어들</h2>
<ul>
  <li><code class="language-plaintext highlighter-rouge">Multitasking</code> : 하나의 프로그램이 끝나기 전에 다른 프로그램 작업이 가능한 것</li>
  <li><code class="language-plaintext highlighter-rouge">Multiprogramming</code> : 여러 프로그램이 메모리에 올라가 있는 것을 강조</li>
  <li><code class="language-plaintext highlighter-rouge">Time sharing</code> : <code class="language-plaintext highlighter-rouge">CPU</code>의 시간을 분할하여 나누어 쓴다는 것을 강조</li>
  <li><code class="language-plaintext highlighter-rouge">Multiprocess</code> : 여러 프로그램이 동시에 실행된다.</li>
  <li>=&gt; 모두 컴퓨터에서 여러 작업을 동시에 수행한다는 것을 뜻하지만 어디에 더 초점을 맞추느냐에 따라 다르게 사용된다.</li>
</ul>

<h3 id="️-multiprocessor">☑️ Multiprocessor</h3>
<ul>
  <li>하나의 컴퓨터에 <code class="language-plaintext highlighter-rouge">CPU(processor)</code>가 여러 개 붙어 있음을 의미</li>
  <li><code class="language-plaintext highlighter-rouge">CPU</code>가 하나임을 전제로 하는 위의 네 가지 용어들과는 하드웨어적으로 다르다.<br /><br /></li>
</ul>

<h2 id="-운영체제의-예">🔸 운영체제의 예</h2>
<h3 id="️-유닉스unix">☑️ 유닉스(UNIX)</h3>
<ul>
  <li>멀티태스킹 가능</li>
  <li>다중 사용자용</li>
  <li>대형 서버용</li>
  <li>코드의 대부분을 C언어로 작성 - 기계어 사용에 어려움이 많아서 유닉스 개발용으로 C언어를 만들었다.</li>
  <li>높은 이식성 - 다른 기계어 집합을 사용하는 컴퓨터에 이식이 쉽다.</li>
  <li>최소한의 커널 구조</li>
  <li>복잡한 시스템에 맞게 확장 용이</li>
  <li>소스 코드 공개 - 학술적으로 사용하기 좋다.</li>
  <li>프로그램 개발에 용이</li>
  <li>다양한 버전
    <ul>
      <li>System V, FeeBSD, SunOS, Solaris - 유로. 소스 코드 비공개</li>
      <li>Linux - 무료. 소스 코드 공개. 유닉스보다는 규모가 작은 환경이나 개인용 컴퓨터에 사용된다.</li>
    </ul>
  </li>
</ul>

<h3 id="️-dosdisk-operating-system">☑️ DOS(Disk Operating System)</h3>
<ul>
  <li>MS사에서 1981년 IBM-PC를 위해 개발</li>
  <li>단일 사용자용 운영체제</li>
  <li>싱글태스크</li>
  <li>메모리 관리 능력의 한계(주 기억 장치 최대 용량 : 640KB)</li>
</ul>

<h3 id="️-ms-windows">☑️ MS Windows</h3>
<ul>
  <li>MS사의 다중 작업용 GUI 기반 운영체제</li>
  <li>Plug and Play, 네트워크 환경 강화</li>
  <li>DOS용 응용 프로그램과 호환성 제공</li>
  <li>불안정성(초창기 윈도우즈)</li>
  <li>풍부한 지원 소프트웨어</li>
</ul>

<h3 id="️-handheld-device를-위한-os">☑️ Handheld device를 위한 OS</h3>
<ul>
  <li>PalmOS, Pocket PC(WinCE), Tiny OS<br /><br /></li>
</ul>

<h2 id="-운영체제의-구조">🔸 운영체제의 구조</h2>
<ul>
  <li>크게 <code class="language-plaintext highlighter-rouge">CPU</code> - <code class="language-plaintext highlighter-rouge">memory</code> - <code class="language-plaintext highlighter-rouge">Disk</code> - <code class="language-plaintext highlighter-rouge">I/O device</code> 구조</li>
</ul>

<h3 id="️-cpu">☑️ CPU</h3>
<ul>
  <li><code class="language-plaintext highlighter-rouge">CPU 스케줄링</code>을 통해 실행중인 프로그램들에게 <code class="language-plaintext highlighter-rouge">CPU</code>를 효율적으로 할당해야 함</li>
  <li><code class="language-plaintext highlighter-rouge">CPU</code>에게는 선착순 처리가 효율적이지 않기 때문에 프로그램마다 걸리는 작업 시간에 따라 처리하도록 스케줄링한다.</li>
</ul>

<h3 id="️-memory">☑️ memory</h3>
<ul>
  <li>프로그램을 실행하려면 <code class="language-plaintext highlighter-rouge">memory</code>에 올려야 하는데 <code class="language-plaintext highlighter-rouge">memory</code>는 한정되어 있기 때문에 적당히 잘 쪼개어 써야 한다.</li>
  <li>최근에 많이 사용된 데이터는 오래 보관하고 그렇지 않으면 쫓아내는 방식으로 관리</li>
</ul>

<h3 id="️-disk">☑️ Disk</h3>
<ul>
  <li><code class="language-plaintext highlighter-rouge">Disk</code>에는 헤드가 있고 그 헤드를 움직이면서 일정 위치에 파일을 기록하기 때문에 <code class="language-plaintext highlighter-rouge">I/O</code> 요청이 들어왔을 때 헤드를 최대한 적게 움직이면서 최대한 빠르게 많이 처리할 수 있도록 처리 순서를 스케줄링 해야 한다.</li>
</ul>

<h3 id="️-io-device">☑️ I/O device</h3>
<ul>
  <li>지금까지 나온 장치들 중에선 가장 느리다.</li>
  <li>때문에 <code class="language-plaintext highlighter-rouge">인터럽트</code> 기반으로 관리되며 <code class="language-plaintext highlighter-rouge">CPU</code>는 평소에는 자기 할 일을 하고 있다가 <code class="language-plaintext highlighter-rouge">I/O</code> 장치에서 <code class="language-plaintext highlighter-rouge">인터럽트</code> 요청이 들어오면 입출력을 수행하는 방식으로 진행된다.</li>
</ul>

<h3 id="️-프로세스-관리">☑️ 프로세스 관리</h3>
<ul>
  <li>프로세스의 생성과 삭제</li>
  <li>자원 할당 및 반환</li>
  <li>프로세스 간 협력</li>
</ul>

<h3 id="️-그-외">☑️ 그 외</h3>
<ul>
  <li>보호 시스템</li>
  <li>네트워킹</li>
  <li>명령어 해석기(command line interpreter)</li>
</ul>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="Operating System" /><category term="CS" /><category term="OS" /><summary type="html"><![CDATA[👀 운영체제란? Operating System, OS 컴퓨터 하드웨어 바로 위에 설치되어 사용자 및 다른 모든 소프트웨어와 하드웨어를 연결하는 소프트웨어 계층]]></summary></entry><entry><title type="html">시스템 구조와 프로그램 실행</title><link href="http://localhost:4000/operating%20system/OS-02-System-structure-Program-excution/" rel="alternate" type="text/html" title="시스템 구조와 프로그램 실행" /><published>2022-02-02T00:00:00+09:00</published><updated>2022-02-02T00:00:00+09:00</updated><id>http://localhost:4000/operating%20system/OS-02-System-structure-Program-excution</id><content type="html" xml:base="http://localhost:4000/operating%20system/OS-02-System-structure-Program-excution/"><![CDATA[<h1 id="-컴퓨터-시스템-구조">👀 컴퓨터 시스템 구조<br /></h1>

<p><img src="../../assets/images/systemStructure.png" alt="systemStructure" /><br /><br /></p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">CPU</code>는 매 시간마다 <code class="language-plaintext highlighter-rouge">Memory</code>에서 기계어 <code class="language-plaintext highlighter-rouge">Instruction</code>을 읽어서 실행하게 된다.</li>
  <li>따라서 <code class="language-plaintext highlighter-rouge">Memory</code>는 <code class="language-plaintext highlighter-rouge">CPU</code>의 작업공간이라 할 수 있다.</li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">Disk</code>가 <code class="language-plaintext highlighter-rouge">I/O</code> 장치인 이유는 데이터를 <code class="language-plaintext highlighter-rouge">Memory</code>에서 읽어들이기도 하고 처리된 데이터를 가져와서 저장하기도 하기 때문이다.<br /><br /></p>
  </li>
  <li><code class="language-plaintext highlighter-rouge">device controller</code>는 각 <code class="language-plaintext highlighter-rouge">I/O device</code>를 전담하는 작은 <code class="language-plaintext highlighter-rouge">CPU</code> 역할을 한다.</li>
  <li><code class="language-plaintext highlighter-rouge">I/O device</code>가 <code class="language-plaintext highlighter-rouge">CPU</code>에 비해 많이 느려서 <code class="language-plaintext highlighter-rouge">CPU</code>가 <code class="language-plaintext highlighter-rouge">I/O</code> 작업 처리가 끝나는 것을 마냥 기다릴 수는 없기 때문에 중간에 <code class="language-plaintext highlighter-rouge">controller</code>를 둬서 <code class="language-plaintext highlighter-rouge">I/O</code> 작업이 끝나면 <code class="language-plaintext highlighter-rouge">CPU</code>에게 알려준다.</li>
  <li><code class="language-plaintext highlighter-rouge">local buffer</code>는 각 <code class="language-plaintext highlighter-rouge">I/O device controller</code>의 작업공간이다.</li>
  <li>입력받은 내용이나 출력할 내용을 여기에 저장해뒀다가 <code class="language-plaintext highlighter-rouge">device controller</code>가 사용자 프로그램으로 전달하거나 화면에 출력하는 등의 작업을 한다.<br /><br /></li>
</ul>

<h2 id="mode-bit">Mode bit</h2>
<ul>
  <li>사용자 프로그램의 잘못된 수행으로 다른 프로그램 및 운영체제에 피해가 가지 않도록 하기 위한 보호 장치가 필요해서 사용한다.</li>
  <li>현재 수행중인 <code class="language-plaintext highlighter-rouge">Instruction</code>이 운영체제인지 사용자 프로그램인지 구분하기 위한 것</li>
  <li><code class="language-plaintext highlighter-rouge">0</code>과 <code class="language-plaintext highlighter-rouge">1</code>이라는 두 가지 <code class="language-plaintext highlighter-rouge">operation</code>을 사용해 <code class="language-plaintext highlighter-rouge">모니터 모드</code>와 <code class="language-plaintext highlighter-rouge">사용자 모드</code>를 구분한다.
    <ul>
      <li><code class="language-plaintext highlighter-rouge">1</code> 사용자 모드 : 사용자 프로그램 수행</li>
      <li><code class="language-plaintext highlighter-rouge">0</code> 모니터 모드(= 커널 모드, 시스템 모드) : <code class="language-plaintext highlighter-rouge">OS</code> 코드 수행</li>
    </ul>
  </li>
  <li>보안을 해칠 수 있는 중요한 명령어는 모니터 모드에서만 수행 가능한 <code class="language-plaintext highlighter-rouge">특권명령</code>으로 규정한다.</li>
  <li><code class="language-plaintext highlighter-rouge">Interrupt</code>나 <code class="language-plaintext highlighter-rouge">Exception</code> 발생시 <code class="language-plaintext highlighter-rouge">하드웨어</code>가 <code class="language-plaintext highlighter-rouge">mode bit</code>을 0으로 바꾼다.</li>
  <li>사용자 프로그램에게 <code class="language-plaintext highlighter-rouge">CPU</code>를 넘기기 전에 <code class="language-plaintext highlighter-rouge">mode bit</code>을 1로 세팅<br /><br /></li>
</ul>

<h2 id="timer">Timer</h2>
<ul>
  <li><code class="language-plaintext highlighter-rouge">CPU</code>를 특정 프로그램이 독점하는 것으로부터 보호하기 위해서 사용한다.
    <ul>
      <li>정해진 시간이 흐른 뒤 운영체제에게 제어권이 넘어가도록 <code class="language-plaintext highlighter-rouge">Interrupt</code>를 발생시킨다.</li>
      <li><code class="language-plaintext highlighter-rouge">Timer</code>는 매 클럭 틱 때마다 1씩 감소한다.</li>
      <li><code class="language-plaintext highlighter-rouge">Timer</code> 값이 0이 되면 <code class="language-plaintext highlighter-rouge">Timer Interrupt</code> 발생<br /><br /></li>
    </ul>
  </li>
  <li><code class="language-plaintext highlighter-rouge">time sharing</code>을 구현하기 위해 널리 이용된다.</li>
  <li>현재 시간을 계산하기 위해서도 사용된다.<br /><br /></li>
</ul>

<h2 id="device-controller">Device Controller</h2>
<ul>
  <li>해당 <code class="language-plaintext highlighter-rouge">I/O</code> 장치유형을 관리하는 일종의 작은 <code class="language-plaintext highlighter-rouge">CPU</code></li>
  <li>제어 정보를 위해 <code class="language-plaintext highlighter-rouge">control register</code>, <code class="language-plaintext highlighter-rouge">status register</code>를 가진다.
    <ul>
      <li><code class="language-plaintext highlighter-rouge">CPU</code>는 <code class="language-plaintext highlighter-rouge">device controller</code>를 통해 일을 시키는데 이 때 <code class="language-plaintext highlighter-rouge">control register</code>와 <code class="language-plaintext highlighter-rouge">status register</code>를 사용한다.</li>
    </ul>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">local buffer</code>를 가진다.(일종의 <code class="language-plaintext highlighter-rouge">data register</code>)<br /><br /></p>
  </li>
  <li><code class="language-plaintext highlighter-rouge">I/O</code>는 실제 <code class="language-plaintext highlighter-rouge">device</code>와 <code class="language-plaintext highlighter-rouge">local buffer</code> 사이에서 일어난다.</li>
  <li><code class="language-plaintext highlighter-rouge">device controller</code>는 <code class="language-plaintext highlighter-rouge">I/O</code>가 끝났을 경우 <code class="language-plaintext highlighter-rouge">Interrupt</code>로 <code class="language-plaintext highlighter-rouge">CPU</code>에 그 사실을 알린다.<br /><br /></li>
</ul>

<h3 id="️-device-driver장치구동기">☑️ device driver(장치구동기)</h3>
<ul>
  <li><code class="language-plaintext highlighter-rouge">OS</code> 코드 중 각 장치별 처리루틴 ➡️ <code class="language-plaintext highlighter-rouge">software</code>
    <ul>
      <li>ex) 새 프린터를 사면 설치하는 프린터용 드라이버</li>
    </ul>
  </li>
</ul>

<h3 id="️-device-controller장치제어기">☑️ device controller(장치제어기)</h3>
<ul>
  <li>각 장치를 통제하는 일종의 작은 <code class="language-plaintext highlighter-rouge">CPU</code> ➡️ <code class="language-plaintext highlighter-rouge">hardware</code><br /><br /></li>
</ul>

<h2 id="입출력io의-수행">입출력(I/O)의 수행</h2>
<ul>
  <li>모든 입출력 명령은 <code class="language-plaintext highlighter-rouge">특권명령</code>이다.</li>
</ul>

<h3 id="️-사용자-프로그램의-io-방법">☑️ 사용자 프로그램의 <code class="language-plaintext highlighter-rouge">I/O</code> 방법</h3>
<ul>
  <li>시스템콜(<code class="language-plaintext highlighter-rouge">system call</code>)
    <ul>
      <li>사용자 프로그램은 운영체제에게 <code class="language-plaintext highlighter-rouge">I/O</code> 요청</li>
    </ul>
  </li>
  <li><code class="language-plaintext highlighter-rouge">trap</code>을 사용하여 인터럽트 벡터의 특정 위치로 이동</li>
  <li>제어권이 인터럽트 벡터가 가리키는 인터럽트 서비스 루틴으로 이동</li>
  <li>올바른 <code class="language-plaintext highlighter-rouge">I/O</code> 요청인지 확인 후 <code class="language-plaintext highlighter-rouge">I/O</code> 수행</li>
  <li><code class="language-plaintext highlighter-rouge">I/O</code> 완료 시 제어권을 <code class="language-plaintext highlighter-rouge">system call</code> 다음 명령으로 옮김<br /><br /></li>
</ul>

<h2 id="인터럽트interrupt">인터럽트(Interrupt)</h2>
<ul>
  <li>인터럽트 당한 시점의 레지스터와 <code class="language-plaintext highlighter-rouge">program counter</code>를 저장한 후 <code class="language-plaintext highlighter-rouge">CPU</code>의 제어를 인터럽트 처리 루틴에 넘긴다.</li>
</ul>

<h3 id="️-넓은-의미의-인터럽트">☑️ 넓은 의미의 인터럽트</h3>
<ul>
  <li><code class="language-plaintext highlighter-rouge">Interrupt</code> (하드웨어 인터럽트) : 하드웨어가 발생시킨 인터럽트로 일반적인 의미의 인터럽트</li>
  <li><code class="language-plaintext highlighter-rouge">Trap</code> (소프트웨어 인터럽트)
    <ul>
      <li><code class="language-plaintext highlighter-rouge">Exception</code> : 프로그램이 오류를 범한 경우(프로그램 강제종료 등으로 대응)</li>
      <li><code class="language-plaintext highlighter-rouge">System call</code> : 프로그램이 커널 함수를 호출하는 경우</li>
    </ul>
  </li>
  <li>일반적으로 인터럽트 하면 하드웨어적인 인터럽트를 의미하고 소프트웨어적인 인터럽트는 <code class="language-plaintext highlighter-rouge">Trap</code>이라고 따로 지칭한다.</li>
</ul>

<h3 id="️-인터럽트-관련-용어">☑️ 인터럽트 관련 용어</h3>
<ul>
  <li>인터럽트 벡터
    <ul>
      <li>해당 인터럽트의 처리 루틴 주소(처리 위치)를 가지고 있다.</li>
    </ul>
  </li>
  <li>인터럽트 처리 루틴(= <code class="language-plaintext highlighter-rouge">Interrupt Service Routine</code>, 인터럽트 핸들러)
    <ul>
      <li>해당 인터럽트를 처리하는 커널 함수</li>
    </ul>
  </li>
</ul>

<h3 id="-현대의-운영체제는-인터럽트에-의해-구동된다">🔸 현대의 운영체제는 인터럽트에 의해 구동된다.</h3>
<ul>
  <li>만약 인터럽트가 없으면 <code class="language-plaintext highlighter-rouge">CPU</code>는 항상 사용자 프로그램이 쓰고 있게 될 것이다.<br /><br /></li>
</ul>

<h2 id="시스템콜system-call">시스템콜(System Call)</h2>
<ul>
  <li>사용자 프로그램이 운영체제의 서비스를 받기 위해 <code class="language-plaintext highlighter-rouge">커널 함수</code>를 호출하는 것</li>
  <li>사용자 프로그램이 <code class="language-plaintext highlighter-rouge">I/O</code> 등의 작업을 수행해야 할 때 <code class="language-plaintext highlighter-rouge">시스템콜</code>을 통해 운영체제에게 <code class="language-plaintext highlighter-rouge">CPU</code>를 넘겨줌으로서 필요한 서비스를 받을 수 있게 된다.<br /><br /></li>
</ul>

<h2 id="동기식-입출력과-비동기식-입출력">동기식 입출력과 비동기식 입출력</h2>
<h3 id="️-동기식-입출력-synchronous-io">☑️ 동기식 입출력 (Synchronous I/O)</h3>
<ul>
  <li>
    <p><code class="language-plaintext highlighter-rouge">I/O</code> 요청 후 입출력 작업이 완료된 후에야 제어가 사용자 프로그램에게 넘어간다.<br /><br /></p>
  </li>
  <li>구현 방법 1 (잘 안 씀)
    <ul>
      <li>하나의 <code class="language-plaintext highlighter-rouge">I/O</code>가 끝날 때까지 그거 하나만 한다.</li>
      <li><code class="language-plaintext highlighter-rouge">I/O</code>가 끝날 때까지 <code class="language-plaintext highlighter-rouge">CPU</code>를 낭비시킴</li>
      <li>매시점 하나의 <code class="language-plaintext highlighter-rouge">I/O</code>만 일어날 수 있음<br /><br /></li>
    </ul>
  </li>
  <li>구현 방법 2 (보통 이렇게 구현함)
    <ul>
      <li><code class="language-plaintext highlighter-rouge">I/O</code>가 완료될 때까지 해당 프로그램에게서 <code class="language-plaintext highlighter-rouge">CPU</code>를 빼앗음</li>
      <li><code class="language-plaintext highlighter-rouge">I/O</code> 처리를 기다리는 줄에 그 프로그램을 줄 세움</li>
      <li>다른 프로그램에게 <code class="language-plaintext highlighter-rouge">CPU</code>를 줌</li>
      <li>이 프로그램의 <code class="language-plaintext highlighter-rouge">I/O</code> 작업이 끝나면 다시 <code class="language-plaintext highlighter-rouge">CPU</code>를 준다.</li>
    </ul>
  </li>
</ul>

<h3 id="️-비동기식-입출력-asynchronous-io">☑️ 비동기식 입출력 (Asynchronous I/O)</h3>
<ul>
  <li><code class="language-plaintext highlighter-rouge">I/O</code>가 시작된 후 입출력 작업이 끝나기를 기다리지 않고 제어가 사용자 프로그램에게 즉시 넘어간다.</li>
</ul>

<h3 id="-두-경우-모두-io의-완료는-인터럽트로-알려준다">🔸 두 경우 모두 <code class="language-plaintext highlighter-rouge">I/O</code>의 완료는 인터럽트로 알려준다.</h3>

<h2 id="dmadirect-memory-access">DMA(Direct Memory Access)</h2>
<ul>
  <li>입출력 장치를 메모리에 가까운 속도로 처리하기 위해 사용한다.</li>
  <li><code class="language-plaintext highlighter-rouge">CPU</code>의 중재 없이 <code class="language-plaintext highlighter-rouge">device controller</code>가 <code class="language-plaintext highlighter-rouge">device</code>의 <code class="language-plaintext highlighter-rouge">buffer storage</code>의 내용을 메모리에 <code class="language-plaintext highlighter-rouge">block</code> 단위로 직접 전송</li>
  <li><code class="language-plaintext highlighter-rouge">byte</code> 단위가 아니라 <code class="language-plaintext highlighter-rouge">block</code> 단위로 인터럽트를 발생시킴<br /><br /></li>
</ul>

<h2 id="서로-다른-입출력-명령어">서로 다른 입출력 명령어<br /></h2>

<p><img src="../../assets/images/ioInstruction.png" alt="ioInstruction" /><br /><br /></p>

<ul>
  <li>일반적인 <code class="language-plaintext highlighter-rouge">I/O</code> 방식은 메모리를 관리하는 주소와 디바이스를 관리하는 주소를 따로 관리한다.</li>
  <li><code class="language-plaintext highlighter-rouge">Memory Mapped</code> 방식은 디바이스를 관리하는 주소도 메모리 영역에서 함께 관리한다.<br /><br /></li>
</ul>

<h2 id="저장장치-계층-구조">저장장치 계층 구조<br /></h2>

<p><img src="../../assets/images/storageHierarchy.png" alt="storageHierarchy" class="align-center" width="450" height="500" /><br /><br /></p>

<ul>
  <li>위로 갈수록 <code class="language-plaintext highlighter-rouge">Speed</code> ⬆️  <code class="language-plaintext highlighter-rouge">Cost</code> ⬆️(단위공간당 용량이 적어진다)  <code class="language-plaintext highlighter-rouge">Volatility</code> ⭕️ (<code class="language-plaintext highlighter-rouge">휘발성</code> - 전원을 끄면 데이터가 사라진다)
    <ul>
      <li><code class="language-plaintext highlighter-rouge">CPU</code>에서 직접 접근 가능(<code class="language-plaintext highlighter-rouge">byte</code> 단위 접근 가능)</li>
    </ul>
  </li>
  <li>아래로 갈수록 <code class="language-plaintext highlighter-rouge">Speed</code> ⬇️  <code class="language-plaintext highlighter-rouge">Cost</code> ⬇️(단위공간당 용량이 커진다)  <code class="language-plaintext highlighter-rouge">Volatility</code> ❌ (<code class="language-plaintext highlighter-rouge">비휘발성</code> - 전원을 꺼도 데이터가 사라지지 않는다)
    <ul>
      <li><code class="language-plaintext highlighter-rouge">CPU</code> 직접 접근 불가(<code class="language-plaintext highlighter-rouge">byte</code> 단위 접근이 불가능하며 <code class="language-plaintext highlighter-rouge">섹터</code> 단위 접근 가능)</li>
    </ul>
  </li>
</ul>

<h3 id="️-caching">☑️ Caching</h3>
<ul>
  <li>메인 메모리에 있는 내용 중 당장 필요한 것만 캐시 메모리에 올려 쓰는 것으로 재사용을 빠르게 하기 위한 목적<br /><br /></li>
</ul>

<h2 id="프로그램의-실행메모리-load">프로그램의 실행(메모리 load)<br /></h2>

<p><img src="../../assets/images/memoryLoad.png" alt="memoryLoad" /><br /><br /></p>

<h2 id="커널-주소-공간의-내용">커널 주소 공간의 내용<br /></h2>

<p><img src="../../assets/images/kernalAddress.png" alt="kernalAddress" /><br /><br /></p>

<h2 id="사용자-프로그램이-사용하는-함수">사용자 프로그램이 사용하는 함수</h2>
<ul>
  <li>
    <p>모든 프로그램은 함수 구조로 짜여 있다. (기계어 레벨에서도 함수의 시작과 끝이 표시됨)<br /><br /></p>
  </li>
  <li>사용자 정의 함수
    <ul>
      <li>자신의 프로그램에서 정의한 함수<br /><br /></li>
    </ul>
  </li>
  <li>라이브러리 함수
    <ul>
      <li>자신의 프로그램에서 정의하지 않고 만들어져 있는 것을 가져다 쓴 함수</li>
      <li>자신의 프로그램의 실행 파일에 포함되어 있다.</li>
    </ul>
  </li>
</ul>

<h3 id="️-이-두-가지는-자신의-프로그램의-코드-영역에-포함되어-있어서-가상-메모리-안에서-자유롭게-점프가-가능하다">☑️ 이 두 가지는 자신의 프로그램의 코드 영역에 포함되어 있어서 가상 메모리 안에서 자유롭게 점프가 가능하다.<br /><br /></h3>

<ul>
  <li>커널 함수
    <ul>
      <li>운영체제 프로그램의 함수</li>
      <li>커널 함수의 호출 = 시스템 콜</li>
    </ul>
  </li>
</ul>

<h3 id="️-커널-함수는-커널의-코드-영역에-포함되어-있기-때문에-사용자-프로그램에서-자유로운-점프를-할-수-없다-️-system-call을-통해-운영체제에게-cpu-제어권을-넘기게-된다">☑️ 커널 함수는 커널의 코드 영역에 포함되어 있기 때문에 사용자 프로그램에서 자유로운 점프를 할 수 없다. ➡️ <code class="language-plaintext highlighter-rouge">System call</code>을 통해 운영체제에게 <code class="language-plaintext highlighter-rouge">CPU</code> 제어권을 넘기게 된다.<br /><br /></h3>

<h2 id="프로그램의-실행">프로그램의 실행<br /></h2>

<p><img src="../../assets/images/programCycle.png" alt="programCycle" /></p>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="Operating System" /><category term="CS" /><category term="OS" /><category term="System Structure" /><category term="Program Execurion" /><summary type="html"><![CDATA[👀 컴퓨터 시스템 구조]]></summary></entry><entry><title type="html">세션(Session)과 쿠키(Cookie)</title><link href="http://localhost:4000/jsp/JSP-session-cookie/" rel="alternate" type="text/html" title="세션(Session)과 쿠키(Cookie)" /><published>2022-02-01T00:00:00+09:00</published><updated>2022-02-01T00:00:00+09:00</updated><id>http://localhost:4000/jsp/JSP-session-cookie</id><content type="html" xml:base="http://localhost:4000/jsp/JSP-session-cookie/"><![CDATA[<h1 id="-세션session이란">👀 세션(Session)이란?</h1>
<h2 id="️-서버랑-클라이언트와의-관계상태를-유지하기-위해서-사용하는-값">☑️ 서버랑 클라이언트와의 관계(상태)를 유지하기 위해서 사용하는 값</h2>
<ul>
  <li><code class="language-plaintext highlighter-rouge">HTTP 프로토콜</code>은 상태가 유지되지 않기 때문에 요청에 대한 응답이 한 번씩 이뤄지고 나면 그 관계가 소멸된다.</li>
  <li>하지만 이런 방식으로는 사용자가 회원 사이트에 로그인 했을 때 지속적으로 업무를 볼 수 없게 된다.</li>
  <li>그래서 사용자가 지속적으로 업무를 볼 수 있도록 서버와 클라이언트간의 관계를 일정 시간동안 유지해주기 위해 쓰는 것이 <code class="language-plaintext highlighter-rouge">세션</code>이다.</li>
  <li>세션객체(영역)는 브라우저당 1개씩 생성된다.</li>
</ul>

<h2 id="-세션-메소드">🔸 세션 메소드</h2>
<ul>
  <li>세션값 생성 : <code class="language-plaintext highlighter-rouge">session.setAttribute("이름", 값);</code></li>
  <li>세션값 사용 : <code class="language-plaintext highlighter-rouge">session.getAttribute("이름");</code></li>
  <li>세션값 제거 : <code class="language-plaintext highlighter-rouge">session.removeAttribute("이름");</code></li>
  <li>세션값 초기화 : <code class="language-plaintext highlighter-rouge">session.invalidate();</code>
    <ul>
      <li>❗️ 세션값 제거 메소드를 통한 부분제거보다는 세션값 초기화를 시켜야 한다.</li>
      <li>일부만 제거하면 사용자가 로그아웃 했는데 로그인 했을 때와 같은 행동이 일부 가능할 수 있다.
<br /><br /><br /></li>
    </ul>
  </li>
</ul>

<h1 id="-쿠키cookie란">👀 쿠키(Cookie)란?</h1>
<ul>
  <li><code class="language-plaintext highlighter-rouge">클라이언트</code> 측에서 관리되는 정보</li>
  <li>사용 가능한 기간동안 하드디스크에 저장되기 때문에 웹 브라우저가 사라져도 사용이 가능하다.</li>
  <li>하지만 그만큼 보안적으로 취약하다. (그래서 보안이 필요한 정보는 <code class="language-plaintext highlighter-rouge">세션</code> 사용)</li>
</ul>

<h2 id="-쿠키-생성-절차">🔸 쿠키 생성 절차</h2>
<h3 id="1-쿠키-생성">1. 쿠키 생성</h3>
<h3 id="2-쿠키가-필요로-하는-설정값-저장유효기간-설명-도메인-">2. 쿠키가 필요로 하는 설정값 저장(유효기간, 설명, 도메인, …)</h3>
<h3 id="3-웹-브라우저에-생성된-쿠키-정보-전달">3. 웹 브라우저에 생성된 쿠키 정보 전달</h3>
<h3 id="4-웹-브라우저-요청에서-쿠키를-얻어온다">4. 웹 브라우저 요청에서 쿠키를 얻어온다.</h3>
<h3 id="5-쿠키-정보는-이름-값의-데이터-쌍으로-형성된다">5. 쿠키 정보는 이름, 값의 데이터 쌍으로 형성된다.</h3>
<h3 id="6-쿠키-이름을-사용해서-해당-값을-사용한다">6. 쿠키 이름을 사용해서 해당 값을 사용한다.</h3>

<h2 id="-쿠키-사용-방법">🔸 쿠키 사용 방법</h2>
<h3 id="1-http-헤더-정보-사용---안씀-xx">1) <code class="language-plaintext highlighter-rouge">HTTP</code> 헤더 정보 사용 - 안씀 XX</h3>
<h3 id="2-서블릿-api-사용---현재-쓰는-방식">2) 서블릿 API 사용 - 현재 쓰는 방식</h3>

<ul>
  <li>쿠키 생성하는 예제 코드</li>
</ul>

<div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;%</span>
    <span class="c1">// 쿠키값 생성 - 서블릿 API 사용</span>
    <span class="nc">Cookie</span> <span class="n">cookie</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Cookie</span><span class="o">(</span><span class="s">"name"</span><span class="o">,</span> <span class="s">"CookieValue"</span><span class="o">);</span> <span class="c1">// HDD 저장X, 메모리에만 있는 상태</span>
		
    <span class="c1">// 쿠키값 설정 - 유효기간 설정</span>
    <span class="n">cookie</span><span class="o">.</span><span class="na">setMaxAge</span><span class="o">(</span><span class="mi">600</span><span class="o">);</span> <span class="c1">// 초 단위 - 10분</span>
		
    <span class="c1">// 쿠키값을 저장(응답정보(response)에 저장)</span>
    <span class="n">response</span><span class="o">.</span><span class="na">addCookie</span><span class="o">(</span><span class="n">cookie</span><span class="o">);</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"쿠키정보가 전달 완료시 사용자의 HDD에 저장"</span><span class="o">);</span>
<span class="nt">%&gt;</span>
</code></pre></div></div>

<ul>
  <li>
    <p>먼저 쿠키를 생성한 다음 클라이언트에게 전송한다.</p>
  </li>
  <li>
    <p>쿠키값 가져오는 예제 코드</p>
  </li>
</ul>

<div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;%</span>
    <span class="c1">// 쿠키값 가져오기(request - 요청정보로부터 꺼내오기)</span>
    <span class="nc">Cookie</span><span class="o">[]</span> <span class="n">cookies</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getCookies</span><span class="o">();</span>
			
    <span class="k">if</span> <span class="o">(</span><span class="kc">null</span> <span class="o">!=</span> <span class="n">cookies</span><span class="o">)</span> <span class="c1">// !!배열을 반복문 돌리기 전에 예외처리 꼭 하기!!</span>
    <span class="o">{</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">cookies</span><span class="o">.</span><span class="na">length</span> <span class="err">&gt;</span> <span class="n">i</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span>
        <span class="o">{</span>
            <span class="c1">//System.out.println(cookies[i]);</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">cookies</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">getName</span><span class="o">().</span><span class="na">equals</span><span class="o">(</span><span class="s">"name"</span><span class="o">))</span>
            <span class="o">{</span>
                <span class="c1">// Cookie cookie = new Cookie("name", "CookieValue"); // HDD 저장X, 메모리O</span>
                <span class="c1">// ⬆️ 얘를 가져올 것임</span>
                <span class="c1">// 이름이 같다면 내가 직접 생성한 쿠키임</span>
                <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">cookies</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">getValue</span><span class="o">());</span>
						
                <span class="n">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="s">"쿠키명: "</span> <span class="o">+</span> <span class="n">cookies</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">getName</span><span class="o">()</span> <span class="o">+</span> <span class="s">"\n"</span><span class="o">);</span>
                <span class="n">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="s">"쿠키값 : "</span> <span class="o">+</span> <span class="n">cookies</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">getValue</span><span class="o">());</span>
            <span class="o">}</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="nt">%&gt;</span>
</code></pre></div></div>

<ul>
  <li>그 다음 클라이언트 측에서 쿠키를 가져온다.</li>
  <li>쿠키값을 가져올 때엔 꼭 예외처리를 해서 <code class="language-plaintext highlighter-rouge">null</code>값이 아닐 때에만 가져오는 동작을 수행하도록 해야한다.</li>
</ul>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="JSP" /><category term="JSP" /><category term="WEB" /><category term="Session" /><category term="Cookie" /><summary type="html"><![CDATA[👀 세션(Session)이란? ☑️ 서버랑 클라이언트와의 관계(상태)를 유지하기 위해서 사용하는 값 HTTP 프로토콜은 상태가 유지되지 않기 때문에 요청에 대한 응답이 한 번씩 이뤄지고 나면 그 관계가 소멸된다. 하지만 이런 방식으로는 사용자가 회원 사이트에 로그인 했을 때 지속적으로 업무를 볼 수 없게 된다. 그래서 사용자가 지속적으로 업무를 볼 수 있도록 서버와 클라이언트간의 관계를 일정 시간동안 유지해주기 위해 쓰는 것이 세션이다. 세션객체(영역)는 브라우저당 1개씩 생성된다.]]></summary></entry><entry><title type="html">JSP 영역 객체와 속성</title><link href="http://localhost:4000/jsp/JSP-scope-attribute/" rel="alternate" type="text/html" title="JSP 영역 객체와 속성" /><published>2022-02-01T00:00:00+09:00</published><updated>2022-02-01T00:00:00+09:00</updated><id>http://localhost:4000/jsp/JSP-scope-attribute</id><content type="html" xml:base="http://localhost:4000/jsp/JSP-scope-attribute/"><![CDATA[<h1 id="-영역-객체scope와-속성attribute">👀 영역 객체(Scope)와 속성(Attribute)</h1>
<ul>
  <li>jsp 내장객체 중에서 특정 공간(Scope)에 정보를 저장하고, 저장된 정보(Attribute)를 공유할 수 있는 객체</li>
  <li><code class="language-plaintext highlighter-rouge">JSP</code>에서는 <code class="language-plaintext highlighter-rouge">page</code>, <code class="language-plaintext highlighter-rouge">request</code>, <code class="language-plaintext highlighter-rouge">session</code>, <code class="language-plaintext highlighter-rouge">application</code> 4가지 영역으로 정의한다.<br /><br />
<img src="../../assets/images/jspScope.png" alt="jspScope" /><br /><br /></li>
</ul>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="JSP" /><category term="JSP" /><category term="WEB" /><summary type="html"><![CDATA[👀 영역 객체(Scope)와 속성(Attribute) jsp 내장객체 중에서 특정 공간(Scope)에 정보를 저장하고, 저장된 정보(Attribute)를 공유할 수 있는 객체 JSP에서는 page, request, session, application 4가지 영역으로 정의한다.]]></summary></entry><entry><title type="html">CSS 기초</title><link href="http://localhost:4000/html/CSS-beginning/" rel="alternate" type="text/html" title="CSS 기초" /><published>2022-02-01T00:00:00+09:00</published><updated>2022-02-01T00:00:00+09:00</updated><id>http://localhost:4000/html/CSS-beginning</id><content type="html" xml:base="http://localhost:4000/html/CSS-beginning/"><![CDATA[<h1 id="-css란">👀 CSS란?</h1>
<ul>
  <li><code class="language-plaintext highlighter-rouge">Cascading Style Sheets</code>의 약자로 <code class="language-plaintext highlighter-rouge">HTML</code>로 만든 웹 문서 뼈대에 디자인을 적용하기 위한 것</li>
</ul>

<h2 id="-적용-방법">🔸 적용 방법</h2>
<ol>
  <li>태그에 바로 스타일 적용 - 잘 안씀<br /></li>
  <li><code class="language-plaintext highlighter-rouge">head</code> 안에서 스타일 적용<br /></li>
  <li>외부파일로 스타일 적용<br /><br /><br /></li>
</ol>

<h1 id="-기본-문법">👀 기본 문법</h1>
<div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">태그</span> <span class="nt">대상</span>
<span class="p">{</span>
    <span class="py">속성</span><span class="p">:</span> <span class="n">값</span><span class="p">;</span>
    <span class="py">속성</span><span class="p">:</span> <span class="n">값</span><span class="p">;</span> <span class="err">...</span>
<span class="p">}</span>

<span class="o">*</span>
<span class="p">{</span>
    <span class="err">HTML</span> <span class="err">내용</span> <span class="err">전체</span> <span class="err">선택</span>
<span class="p">}</span>

<span class="nt">h2</span>
<span class="p">{</span>
    <span class="nl">color</span><span class="p">:</span> <span class="no">blue</span><span class="p">;</span>
    <span class="nl">background-color</span><span class="p">:</span> <span class="no">skyblue</span><span class="p">;</span>
    <span class="err">모든</span> <span class="err">h2</span> <span class="err">태그에</span> <span class="err">적용</span>
<span class="p">}</span> 

<span class="nf">#p1</span>
<span class="p">{</span>
    <span class="err">id="p1"</span> <span class="err">인</span> <span class="err">id</span> <span class="err">모두</span> <span class="err">선택</span>
<span class="p">}</span>

<span class="nc">.p2</span>
<span class="p">{</span>
    <span class="err">class="p2"</span> <span class="err">인</span> <span class="err">class</span> <span class="err">모두</span> <span class="err">선택</span>
<span class="p">}</span>

<span class="nf">#footer</span> <span class="nt">p</span>
<span class="p">{</span>
    <span class="err">footer</span> <span class="err">안에</span> <span class="err">있는</span> <span class="err">p</span> <span class="err">태그에만</span> <span class="err">적용</span>
<span class="p">}</span>

<span class="c">/* 하이퍼링크 태그에만 부분적으로 적용하는 것도 가능하다 */</span>
<span class="nt">a</span><span class="nd">:link</span><span class="o">,</span> <span class="nt">a</span><span class="nd">:visited</span>
<span class="p">{</span>
	<span class="c">/* 하이퍼링크색, 방문한 하이퍼링크색 변경 */</span>
	<span class="nl">color</span><span class="p">:</span> <span class="no">black</span><span class="p">;</span>
<span class="p">}</span>

<span class="nt">a</span><span class="nd">:hover</span>
<span class="p">{</span>
	<span class="c">/* 하이퍼링크에 마우스를 올리면 */</span>
	<span class="nl">color</span><span class="p">:</span> <span class="no">white</span><span class="p">;</span>
	<span class="nl">background-color</span><span class="p">:</span> <span class="no">black</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">&lt;p id="p1"&gt;</code>, <code class="language-plaintext highlighter-rouge">&lt;span class="p2"&gt;</code> 와 같이 지정하며 <code class="language-plaintext highlighter-rouge">id</code>는 넓은 영역을 지정할 때 주로 사용하고 <code class="language-plaintext highlighter-rouge">class</code>는 좁은 영역을 지정할 때 주로 사용한다고 한다.
<br /><br /></li>
</ul>

<h1 id="-css-꾸미기-속성들">👀 CSS 꾸미기 속성들</h1>

<div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">p</span>
<span class="p">{</span>
	<span class="c">/* 배치 */</span>
	<span class="nl">display</span><span class="p">:</span> <span class="nb">block</span><span class="p">;</span> <span class="err">전체영역(문단영역)</span> <span class="err">:</span> <span class="err">블록레벨</span>
	<span class="nl">display</span><span class="p">:</span> <span class="nb">inline</span><span class="p">;</span> <span class="py">요소영역</span> <span class="p">:</span> <span class="n">인라인</span> <span class="n">레벨</span><span class="p">(</span><span class="n">가로로</span> <span class="n">붙음</span><span class="p">)</span>
	<span class="n">display</span><span class="p">:</span> <span class="n">inline-block</span><span class="p">;</span> <span class="err">메뉴</span> <span class="err">만들땐</span> <span class="err">인라인</span> <span class="err">블록이</span> <span class="err">편하다</span>
	<span class="nl">display</span><span class="p">:</span> <span class="n">inline-block</span><span class="p">;</span>
    
	<span class="c">/* 박스크기 계산 box-sizing */</span>
    <span class="c">/* 웹 페이지의 내용물들을 배치할 때 박스크기 계산한 것을 바탕으로 배치하는 것이 좋다 */</span>
	<span class="nl">box-sizing</span><span class="p">:</span> <span class="n">border-box</span><span class="p">;</span> <span class="err">내용</span> <span class="err">안여백</span> <span class="err">테두리선</span> <span class="err">포함해서</span> <span class="err">크기</span> <span class="err">계산</span>
	<span class="nl">box-sizing</span><span class="p">:</span> <span class="n">content-box</span><span class="p">;</span> <span class="err">내용(기본값)물만</span> <span class="err">포함해서</span> <span class="err">크기</span> <span class="err">계산</span>
    
	<span class="c">/* 너비 */</span>
	<span class="nl">width</span><span class="p">:</span> <span class="m">600px</span><span class="p">;</span>
	
	<span class="c">/* 높이 */</span>
	<span class="nl">height</span><span class="p">:</span> <span class="m">50%</span><span class="p">;</span>
 
    <span class="c">/* 안 여백 10px */</span>
	<span class="nl">padding</span><span class="p">:</span> <span class="m">10px</span><span class="p">;</span>
	
	<span class="c">/* 밖 여백 */</span>
	<span class="nl">margin</span><span class="p">:</span> <span class="m">50px</span><span class="p">;</span>
    
	<span class="c">/* 배경색 */</span>
	<span class="nl">background-color</span><span class="p">:</span> <span class="no">silver</span><span class="p">;</span>
	<span class="nl">background-color</span><span class="p">:</span> <span class="m">#0000ff</span><span class="p">;</span>
	<span class="nl">background-color</span><span class="p">:</span> <span class="nb">rgb</span><span class="p">(</span><span class="m">255</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">);</span>
    
    <span class="nl">color</span><span class="p">:</span> <span class="n">rgba</span><span class="p">(</span><span class="m">255</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">0.5</span><span class="p">);</span>
    <span class="nl">color</span><span class="p">:</span> <span class="m">#ff0000</span><span class="p">;</span>
    
    <span class="nl">font-family</span><span class="p">:</span> <span class="s1">"바탕"</span><span class="p">;</span>
    
    <span class="nl">font-size</span><span class="p">:</span> <span class="m">20px</span><span class="p">;</span>
    <span class="nl">font-size</span><span class="p">:</span> <span class="m">3em</span><span class="p">;</span>
    <span class="c">/* 절대크기(지정된 크기) : 상대크기(상대적인 글자크기) */</span>
    <span class="c">/* 포인트 pt, 픽셀 px, em 대문자를 기준으로 비율값 적용, rem 1em 비율값 적용, ex 소문자를 기준으로 적용 */</span>
    
    <span class="nl">font-style</span><span class="p">:</span> <span class="nb">italic</span><span class="p">;</span>
    
    <span class="nl">font-weight</span><span class="p">:</span> <span class="nb">bold</span><span class="p">;</span>
    
    <span class="c">/* 글자 가운데 정렬 */</span>
    <span class="nl">text-align</span><span class="p">:</span> <span class="nb">center</span><span class="p">;</span>
    
    <span class="nl">line-height</span><span class="p">:</span> <span class="m">100%</span><span class="p">;</span>
    
    <span class="nl">text-decoration</span><span class="p">:</span> <span class="nb">overline</span><span class="p">;</span>
    
    <span class="c">/* 그림자 효과 */</span>
    <span class="nl">text-shadow</span><span class="p">:</span> <span class="m">5px</span> <span class="m">5px</span> <span class="m">3px</span> <span class="no">black</span><span class="p">;</span> 
    
    <span class="c">/* 글자 하나사이 간격*/</span>
    <span class="nl">letter-spacing</span><span class="p">:</span> <span class="m">0.5em</span><span class="p">;</span> 
    
    <span class="c">/* 단어 사이 간격 */</span>
    <span class="nl">word-spacing</span><span class="p">:</span> <span class="m">50px</span><span class="p">;</span> 
    
    <span class="c">/* 목록 들여쓰기 내어쓰기 inside/outside */</span>
    <span class="nl">list-style-position</span><span class="p">:</span> <span class="nb">outside</span><span class="p">;</span>
    
    <span class="c">/* 목록 점(불릿) 대신 이미지 사용 */</span>
    <span class="nl">list-style-image</span><span class="p">:</span> <span class="sx">url("1.jpeg")</span><span class="p">;</span>
    
    <span class="c">/* 표 제목 위치 지정 caption-side: top/bottom; */</span>
	<span class="nl">caption-side</span><span class="p">:</span> <span class="nb">top</span><span class="p">;</span>
    
	<span class="c">/* 표 테두리선 그려주기 border: 테두리선 두께 테두리선 모양 테두리선 색 */</span>
	<span class="nl">border</span><span class="p">:</span> <span class="m">1px</span> <span class="nb">solid</span> <span class="no">black</span><span class="p">;</span>
    <span class="nl">border-style</span><span class="p">:</span> <span class="nb">dotted</span><span class="p">;</span>
	<span class="nl">border-color</span><span class="p">:</span> <span class="no">blue</span><span class="p">;</span>
    
	<span class="c">/* 셀(칸) 사이에 여백 */</span>
	<span class="nl">border-spacing</span><span class="p">:</span> <span class="m">10px</span><span class="p">;</span>
	
	<span class="c">/* 표와 셀 테두리 합치기 */</span>
	<span class="nl">border-collapse</span><span class="p">:</span> <span class="nb">collapse</span><span class="p">;</span>
    
    <span class="c">/* 모서리 둥글게 */</span>
	<span class="nl">border-radius</span><span class="p">:</span> <span class="m">50%</span><span class="p">;</span>
    
    <span class="c">/* 박스 그림자 (12시부터 시계방향으로) 색상 */</span>
	<span class="nl">box-shadow</span><span class="p">:</span> <span class="m">5px</span> <span class="m">5px</span> <span class="m">15px</span> <span class="m">5px</span> <span class="no">green</span><span class="p">;</span>
 
	<span class="c">/* 어울림 배치하는 법 */</span>
	<span class="nl">float</span><span class="p">:</span> <span class="nb">left</span><span class="p">;</span> <span class="c">/* 이미지를 왼쪽으로 기준으로 글자 어울림 배치 */</span>
	<span class="nl">float</span><span class="p">:</span> <span class="nb">right</span><span class="p">;</span> <span class="c">/* 이미지 오른쪽으로 기준으로 글자 어울림 배치 */</span>
 
	<span class="c">/* 어울림 배치 해제 */</span>
	<span class="c">/* 아까 설정한 방향 중 해제하고 싶은 방향을 입력해줌 */</span>
	<span class="nl">clear</span><span class="p">:</span> <span class="nb">left</span><span class="p">;</span>
	<span class="nl">clear</span><span class="p">:</span> <span class="nb">right</span><span class="p">;</span>
	<span class="nl">clear</span><span class="p">:</span> <span class="nb">both</span><span class="p">;</span>  
    
    <span class="c">/* 배경 이미지 삽입 */</span>
	<span class="c">/* 이미지 태그에서 안보이면 스타일시트에서 이미지를 넣은 것이다. */</span>
	<span class="nl">background-image</span><span class="p">:</span> <span class="sx">url("dot.png")</span><span class="p">;</span>
	<span class="nl">background-repeat</span><span class="p">:</span> <span class="nb">repeat</span><span class="p">;</span> <span class="c">/* 이미지 바둑판 모양으로 반복 */</span>
	<span class="nl">background-repeat</span><span class="p">:</span> <span class="nb">repeat-x</span><span class="p">;</span> <span class="c">/* x축만 반복 */</span>
	<span class="nl">background-repeat</span><span class="p">:</span> <span class="nb">repeat-y</span><span class="p">;</span> <span class="c">/* y축만 반복 */</span>
	<span class="nl">background-repeat</span><span class="p">:</span> <span class="nb">no-repeat</span><span class="p">;</span> <span class="c">/* 반복 안함 */</span> 
	<span class="nl">background-position</span><span class="p">:</span> <span class="nb">center</span><span class="p">;</span> <span class="c">/* 문단 가운데로 정렬 */</span>
	<span class="nl">background-position</span><span class="p">:</span> <span class="nb">bottom</span> <span class="nb">right</span><span class="p">;</span> <span class="c">/* 두개 넣으면 오른쪽 아래와 같이 정렬됨 */</span>
	<span class="nl">background-position</span><span class="p">:</span> <span class="nb">top</span> <span class="nb">left</span><span class="p">;</span>
	<span class="nl">background-size</span><span class="p">:</span> <span class="m">50px</span> <span class="m">50px</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>
<p><br /></p>

<h2 id="️-css-꾸미기-시작은">☑️ CSS 꾸미기 시작은</h2>
<div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">*</span>
<span class="p">{</span>
	<span class="c">/* body 영역엔 기본적인 여백이 조금씩 있는데 이걸 다 0으로 만들고 시작한다. */</span>
	<span class="nl">margin</span><span class="p">:</span> <span class="m">0px</span><span class="p">;</span>
	<span class="nl">padding</span><span class="p">:</span> <span class="m">0px</span><span class="p">;</span>
	
	<span class="c">/* 테두리포함 너비 계산하기 */</span>
	<span class="nl">box-sizing</span><span class="p">:</span> <span class="n">border-box</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<ul>
  <li>위와 같이 초기화하고 시작하는 것이 좋다.</li>
</ul>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="HTML" /><category term="HTML" /><category term="Front-end" /><category term="CSS" /><summary type="html"><![CDATA[👀 CSS란? Cascading Style Sheets의 약자로 HTML로 만든 웹 문서 뼈대에 디자인을 적용하기 위한 것]]></summary></entry><entry><title type="html">HTML 문법</title><link href="http://localhost:4000/html/HTML-language01/" rel="alternate" type="text/html" title="HTML 문법" /><published>2022-02-01T00:00:00+09:00</published><updated>2022-02-01T00:00:00+09:00</updated><id>http://localhost:4000/html/HTML-language01</id><content type="html" xml:base="http://localhost:4000/html/HTML-language01/"><![CDATA[<h1 id="-시작-전에">👀 시작 전에</h1>
<ul>
  <li><code class="language-plaintext highlighter-rouge">HTML</code> 문서는 크게 <code class="language-plaintext highlighter-rouge">&lt;head&gt;</code> 부분과 <code class="language-plaintext highlighter-rouge">&lt;body&gt;</code> 부분으로 나누어져 있다.</li>
  <li>크롬 탭에서 보이는 제목을 지정하고 싶으면 <code class="language-plaintext highlighter-rouge">&lt;head&gt;</code> 부분에 <code class="language-plaintext highlighter-rouge">&lt;title&gt;</code> 태그를 이용해 제목을 적어준다.</li>
  <li><code class="language-plaintext highlighter-rouge">&lt;body&gt;</code> 부분에 본격적인 웹 페이지 내용을 작성한다.<br /><br /></li>
</ul>

<h2 id="-html-주석문">🔸 HTML 주석문</h2>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!-- 주석 --&gt;</span>
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">HTML</code>에서의 주석문은 다른 프로그래밍 언어와는 다르게 위와 같이 쓴다.</li>
</ul>

<h2 id="-제목-태그">🔸 제목 태그</h2>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;h1&gt;</span>제목<span class="nt">&lt;/h1&gt;</span>
<span class="nt">&lt;h2&gt;</span>제목2<span class="nt">&lt;/h2&gt;</span>
<span class="nt">&lt;h3&gt;</span>제목3<span class="nt">&lt;/h3&gt;</span>
<span class="nt">&lt;h4&gt;</span>제목4<span class="nt">&lt;/h4&gt;</span>
<span class="nt">&lt;h5&gt;</span>제목5<span class="nt">&lt;/h5&gt;</span>
<span class="nt">&lt;h6&gt;</span>제목6<span class="nt">&lt;/h6&gt;</span>
</code></pre></div></div>

<ul>
  <li>제목 태그에는 6가지가 있다.</li>
  <li>1번이 글씨 크기가 가장 크고 숫자가 커질수록 글씨 크기가 작아진다.</li>
</ul>

<h2 id="-문단-태그">🔸 문단 태그</h2>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;p&gt;</span>문단 내용<span class="nt">&lt;/p&gt;</span>
</code></pre></div></div>

<ul>
  <li>아래위로 공백이 약간 생기면서 한 문단을 만드는 것과 같은 효과를 줄 수 있다.</li>
</ul>

<h2 id="-글씨-꾸미기-태그">🔸 글씨 꾸미기 태그</h2>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;b&gt;</span>진하게<span class="nt">&lt;/b&gt;</span>
<span class="nt">&lt;strong&gt;</span>진하게<span class="nt">&lt;/strong&gt;</span>
<span class="nt">&lt;i&gt;</span>기울이기(이탤릭체)<span class="nt">&lt;/i&gt;</span>
<span class="nt">&lt;em&gt;</span>기울이기<span class="nt">&lt;/em&gt;</span>
<span class="nt">&lt;small&gt;</span>작게<span class="nt">&lt;/small&gt;</span>
<span class="nt">&lt;u&gt;</span>밑줄<span class="nt">&lt;/u&gt;</span>
<span class="nt">&lt;sup&gt;</span>위 첨자<span class="nt">&lt;/sup&gt;</span>
<span class="nt">&lt;sub&gt;</span>아래 첨자<span class="nt">&lt;/sub&gt;</span>
<span class="nt">&lt;del&gt;</span>취소선 긋기<span class="nt">&lt;/del&gt;</span>

<span class="nt">&lt;blockquote&gt;</span>인용문 들여쓰기 효과<span class="nt">&lt;/blockquote&gt;</span>

<span class="nt">&lt;hr&gt;</span> <span class="c">&lt;!-- 수평선 긋는 태그 --&gt;</span>

<span class="nt">&lt;pre&gt;</span>
    원하는 
		모양대로
				출력
			이 가능한 태그
<span class="nt">&lt;/pre&gt;</span>
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">&lt;b&gt;</code> 태그를 쓰면 글씨를 진하게 표현할 수 있고 <code class="language-plaintext highlighter-rouge">&lt;i&gt;</code> 태그를 쓰면 글씨를 옆으로 기울일 수 있다.</li>
</ul>

<h2 id="-줄바꿈-태그">🔸 줄바꿈 태그</h2>
<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code>안녕하세요!<span class="nt">&lt;br&gt;</span>
Hello!
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">HTML</code>에서는 단순히 엔터를 치는 것으로는 줄을 바꿀 수 없다.</li>
  <li>줄을 바꾸고 싶은 곳에서 <code class="language-plaintext highlighter-rouge">&lt;br&gt;</code> 태그를 적어줘야 줄바꿈이 적용된다.</li>
</ul>

<h2 id="-하이퍼링크-태그">🔸 하이퍼링크 태그</h2>
<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"http://www.naver.com"</span><span class="nt">&gt;</span> 네이버 하이퍼링크 <span class="nt">&lt;/a&gt;&lt;br&gt;</span>
<span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"test1.html"</span><span class="nt">&gt;</span> test1.html 문서 하이퍼링크 <span class="nt">&lt;/a&gt;&lt;br&gt;</span>
<span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"4.jpeg"</span> <span class="na">download=</span><span class="s">""</span><span class="nt">&gt;</span> 이미지 다운로드 <span class="nt">&lt;/a&gt;&lt;br&gt;</span>
<span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"ex4.html"</span> <span class="na">target=</span><span class="s">"_blank"</span><span class="nt">&gt;</span>새 창에서 연결<span class="nt">&lt;/a&gt;&lt;br&gt;</span>
</code></pre></div></div>

<ul>
  <li>웹 페이지 링크를 걸 수도 있고 내가 만든 <code class="language-plaintext highlighter-rouge">HTML</code> 페이지를 링크로 걸 수도 있다.</li>
  <li>웹 페이지 링크를 작성할 땐 <code class="language-plaintext highlighter-rouge">http://</code>도 꼭 써주어야 제대로 동작한다.</li>
</ul>

<h3 id="️-문서-내에서-하이퍼링크">☑️ 문서 내에서 하이퍼링크</h3>
<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"#content1"</span> <span class="na">id=</span><span class="s">"menu"</span><span class="nt">&gt;</span>메뉴1<span class="nt">&lt;/a&gt;</span>
<span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"#content2"</span><span class="nt">&gt;</span>메뉴2<span class="nt">&lt;/a&gt;</span>
<span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"#content3"</span><span class="nt">&gt;</span>메뉴3<span class="nt">&lt;/a&gt;</span>
<span class="nt">&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;</span>

<span class="nt">&lt;a</span> <span class="na">id=</span><span class="s">"content1"</span><span class="nt">&gt;</span>메뉴1 문서<span class="nt">&lt;/a&gt;</span>
<span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"#menu"</span><span class="nt">&gt;</span>메뉴 위로 이동<span class="nt">&lt;/a&gt;</span>
<span class="nt">&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;</span>

<span class="nt">&lt;a</span> <span class="na">id=</span><span class="s">"content2"</span><span class="nt">&gt;</span>메뉴2 문서<span class="nt">&lt;/a&gt;</span>
<span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"#menu"</span><span class="nt">&gt;</span>메뉴 위로 이동<span class="nt">&lt;/a&gt;</span>
<span class="nt">&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;</span>

<span class="nt">&lt;a</span> <span class="na">id=</span><span class="s">"content3"</span><span class="nt">&gt;</span>메뉴3 문서<span class="nt">&lt;/a&gt;</span>
<span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"#menu"</span><span class="nt">&gt;</span>메뉴 위로 이동<span class="nt">&lt;/a&gt;</span>
</code></pre></div></div>

<h2 id="-이미지-삽입-태그">🔸 이미지 삽입 태그</h2>
<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;img</span> <span class="na">src=</span><span class="s">"1.jpeg"</span><span class="nt">&gt;&lt;br&gt;</span>
<span class="nt">&lt;img</span> <span class="na">src=</span><span class="s">"2.gif"</span><span class="nt">&gt;&lt;br&gt;</span>
<span class="nt">&lt;img</span> <span class="na">alt=</span><span class="s">"3번이미지"</span> <span class="na">src=</span><span class="s">"./3.png"</span> <span class="na">width=</span><span class="s">"50%"</span> <span class="na">height=</span><span class="s">"50%"</span> <span class="na">border=</span><span class="s">"5"</span><span class="nt">&gt;</span>
</code></pre></div></div>

<ul>
  <li>이미지를 삽입할 때엔 닫는 태그가 없어도 된다.</li>
  <li>이미지 파일은 삽입하고자 하는 <code class="language-plaintext highlighter-rouge">HTML</code> 파일과 동일한 위치에 있어야 경로지정 없이 삽입할 수 있다.</li>
  <li>같은 위치에 없다면 경로지정을 해 주어야 하는데
    <ul>
      <li><code class="language-plaintext highlighter-rouge">.</code> : 현재폴더(생략가능)</li>
      <li><code class="language-plaintext highlighter-rouge">..</code> : 상위폴더</li>
      <li><code class="language-plaintext highlighter-rouge">상대참조</code> : 현재 페이지를 기준으로 상대적 파일을 찾는 방법</li>
      <li><code class="language-plaintext highlighter-rouge">절대참조</code> : /(root) 기준으로 파일 경로를 찾아가는 방법</li>
    </ul>
  </li>
</ul>

<h3 id="️-img-태그-속성">☑️ img 태그 속성</h3>
<ul>
  <li><code class="language-plaintext highlighter-rouge">src</code> : 원본(그림) 파일</li>
  <li><code class="language-plaintext highlighter-rouge">alt</code> : 원본이 안 보일 때 표시할 그림 설명</li>
  <li><code class="language-plaintext highlighter-rouge">width</code> : 이미지 너비(픽셀) 지정
    <ul>
      <li><code class="language-plaintext highlighter-rouge">px</code> : 이미지 크기를 픽셀 단위로 지정. 고정값</li>
      <li><code class="language-plaintext highlighter-rouge">%</code> : 이미지 크기가 브라우저 크기에 따라 변동됨</li>
    </ul>
  </li>
</ul>

<h3 id="️-픽셀pixel">☑️ 픽셀(Pixel)</h3>
<ul>
  <li>화면을 이루는 빛(하나의 점)</li>
</ul>

<h3 id="️-해상도">☑️ 해상도</h3>
<ul>
  <li>화면을 이루는 점(빛)의 개수</li>
</ul>

<h3 id="️-웹에서-사용하는-이미지-형식">☑️ 웹에서 사용하는 이미지 형식</h3>
<ul>
  <li>.jpg : 사진형태. 색상과 명암을 다양하게 표현</li>
  <li>.gif : 256색상 사용. 작은 아이콘, 작은 이미지 사용. 움직이는 이미지</li>
  <li>.png : 색상 다양하게 표현. 투명한 배경색 가능. 웹에서 많이 사용</li>
</ul>

<h2 id="-목록-만드는-태그">🔸 목록 만드는 태그</h2>
<h3 id="순서-있는-목록">순서 있는 목록</h3>
<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;ol&gt;</span>
  <span class="nt">&lt;li&gt;</span> 항목1 <span class="nt">&lt;/li&gt;</span>
  <span class="nt">&lt;li&gt;</span> 항목2 <span class="nt">&lt;/li&gt;</span>
<span class="nt">&lt;/ol&gt;</span>
</code></pre></div></div>

<ul>
  <li>1부터 차례대로 순서가 매겨지면서 목록이 만들어진다.</li>
</ul>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;ol</span> <span class="na">type=</span><span class="s">"i"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;li&gt;</span>항목1<span class="nt">&lt;/li&gt;</span>
  <span class="nt">&lt;li&gt;</span>항목2<span class="nt">&lt;/li&gt;</span>
<span class="nt">&lt;/ol&gt;</span>
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">type</code>에 <code class="language-plaintext highlighter-rouge">1</code>, <code class="language-plaintext highlighter-rouge">a</code>, <code class="language-plaintext highlighter-rouge">A</code>, <code class="language-plaintext highlighter-rouge">i</code>, <code class="language-plaintext highlighter-rouge">I</code>(이탤릭)들을 사용해 순서를 매길 포맷을 지정해 줄 수 있다.</li>
</ul>

<h3 id="순서-없는-목록">순서 없는 목록</h3>
<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;ul&gt;</span>
  <span class="nt">&lt;li&gt;</span>항목1<span class="nt">&lt;/li&gt;</span>
  <span class="nt">&lt;li&gt;</span>항목2<span class="nt">&lt;/li&gt;</span>
<span class="nt">&lt;/ul&gt;</span>
</code></pre></div></div>

<ul>
  <li>순서가 없이 점만 찍히는 목록이 만들어진다.</li>
</ul>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;ul</span> <span class="na">type=</span><span class="s">"circle"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;li&gt;</span>항목1<span class="nt">&lt;/li&gt;</span>
  <span class="nt">&lt;li&gt;</span>항목2<span class="nt">&lt;/li&gt;</span>
<span class="nt">&lt;/ul&gt;</span>
</code></pre></div></div>

<ul>
  <li>마찬가지로 <code class="language-plaintext highlighter-rouge">disc</code>, <code class="language-plaintext highlighter-rouge">square</code>, <code class="language-plaintext highlighter-rouge">circle</code> 점 모양 속성을 지정해 줄 수 있다.</li>
</ul>

<h2 id="-표-만드는-태그">🔸 표 만드는 태그</h2>
<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;table</span> <span class="na">border=</span><span class="s">"1"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;caption&gt;</span>표제목<span class="nt">&lt;/caption&gt;</span>
  <span class="nt">&lt;tr&gt;&lt;td&gt;</span>1행1열<span class="nt">&lt;/td&gt;&lt;td&gt;</span>1행2열<span class="nt">&lt;/td&gt;&lt;/tr&gt;</span>
  <span class="nt">&lt;tr&gt;&lt;td&gt;</span>2행1열<span class="nt">&lt;/td&gt;&lt;td&gt;</span>2행2열<span class="nt">&lt;/td&gt;&lt;/tr&gt;</span>
<span class="nt">&lt;/table&gt;</span>
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">&lt;table&gt;</code> 태그를 이용해 틀을 만든 다음 <code class="language-plaintext highlighter-rouge">&lt;tr&gt;</code>을 사용해 가로로 줄을 그어 칸을 만들고 <code class="language-plaintext highlighter-rouge">&lt;td&gt;</code> 태그로 세로로 줄을 그어 칸을 만들 수 있다.</li>
</ul>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;thead&gt;</span> <span class="c">&lt;!-- 코드 상에서 영역 나눠서 작업할 때 사용 --&gt;</span>
<span class="nt">&lt;tr&gt;&lt;th&gt;</span>제목1<span class="nt">&lt;/th&gt;&lt;th&gt;</span>제목2<span class="nt">&lt;/th&gt;&lt;/tr&gt;</span>
<span class="nt">&lt;/thead&gt;</span>

<span class="nt">&lt;tbody&gt;</span>
<span class="nt">&lt;tr&gt;&lt;td&gt;</span>내용1<span class="nt">&lt;/td&gt;&lt;td&gt;</span>내용2<span class="nt">&lt;/td&gt;&lt;/tr&gt;</span>
<span class="nt">&lt;/tbody&gt;</span>

<span class="nt">&lt;tfoot&gt;</span>
<span class="nt">&lt;tr&gt;&lt;td&gt;</span>내용3<span class="nt">&lt;/td&gt;&lt;td&gt;</span>내용4<span class="nt">&lt;/td&gt;&lt;/tr&gt;</span>
<span class="nt">&lt;/tfoot&gt;</span>
</code></pre></div></div>

<h3 id="표-합치기">표 합치기</h3>
<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;table</span> <span class="na">border=</span><span class="s">"1"</span> <span class="na">width=</span><span class="s">"500"</span> <span class="na">height=</span><span class="s">"300"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;tr&gt;&lt;td&gt;</span>용도<span class="nt">&lt;/td&gt;&lt;td&gt;</span>중량<span class="nt">&lt;/td&gt;</span>  <span class="nt">&lt;td</span> <span class="na">colspan=</span><span class="s">"2"</span><span class="nt">&gt;</span>개수가격<span class="nt">&lt;/td&gt;&lt;/tr&gt;</span>
  <span class="nt">&lt;tr&gt;&lt;td</span> <span class="na">rowspan=</span><span class="s">"2"</span><span class="nt">&gt;</span>선물용<span class="nt">&lt;/td&gt;&lt;td&gt;</span>3kg<span class="nt">&lt;/td&gt;&lt;td&gt;</span>11-16과<span class="nt">&lt;/td&gt;&lt;td&gt;</span>35000원<span class="nt">&lt;/td&gt;&lt;/tr&gt;</span>
  <span class="nt">&lt;tr&gt;</span>                         <span class="nt">&lt;td&gt;</span>5kg<span class="nt">&lt;/td&gt;&lt;td&gt;</span>18-26과<span class="nt">&lt;/td&gt;&lt;td&gt;</span>52000원<span class="nt">&lt;/td&gt;&lt;/tr&gt;</span>
  <span class="nt">&lt;tr&gt;&lt;td</span> <span class="na">rowspan=</span><span class="s">"2"</span><span class="nt">&gt;</span>가정용<span class="nt">&lt;/td&gt;&lt;td&gt;</span>3kg<span class="nt">&lt;/td&gt;&lt;td&gt;</span>11-16과<span class="nt">&lt;/td&gt;&lt;td&gt;</span>30000원<span class="nt">&lt;/td&gt;&lt;/tr&gt;</span>
  <span class="nt">&lt;tr&gt;</span>                         <span class="nt">&lt;td&gt;</span>5kg<span class="nt">&lt;/td&gt;&lt;td&gt;</span>18-26과<span class="nt">&lt;/td&gt;&lt;td&gt;</span>47000원<span class="nt">&lt;/td&gt;&lt;/tr&gt;</span>
<span class="nt">&lt;/table&gt;</span>
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">colspan</code>으로 가로로 나란히 위치한 칸들을 합치고 <code class="language-plaintext highlighter-rouge">rowspan</code>으로 세로로 나란히 위치한 칸들을 합칠 수 있다.</li>
</ul>

<h2 id="-폼양식-태그">🔸 폼(양식) 태그</h2>
<ul>
  <li>기능과 데이터들을 묶어주는 것</li>
  <li><code class="language-plaintext highlighter-rouge">submit</code> 버튼을 클릭하면 <code class="language-plaintext highlighter-rouge">폼태그</code>에 있는 내용(데이터, 이름 =&gt; 값)을 <code class="language-plaintext highlighter-rouge">서버(백엔드)</code>로 전송하는 기능을 <code class="language-plaintext highlighter-rouge">폼태그</code>를 사용해 만들 수 있다.</li>
  <li>전송 방식에는 <code class="language-plaintext highlighter-rouge">Get</code> 방식과 <code class="language-plaintext highlighter-rouge">Post</code> 방식이 있다.</li>
</ul>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;fieldset&gt;</span> <span class="c">&lt;!-- 테두리를 그려서 그룹으로 묶어주는 태그 --&gt;</span>
	<span class="nt">&lt;legend&gt;</span>그룹이름1<span class="nt">&lt;/legend&gt;</span>
	<span class="nt">&lt;label&gt;</span>아이디 :<span class="nt">&lt;/label&gt;</span>
	<span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"text"</span> <span class="na">name=</span><span class="s">"id"</span> <span class="na">value=</span><span class="s">"아이디"</span> <span class="na">size=</span><span class="s">"30"</span> <span class="na">maxlength=</span><span class="s">"5"</span> <span class="na">readonly=</span><span class="s">"readonly"</span><span class="nt">&gt;&lt;br&gt;</span>
	<span class="c">&lt;!-- size="30" 30자를 적을 수 있는 크기 maxlength="5" 입력학 글자개수 readonly="readonly" 읽기전용 --&gt;</span>
	<span class="nt">&lt;label&gt;</span>비밀번호 : <span class="nt">&lt;/label&gt;</span>
	<span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"password"</span> <span class="na">name=</span><span class="s">"pass"</span> <span class="na">required</span> <span class="na">autofocus</span><span class="nt">&gt;&lt;br&gt;</span>
	<span class="c">&lt;!-- 비밀번호 필수요소로 입력제어
	autofocus : 입력상자에 커서 깜박이게 하기  --&gt;</span>
	<span class="nt">&lt;label&gt;</span>자기소개 : <span class="nt">&lt;/label&gt;</span>
	<span class="nt">&lt;textarea</span> <span class="na">rows=</span><span class="s">"5"</span> <span class="na">cols=</span><span class="s">"10"</span><span class="nt">&gt;&lt;/textarea&gt;&lt;br&gt;</span>
	<span class="nt">&lt;label&gt;</span>이메일 :<span class="nt">&lt;/label&gt;</span>
	<span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"email"</span> <span class="na">name=</span><span class="s">"email"</span> <span class="na">placeholder=</span><span class="s">"이메일 형식"</span><span class="nt">&gt;&lt;br&gt;</span>
	<span class="c">&lt;!-- placeholer : 배경이미지 형태로 설명글 --&gt;</span>
	<span class="nt">&lt;label&gt;</span>날짜 : <span class="nt">&lt;/label&gt;</span>
	<span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"date, name="</span><span class="na">date</span><span class="err">"</span> <span class="na">min=</span><span class="s">"2022-01-01"</span> <span class="na">max=</span><span class="s">"22022-01-14"</span><span class="nt">&gt;</span>
	<span class="nt">&lt;label&gt;</span>날짜(월) : <span class="nt">&lt;/label&gt;</span>
	<span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"week"</span> <span class="na">name=</span><span class="s">"week"</span><span class="nt">&gt;</span>
	<span class="nt">&lt;label&gt;</span>시간 : <span class="nt">&lt;/label&gt;</span>
	<span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"time"</span> <span class="na">name=</span><span class="s">"time"</span><span class="nt">&gt;&lt;br&gt;</span>
	<span class="nt">&lt;label&gt;</span>날짜 시간 : <span class="nt">&lt;/label&gt;</span>
	<span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"datetime-local"</span> <span class="na">name=</span><span class="s">"datetime"</span><span class="nt">&gt;&lt;br&gt;</span>
<span class="nt">&lt;/fieldset&gt;</span>```

* `type`의 `text`는 입력하는 글자를 보여주는 것이고 `password`는 입력하는 글자를 보여주지 않는 것이다.

```html
<span class="nt">&lt;textarea</span> <span class="na">rows=</span><span class="s">"5"</span> <span class="na">cols=</span><span class="s">"30"</span> <span class="na">placeholder=</span><span class="s">"본사 지원 동기를 간략히 적어주세요."</span><span class="nt">&gt;&lt;/textarea&gt;&lt;br&gt;</span>
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">&lt;textarea&gt;</code>를 사용하면 긴 텍스트를 입력할 수 있는 <code class="language-plaintext highlighter-rouge">텍스트박스</code>를 만들 수 있다.</li>
  <li><code class="language-plaintext highlighter-rouge">placeholder=""</code> 속성은 회색 글씨로 안내 사항을 입력해 놓는 것. 입력을 시작하면 사라진다.</li>
</ul>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;fieldset&gt;</span>
	<span class="nt">&lt;legend&gt;</span>그룹이름2<span class="nt">&lt;/legend&gt;</span>
	<span class="nt">&lt;label&gt;</span>검색 : <span class="nt">&lt;/label&gt;</span>
	<span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"search"</span> <span class="na">name=</span><span class="s">"search"</span><span class="nt">&gt;&lt;br&gt;</span>
	<span class="nt">&lt;label&gt;</span>웹주소 : <span class="nt">&lt;/label&gt;</span>
	<span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"url"</span> <span class="na">name=</span><span class="s">"url"</span><span class="nt">&gt;&lt;br&gt;</span>
	<span class="nt">&lt;label&gt;</span>연락처(모바일) : <span class="nt">&lt;/label&gt;</span>
	<span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"tel"</span> <span class="na">name=</span><span class="s">"tel"</span><span class="nt">&gt;&lt;br&gt;</span> <span class="c">&lt;!-- 모바일 환경에서는 숫자 키패드 나옴 --&gt;</span>
	<span class="nt">&lt;label&gt;</span>숫자 : <span class="nt">&lt;/label&gt;</span>
	<span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"number"</span> <span class="na">name=</span><span class="s">"number"</span><span class="nt">&gt;&lt;br&gt;</span>
	<span class="nt">&lt;label&gt;</span>슬라이드 밸류값 설정 : <span class="nt">&lt;/label&gt;</span>
	<span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"range"</span> <span class="na">name=</span><span class="s">"range"</span><span class="nt">&gt;&lt;br&gt;</span> 
<span class="nt">&lt;/fieldset&gt;</span>
</code></pre></div></div>

<h2 id="-라디오-버튼radio과-체크박스checkbox">🔸 라디오 버튼(radio)과 체크박스(checkbox)</h2>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code>성별 : <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"radio"</span> <span class="na">name=</span><span class="s">"gender"</span> <span class="na">value=</span><span class="s">"남"</span><span class="nt">&gt;</span>남성 
      <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"radio"</span> <span class="na">name=</span><span class="s">"gender"</span> <span class="na">value=</span><span class="s">"여"</span><span class="nt">&gt;</span>여성<span class="nt">&lt;br&gt;</span>
취미 : <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"checkbox"</span> <span class="na">name=</span><span class="s">"hobby"</span> <span class="na">value=</span><span class="s">"여행"</span><span class="nt">&gt;</span>여행
	  <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"checkbox"</span> <span class="na">name=</span><span class="s">"hobby"</span> <span class="na">value=</span><span class="s">"게임"</span><span class="nt">&gt;</span>게임
      <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"checkbox"</span> <span class="na">name=</span><span class="s">"hobby"</span> <span class="na">value=</span><span class="s">"독서"</span><span class="nt">&gt;</span>독서<span class="nt">&lt;br&gt;</span>
목록상자 : <span class="nt">&lt;select</span> <span class="na">name=</span><span class="s">"sel"</span> <span class="na">size=</span><span class="s">"5"</span> <span class="na">multiple=</span><span class="s">"multiple"</span><span class="nt">&gt;</span>
		<span class="nt">&lt;option</span> <span class="na">value=</span><span class="s">"목1"</span><span class="nt">&gt;</span>목록1<span class="nt">&lt;/option&gt;</span>
		<span class="nt">&lt;option</span> <span class="na">value=</span><span class="s">"목2"</span><span class="nt">&gt;</span>목록2<span class="nt">&lt;/option&gt;</span>
		<span class="nt">&lt;option</span> <span class="na">value=</span><span class="s">"목3"</span><span class="nt">&gt;</span>목록3<span class="nt">&lt;/option&gt;</span>
        <span class="nt">&lt;/select&gt;</span>
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">radio</code>는 하나만 선택 가능할 때 사용하고 <code class="language-plaintext highlighter-rouge">checkbox</code>는 여러개를 선택할 수 있을 때 사용한다.</li>
  <li>이 때 <code class="language-plaintext highlighter-rouge">name</code>을 동일하게 해야 같은 그룹으로 취합되고 그 안에서 선택하는 것이 가능하다.</li>
</ul>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;form</span> <span class="na">action=</span><span class="s">"test1.html"</span> <span class="na">method=</span><span class="s">"get"</span><span class="nt">&gt;</span> 
파일업로드 : <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"file"</span> <span class="na">name=</span><span class="s">"file"</span><span class="nt">&gt;&lt;br&gt;</span>
히든값 : <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"hidden"</span> <span class="na">name=</span><span class="s">"hi"</span> <span class="na">value=</span><span class="s">"값"</span><span class="nt">&gt;</span> <span class="c">&lt;!-- 사용자에게는 보이지 않는 숨겨진 입력 필드 정의 --&gt;</span>
<span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"button"</span> <span class="na">value=</span><span class="s">"버튼"</span><span class="nt">&gt;&lt;br&gt;</span>
<span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"submit"</span> <span class="na">value=</span><span class="s">"전송"</span><span class="nt">&gt;&lt;br&gt;</span> <span class="c">&lt;!-- action="test1.html"으로 작성 내용들을 전달함. 폼태그 밖에서 쓰면 작동 안됨  --&gt;</span> 
<span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"image"</span> <span class="na">scr=</span><span class="s">"5.jpeg"</span> <span class="na">width=</span><span class="s">"100"</span> <span class="na">height=</span><span class="s">"100"</span><span class="nt">&gt;</span>
<span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"reset"</span> <span class="na">value=</span><span class="s">"초기화"</span><span class="nt">&gt;&lt;br&gt;</span>
<span class="nt">&lt;/form&gt;</span>
</code></pre></div></div>

<h2 id="-영역-지정-태그">🔸 영역 지정 태그</h2>
<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;div&gt;</span>
  큰 영역을 지정할 때 사용(웹 블록 지정)
<span class="nt">&lt;/div&gt;</span>

<span class="nt">&lt;span&gt;</span> 인라인(작은 영역) 블록 지정 <span class="nt">&lt;/span&gt;</span>
</code></pre></div></div>

<h2 id="-특수-문자-입력-태그">🔸 특수 문자 입력 태그</h2>
<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="ni">&amp;nbsp;</span>  공백 표시
<span class="ni">&amp;lt;</span>    꺽쇄(<span class="nt">&lt;</span> <span class="nt">&gt;</span>) 표시
<span class="ni">&amp;copy;</span>  © 
<span class="ni">&amp;amp;</span>   <span class="err">&amp;</span> 
<span class="ni">&amp;quot;</span>  " 
<span class="ni">&amp;clubs;</span> ♣
</code></pre></div></div>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="HTML" /><category term="HTML" /><category term="Front-end" /><summary type="html"><![CDATA[👀 시작 전에 HTML 문서는 크게 &lt;head&gt; 부분과 &lt;body&gt; 부분으로 나누어져 있다. 크롬 탭에서 보이는 제목을 지정하고 싶으면 &lt;head&gt; 부분에 &lt;title&gt; 태그를 이용해 제목을 적어준다. &lt;body&gt; 부분에 본격적인 웹 페이지 내용을 작성한다. 🔸 HTML 주석문]]></summary></entry></feed>