<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2022-05-22T16:11:22+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Yujin Dev Log</title><subtitle>개발 공부 기록하는 블로그</subtitle><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><entry><title type="html">JAVA Spring) 1인가구를 위한 쇼핑몰 Uno más 개발일지 16 - Ajax로 이미지파일 업로드</title><link href="http://localhost:4000/uno%20mas/uno-mas-dev-log-16/" rel="alternate" type="text/html" title="JAVA Spring) 1인가구를 위한 쇼핑몰 Uno más 개발일지 16 - Ajax로 이미지파일 업로드" /><published>2022-05-18T00:00:00+09:00</published><updated>2022-05-18T00:00:00+09:00</updated><id>http://localhost:4000/uno%20mas/uno-mas-dev-log-16</id><content type="html" xml:base="http://localhost:4000/uno%20mas/uno-mas-dev-log-16/"><![CDATA[<ul>
  <li>작성일 : 2022.05.18</li>
  <li>
    <p>작성자 : 황유진</p>
  </li>
  <li>팀원 : 김진영, 박승지, 반현빈, 오성은, 오은현, 황유진</li>
  <li>팀장 : 황유진</li>
  <li>부팀장 : 오성은</li>
  <li>GitHub Repository : <a href="https://github.com/miro7923/Uno-Mas">https://github.com/miro7923/Uno-Mas</a><br /><br /><br /></li>
</ul>

<h1 id="개발환경">개발환경</h1>
<ul>
  <li>MacBook Air (M1, 2020)</li>
  <li>OpenJDK 8</li>
  <li>Spring Tool Suite 4.14.0</li>
  <li>Spring framework 4.3.1.RELEASE</li>
  <li>Tomcat 8.5</li>
  <li>MySQL Workbench 8.0.19<br /><br /><br /></li>
</ul>

<h1 id="기간">기간</h1>
<ul>
  <li>2022.4.13 ~ 2022.5.27<br /><br /><br /></li>
</ul>

<h1 id="주제">주제</h1>
<ul>
  <li>웹 백엔드 수업 중 마지막 과제로 팀 프로젝트를 진행하게 되었다.</li>
  <li>조건은 <code class="language-plaintext highlighter-rouge">Spring</code> 기반으로 웹 사이트를 제작하는 것이다.</li>
  <li>총 팀원은 6명이며, 우리 팀은 <code class="language-plaintext highlighter-rouge">1인 가구를 위한 쇼핑몰</code>을 주제로 정했다.</li>
  <li>팀 이름으로 정해진 <code class="language-plaintext highlighter-rouge">Uno más</code>는 스페인어로 <code class="language-plaintext highlighter-rouge">하나 더</code>라는 뜻이다. <br /><br /><br /></li>
</ul>

<h1 id="진행상황">진행상황</h1>

<p align="center"><img src="../../assets/images/unomas_uploadProdImg2.png" width="900" /></p>

<ul>
  <li>관리자용 상품 등록 페이지에서 비동기 방식으로 상품 이미지를 업로드하고 등록된 이미지를 미리볼 수 있는 기능을 구현했다.</li>
</ul>

<h2 id="productmapperxml">productMapper.xml</h2>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;insert</span> <span class="na">id=</span><span class="s">"setProduct"</span><span class="nt">&gt;</span>
    INSERT INTO products(prod_name, prod_category, prod_price, prod_stock, prod_expire, 
                    prod_keep, prod_weight, prod_country, prod_sellunit, prod_explain, prod_packing, 
                    prod_discntrate, prod_image1, prod_image2, prod_image3, prod_image4)
    VALUES (#{prod_name}, #{prod_category}, #{prod_price}, #{prod_stock}, #{prod_expire}, 
            #{prod_keep}, #{prod_weight}, #{prod_country}, #{prod_sellunit}, #{prod_explain}, #{prod_packing},
            #{prod_discntrate}, #{prod_image1}, #{prod_image2}, #{prod_image3}, #{prod_image4})
<span class="nt">&lt;/insert&gt;</span>
</code></pre></div></div>

<ul>
  <li>이미지 파일을 비동기 방식으로 업로드 하기 때문에 <code class="language-plaintext highlighter-rouge">DB</code>에는 파일명만 넣어주면 된다.</li>
</ul>

<h2 id="servlet-contextxml">servlet-context.xml</h2>

<p align="center"><img src="../../assets/images/unomas_uploadProdImg3.png" width="700" /></p>

<ul>
  <li>저장되는 이미지의 종류별로 폴더를 분리하는 것이 깔끔하고 화면에 뿌려주기 위해 해당 파일을 찾아올 때 분류된 폴더에서 찾아오는 것이 더 빠를 것이라 생각해서 위와 같이 이미지가 업로드 되는 경로를 분리해 주었다.</li>
</ul>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!-- 상품 상세이미지 업로드 경로 --&gt;</span>
<span class="nt">&lt;beans:bean</span> <span class="na">id=</span><span class="s">"prodDimgUploadPath"</span> <span class="na">class=</span><span class="s">"java.lang.String"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;beans:constructor-arg</span> <span class="na">value=</span><span class="s">"프로젝트경로/src/main/webapp/resources/upload/images/products/detail"</span><span class="nt">/&gt;</span>
<span class="nt">&lt;/beans:bean&gt;</span>
    
<span class="c">&lt;!-- 상품 썸네일 업로드 경로 --&gt;</span>
<span class="nt">&lt;beans:bean</span> <span class="na">id=</span><span class="s">"prodThumbUploadPath"</span> <span class="na">class=</span><span class="s">"java.lang.String"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;beans:constructor-arg</span> <span class="na">value=</span><span class="s">"프로젝트경로/src/main/webapp/resources/upload/images/products/thumbnail"</span><span class="nt">/&gt;</span>
<span class="nt">&lt;/beans:bean&gt;</span>
    
<span class="c">&lt;!-- 상품 상단 이미지 업로드 경로 --&gt;</span>
<span class="nt">&lt;beans:bean</span> <span class="na">id=</span><span class="s">"prodTopImgUploadPath"</span> <span class="na">class=</span><span class="s">"java.lang.String"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;beans:constructor-arg</span> <span class="na">value=</span><span class="s">"프로젝트경로/src/main/webapp/resources/upload/images/products/top"</span><span class="nt">/&gt;</span>
<span class="nt">&lt;/beans:bean&gt;</span>
    
<span class="c">&lt;!-- 상품 품절 이미지 업로드 경로 --&gt;</span>
<span class="nt">&lt;beans:bean</span> <span class="na">id=</span><span class="s">"prodSoldoutImgUploadPath"</span> <span class="na">class=</span><span class="s">"java.lang.String"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;beans:constructor-arg</span> <span class="na">value=</span><span class="s">"프로젝트경로/src/main/webapp/resources/upload/images/products/soldout"</span><span class="nt">/&gt;</span>
<span class="nt">&lt;/beans:bean&gt;</span>
</code></pre></div></div>

<ul>
  <li>프레임워크에게 알려주기 위해 <code class="language-plaintext highlighter-rouge">servlet-context.xml</code> 파일에서 각 폴더별로 업로드 경로를 지정해 주었다.</li>
</ul>

<h2 id="productregisterjsp">productRegister.jsp</h2>

<div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"col-lg-3 col-sm-6"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"product-item"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"pi-text"</span><span class="nt">&gt;</span>
            <span class="nt">&lt;h5&gt;</span>기본 이미지(세로)<span class="nt">&lt;/h5&gt;&lt;br&gt;</span>
            <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"pi-pic"</span><span class="nt">&gt;</span>
                <span class="nt">&lt;img</span> <span class="na">src=</span><span class="s">""</span> <span class="na">alt=</span><span class="s">""</span> <span class="na">id=</span><span class="s">"prevImg1"</span><span class="nt">&gt;</span>
                <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"sale pp-sale"</span><span class="nt">&gt;</span>1<span class="nt">&lt;/div&gt;</span>
                <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"hidden"</span> <span class="na">id=</span><span class="s">"prod_image1"</span> <span class="na">name=</span><span class="s">"prod_image1"</span><span class="nt">&gt;</span>
                <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"file"</span> <span class="na">id=</span><span class="s">"uploadImg1"</span> <span class="na">name=</span><span class="s">"uploadImg1"</span> <span class="na">oninput=</span><span class="s">"checkFileName(1, 'top');"</span><span class="nt">&gt;</span>
            <span class="nt">&lt;/div&gt;</span>
            <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"catagory-name"</span><span class="nt">&gt;</span>[이미지 삭제]<span class="nt">&lt;/div&gt;</span>
        <span class="nt">&lt;/div&gt;</span>
    <span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"col-lg-3 col-sm-6"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"product-item"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"pi-text"</span><span class="nt">&gt;</span>
            <span class="nt">&lt;h5&gt;</span>상품 상세 설명<span class="nt">&lt;/h5&gt;&lt;br&gt;</span>
            <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"pi-pic"</span><span class="nt">&gt;</span>
                <span class="nt">&lt;img</span> <span class="na">src=</span><span class="s">""</span> <span class="na">alt=</span><span class="s">""</span> <span class="na">id=</span><span class="s">"prevImg2"</span><span class="nt">&gt;</span>
                <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"sale pp-sale"</span><span class="nt">&gt;</span>2<span class="nt">&lt;/div&gt;</span>
                <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"hidden"</span> <span class="na">id=</span><span class="s">"prod_image2"</span> <span class="na">name=</span><span class="s">"prod_image2"</span><span class="nt">&gt;</span>
                <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"file"</span> <span class="na">id=</span><span class="s">"uploadImg2"</span> <span class="na">name=</span><span class="s">"uploadImg2"</span> <span class="na">oninput=</span><span class="s">"checkFileName(2, 'detail');"</span><span class="nt">&gt;</span>
            <span class="nt">&lt;/div&gt;</span>
            <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"catagory-name"</span><span class="nt">&gt;</span>[이미지 삭제]<span class="nt">&lt;/div&gt;</span>
        <span class="nt">&lt;/div&gt;</span>
    <span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"col-lg-3 col-sm-6"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"product-item"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"pi-text"</span><span class="nt">&gt;</span>
            <span class="nt">&lt;h5&gt;</span>썸네일<span class="nt">&lt;/h5&gt;&lt;br&gt;</span>
            <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"pi-pic"</span><span class="nt">&gt;</span>
                <span class="nt">&lt;img</span> <span class="na">src=</span><span class="s">""</span> <span class="na">alt=</span><span class="s">""</span> <span class="na">id=</span><span class="s">"prevImg3"</span><span class="nt">&gt;</span>
                <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"sale pp-sale"</span><span class="nt">&gt;</span>3<span class="nt">&lt;/div&gt;</span>
                <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"hidden"</span> <span class="na">id=</span><span class="s">"prod_image3"</span> <span class="na">name=</span><span class="s">"prod_image3"</span><span class="nt">&gt;</span>
                <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"file"</span> <span class="na">id=</span><span class="s">"uploadImg3"</span> <span class="na">name=</span><span class="s">"uploadImg3"</span> <span class="na">oninput=</span><span class="s">"checkFileName(3, 'thumb');"</span><span class="nt">&gt;</span>
            <span class="nt">&lt;/div&gt;</span>
            <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"catagory-name"</span><span class="nt">&gt;</span>[이미지 삭제]<span class="nt">&lt;/div&gt;</span>
        <span class="nt">&lt;/div&gt;</span>
    <span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"col-lg-3 col-sm-6"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"product-item"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"pi-text"</span><span class="nt">&gt;</span>
            <span class="nt">&lt;h5&gt;</span>품절 시 대체 썸네일<span class="nt">&lt;/h5&gt;&lt;br&gt;</span>
            <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"pi-pic"</span><span class="nt">&gt;</span>
                <span class="nt">&lt;img</span> <span class="na">src=</span><span class="s">""</span> <span class="na">alt=</span><span class="s">""</span> <span class="na">id=</span><span class="s">"prevImg4"</span><span class="nt">&gt;</span>
                <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"sale pp-sale"</span><span class="nt">&gt;</span>4<span class="nt">&lt;/div&gt;</span>
                <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"hidden"</span> <span class="na">id=</span><span class="s">"prod_image4"</span> <span class="na">name=</span><span class="s">"prod_image4"</span><span class="nt">&gt;</span>
                <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"file"</span> <span class="na">id=</span><span class="s">"uploadImg4"</span> <span class="na">name=</span><span class="s">"uploadImg4"</span> <span class="na">oninput=</span><span class="s">"checkFileName(4, 'soldout');"</span><span class="nt">&gt;</span>
            <span class="nt">&lt;/div&gt;</span>
            <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"catagory-name"</span><span class="nt">&gt;</span>[이미지 삭제]<span class="nt">&lt;/div&gt;</span>
        <span class="nt">&lt;/div&gt;</span>
    <span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/div&gt;</span>
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">Ajax</code>를 이용해 비동기 방식으로 이미지를 등록할 것이기 때문에 뷰 페이지에서는 <code class="language-plaintext highlighter-rouge">oninput</code> 속성에 이미지 업로드 메서드를 연결했다.</li>
  <li>이때 각 인풋 태그들에 들어갈 이미지의 종류만 다르지 수행할 동작 자체는 모두 같기 때문에 하나의 메서드에서 좀 더 쉽게 처리할 수 있도록 같은 <code class="language-plaintext highlighter-rouge">id</code>를 사용하되, <code class="language-plaintext highlighter-rouge">id="uploadImg1"</code>, <code class="language-plaintext highlighter-rouge">id="uploadImg2"</code>과 같이 맨 뒤에 번호를 부여해서 각 태그를 구분했다. 그리고 <code class="language-plaintext highlighter-rouge">oninput</code>의 <code class="language-plaintext highlighter-rouge">checkFileName(num, type)</code> 메서드에 인자값으로 해당 <code class="language-plaintext highlighter-rouge">id</code>의 번호와 이미지 타입을 넣어준다.</li>
</ul>

<h2 id="productadminjs">productAdmin.js</h2>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nx">checkFileName</span><span class="p">(</span><span class="nx">num</span><span class="p">,</span> <span class="nx">type</span><span class="p">)</span> <span class="p">{</span>
    <span class="kd">var</span> <span class="nx">regex</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="dl">"</span><span class="s2">(.*?)</span><span class="se">\</span><span class="s2">.(jpg|jpeg|png|gif)</span><span class="dl">"</span><span class="p">);</span>
    <span class="kd">var</span> <span class="nx">maxSize</span> <span class="o">=</span> <span class="mi">10</span> <span class="o">*</span> <span class="mi">1024</span> <span class="o">*</span> <span class="mi">1024</span><span class="p">;</span>
	
    <span class="c1">// id 맨 뒤에 붙는 번호만 바꿔주면 간편하게 해당 인풋 태그를 찾아갈 수 있다.</span>
    <span class="kd">var</span> <span class="nx">fileSize</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">#uploadImg</span><span class="dl">'</span> <span class="o">+</span> <span class="nx">num</span><span class="p">)[</span><span class="mi">0</span><span class="p">].</span><span class="nx">files</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">size</span><span class="p">;</span>
    <span class="k">if</span> <span class="p">(</span><span class="nx">fileSize</span> <span class="o">&gt;</span> <span class="nx">maxSize</span><span class="p">)</span> <span class="p">{</span>
        <span class="nx">alert</span><span class="p">(</span><span class="dl">'</span><span class="s1">5MB 이하만 첨부 가능합니다.</span><span class="dl">'</span><span class="p">);</span>
        <span class="c1">// 인풋 태그에 등록된 파일을 삭제한다.</span>
        <span class="nx">crossBrowsing</span><span class="p">(</span><span class="nx">num</span><span class="p">);</span>
        <span class="k">return</span><span class="p">;</span>
    <span class="p">}</span>
	
    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">regex</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">#uploadImg</span><span class="dl">'</span> <span class="o">+</span> <span class="nx">num</span><span class="p">).</span><span class="nx">val</span><span class="p">()))</span> <span class="p">{</span>
        <span class="nx">alert</span><span class="p">(</span><span class="dl">'</span><span class="s1">확장자가 jpeg, jpg, png, gif인 이미지 파일만 등록 가능합니다.</span><span class="dl">'</span><span class="p">);</span>
        <span class="c1">// 인풋 태그에 등록된 파일을 삭제한다.</span>
        <span class="nx">crossBrowsing</span><span class="p">(</span><span class="nx">num</span><span class="p">);</span>
        <span class="k">return</span><span class="p">;</span>
    <span class="p">}</span>
	
    <span class="c1">// 위에서 확장자 검사와 파일 크기 검사를 통과했을 때에만 업로드 메서드 실행 </span>
    <span class="nx">uploadImg</span><span class="p">(</span><span class="nx">num</span><span class="p">,</span> <span class="nx">type</span><span class="p">);</span>
<span class="p">}</span>

<span class="c1">// 인풋 태그에 등록된 파일을 삭제하는 메서드</span>
<span class="kd">function</span> <span class="nx">crossBrowsing</span><span class="p">(</span><span class="nx">num</span><span class="p">)</span> <span class="p">{</span>
    <span class="kd">var</span> <span class="nx">agent</span> <span class="o">=</span> <span class="nb">navigator</span><span class="p">.</span><span class="nx">userAgent</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">();</span>
	
    <span class="c1">// 크로스 브라우징 처리</span>
    <span class="c1">// IE일 때</span>
    <span class="k">if</span> <span class="p">(</span><span class="nb">navigator</span><span class="p">.</span><span class="nx">appName</span> <span class="o">==</span> <span class="dl">'</span><span class="s1">Netscape</span><span class="dl">'</span> <span class="o">&amp;&amp;</span> <span class="nb">navigator</span><span class="p">.</span><span class="nx">userAgent</span><span class="p">.</span><span class="nx">search</span><span class="p">(</span><span class="dl">'</span><span class="s1">Trident</span><span class="dl">'</span><span class="p">)</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span> <span class="o">||</span>
        <span class="nx">agent</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="dl">"</span><span class="s2">msie</span><span class="dl">"</span><span class="p">)</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span>
        <span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">#uploadImg</span><span class="dl">'</span> <span class="o">+</span> <span class="nx">num</span><span class="p">).</span><span class="nx">replaceWith</span><span class="p">(</span><span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">#uploadImg</span><span class="dl">'</span> <span class="o">+</span> <span class="nx">num</span><span class="p">).</span><span class="nx">clone</span><span class="p">(</span><span class="kc">true</span><span class="p">));</span>
    <span class="k">else</span> <span class="c1">// 그 외 브라우저</span>
        <span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">#uploadImg</span><span class="dl">'</span> <span class="o">+</span> <span class="nx">num</span><span class="p">).</span><span class="nx">val</span><span class="p">(</span><span class="dl">''</span><span class="p">);</span>	
<span class="p">}</span>

<span class="c1">// 파일 업로드를 수행하는 메서드</span>
<span class="kd">function</span> <span class="nx">uploadImg</span><span class="p">(</span><span class="nx">num</span><span class="p">,</span> <span class="nx">type</span><span class="p">)</span> <span class="p">{</span>
    <span class="kd">var</span> <span class="nx">reader</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">FileReader</span><span class="p">();</span>
	
    <span class="c1">// 업로드 할 파일을 읽어와서 이미지 미리보기 영역에 뿌려준다.</span>
    <span class="nx">reader</span><span class="p">.</span><span class="nx">onload</span> <span class="o">=</span> <span class="nx">e</span> <span class="o">=&gt;</span> <span class="p">{</span>
        <span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">#prevImg</span><span class="dl">'</span> <span class="o">+</span> <span class="nx">num</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="dl">'</span><span class="s1">src</span><span class="dl">'</span><span class="p">,</span> <span class="nx">e</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">result</span><span class="p">);</span>
    <span class="p">}</span>
	
    <span class="nx">reader</span><span class="p">.</span><span class="nx">readAsDataURL</span><span class="p">(</span><span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">#uploadImg</span><span class="dl">'</span> <span class="o">+</span> <span class="nx">num</span><span class="p">)[</span><span class="mi">0</span><span class="p">].</span><span class="nx">files</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span>
	
    <span class="c1">// 파일을 form 데이터에 담아 전송할 준비 </span>
    <span class="kd">var</span> <span class="nx">form</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">FormData</span><span class="p">();</span>
    <span class="nx">form</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="dl">'</span><span class="s1">uploadImg</span><span class="dl">'</span> <span class="o">+</span> <span class="nx">num</span><span class="p">,</span> <span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">#uploadImg</span><span class="dl">'</span> <span class="o">+</span> <span class="nx">num</span><span class="p">)[</span><span class="mi">0</span><span class="p">].</span><span class="nx">files</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span>
	
    <span class="c1">// 업로드 되는 이미지 타입에 따라 매핑되는 url을 다르게 설정한다.</span>
    <span class="kd">var</span> <span class="nx">newUrl</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">/product/upload_</span><span class="dl">'</span><span class="p">;</span>
    <span class="k">switch</span><span class="p">(</span><span class="nx">type</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">case</span> <span class="dl">'</span><span class="s1">detail</span><span class="dl">'</span><span class="p">:</span>
            <span class="nx">newUrl</span> <span class="o">+=</span> <span class="dl">'</span><span class="s1">deImg</span><span class="dl">'</span><span class="p">;</span>
            <span class="k">break</span><span class="p">;</span>
        <span class="k">case</span> <span class="dl">'</span><span class="s1">top</span><span class="dl">'</span><span class="p">:</span>
            <span class="nx">newUrl</span> <span class="o">+=</span> <span class="dl">'</span><span class="s1">topImg</span><span class="dl">'</span><span class="p">;</span>
            <span class="k">break</span><span class="p">;</span>
        <span class="k">case</span> <span class="dl">'</span><span class="s1">thumb</span><span class="dl">'</span><span class="p">:</span>
            <span class="nx">newUrl</span> <span class="o">+=</span> <span class="dl">'</span><span class="s1">thumb</span><span class="dl">'</span><span class="p">;</span>
            <span class="k">break</span><span class="p">;</span>
        <span class="k">case</span> <span class="dl">'</span><span class="s1">soldout</span><span class="dl">'</span><span class="p">:</span>
            <span class="nx">newUrl</span> <span class="o">+=</span> <span class="dl">'</span><span class="s1">soldoutImg</span><span class="dl">'</span><span class="p">;</span>
            <span class="k">break</span><span class="p">;</span>
    <span class="p">}</span>
	
    <span class="nx">$</span><span class="p">.</span><span class="nx">ajax</span><span class="p">({</span>
        <span class="na">type</span><span class="p">:</span> <span class="dl">'</span><span class="s1">post</span><span class="dl">'</span><span class="p">,</span>
        <span class="na">url</span><span class="p">:</span> <span class="nx">newUrl</span><span class="p">,</span>
        <span class="na">data</span><span class="p">:</span> <span class="nx">form</span><span class="p">,</span>
        <span class="na">processData</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
        <span class="na">contentType</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
        <span class="na">success</span><span class="p">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">data</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">if</span> <span class="p">(</span><span class="nx">data</span> <span class="o">!=</span> <span class="kc">null</span><span class="p">)</span> <span class="p">{</span>
                <span class="nx">alert</span><span class="p">(</span><span class="dl">'</span><span class="s1">이미지 업로드 성공</span><span class="dl">'</span> <span class="o">+</span> <span class="nx">data</span><span class="p">);</span>
            <span class="p">}</span>
        <span class="p">},</span>
        <span class="na">error</span><span class="p">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
            <span class="nx">alert</span><span class="p">(</span><span class="dl">'</span><span class="s1">서버 오류로 지연되고 있습니다. 잠시 후 다시 시도해 주세요.</span><span class="dl">'</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="p">});</span>
<span class="p">}</span>
</code></pre></div></div>

<ul>
  <li>업로드 하려는 이미지 파일을 읽어와서 이미지 미리보기 영역에 출력한 뒤 파일 업로드를 위해 서버와 통신한 뒤 성공 유무에 따라 알림창을 출력할 것이다.</li>
</ul>

<h2 id="productajaxcontrollerjava">ProductAjaxController.java</h2>

<ul>
  <li><code class="language-plaintext highlighter-rouge">Ajax</code> 통신을 위한 <code class="language-plaintext highlighter-rouge">RestController</code>에서 이미지 업로드를 수행한다.</li>
  <li>이때 상품 상세페이지의 상단과 본문 영역에 보여질 이미지는 그대로 업로드 하지만 썸네일은 크기를 줄여서 업로드 할 것이라서 이미지 업로드는 두 가지 분기로 나눠진다.</li>
</ul>

<h3 id="이미지-원본-업로드">이미지 원본 업로드</h3>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@RestController</span>
<span class="nd">@RequestMapping</span><span class="o">(</span><span class="s">"/product/*"</span><span class="o">)</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">ProductAjaxController</span> <span class="o">{</span>

    <span class="nd">@Inject</span>
    <span class="kd">private</span> <span class="nc">ProductService</span> <span class="n">service</span><span class="o">;</span>
	
    <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">Logger</span> <span class="n">log</span> <span class="o">=</span> <span class="nc">LoggerFactory</span><span class="o">.</span><span class="na">getLogger</span><span class="o">(</span><span class="nc">ProductAjaxController</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>

    <span class="nd">@Resource</span><span class="o">(</span><span class="n">name</span> <span class="o">=</span> <span class="s">"reviewImgUploadPath"</span><span class="o">)</span>
    <span class="kd">private</span> <span class="nc">String</span> <span class="n">reviewImgUploatPath</span><span class="o">;</span>
	
    <span class="nd">@Resource</span><span class="o">(</span><span class="n">name</span> <span class="o">=</span> <span class="s">"prodDimgUploadPath"</span><span class="o">)</span>
    <span class="kd">private</span> <span class="nc">String</span> <span class="n">prodDimgUploadPath</span><span class="o">;</span>
	
    <span class="nd">@Resource</span><span class="o">(</span><span class="n">name</span> <span class="o">=</span> <span class="s">"prodThumbUploadPath"</span><span class="o">)</span>
    <span class="kd">private</span> <span class="nc">String</span> <span class="n">prodThumbUploadPath</span><span class="o">;</span>
	
    <span class="nd">@Resource</span><span class="o">(</span><span class="n">name</span> <span class="o">=</span> <span class="s">"prodTopImgUploadPath"</span><span class="o">)</span>
    <span class="kd">private</span> <span class="nc">String</span> <span class="n">prodTopImgUploadPath</span><span class="o">;</span>
	
    <span class="nd">@Resource</span><span class="o">(</span><span class="n">name</span> <span class="o">=</span> <span class="s">"prodSoldoutImgUploadPath"</span><span class="o">)</span>
    <span class="kd">private</span> <span class="nc">String</span> <span class="n">prodSoldoutImgUploadPath</span><span class="o">;</span>
	
    <span class="c1">// 상세페이지 상단 이미지 </span>
    <span class="nd">@RequestMapping</span><span class="o">(</span><span class="n">value</span> <span class="o">=</span> <span class="s">"/upload_topImg"</span><span class="o">,</span> <span class="n">method</span> <span class="o">=</span> <span class="nc">RequestMethod</span><span class="o">.</span><span class="na">POST</span><span class="o">)</span>
    <span class="kd">public</span> <span class="nc">String</span> <span class="nf">uploadTopImgPOST</span><span class="o">(</span><span class="nd">@RequestParam</span><span class="o">(</span><span class="s">"uploadImg1"</span><span class="o">)</span> <span class="nc">MultipartFile</span> <span class="n">file</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">Exception</span> <span class="o">{</span>
        <span class="nc">String</span> <span class="n">fileName</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
        <span class="k">if</span> <span class="o">(!</span><span class="n">file</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">())</span> <span class="o">{</span>
            <span class="c1">// 이미지 파일명 변환</span>
            <span class="n">fileName</span> <span class="o">=</span> <span class="nc">Commons</span><span class="o">.</span><span class="na">convertImgName</span><span class="o">(</span><span class="n">file</span><span class="o">.</span><span class="na">getOriginalFilename</span><span class="o">(),</span> <span class="n">service</span><span class="o">.</span><span class="na">getLastProdNum</span><span class="o">()</span> <span class="o">+</span> <span class="mi">1</span><span class="o">,</span> <span class="nc">ImgType</span><span class="o">.</span><span class="na">TOP</span><span class="o">);</span>
            <span class="nc">File</span> <span class="n">targetFile</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">File</span><span class="o">(</span><span class="n">prodTopImgUploadPath</span><span class="o">,</span> <span class="n">fileName</span><span class="o">);</span>
            <span class="nc">FileCopyUtils</span><span class="o">.</span><span class="na">copy</span><span class="o">(</span><span class="n">file</span><span class="o">.</span><span class="na">getBytes</span><span class="o">(),</span> <span class="n">targetFile</span><span class="o">);</span>
        <span class="o">}</span>
		
        <span class="k">return</span> <span class="n">fileName</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="c1">// 상세페이지 본문 이미지 </span>
    <span class="nd">@RequestMapping</span><span class="o">(</span><span class="n">value</span> <span class="o">=</span> <span class="s">"/upload_deImg"</span><span class="o">,</span> <span class="n">method</span> <span class="o">=</span> <span class="nc">RequestMethod</span><span class="o">.</span><span class="na">POST</span><span class="o">)</span>
    <span class="kd">public</span> <span class="nc">String</span> <span class="nf">uploadDeImgPOST</span><span class="o">(</span><span class="nd">@RequestParam</span><span class="o">(</span><span class="s">"uploadImg2"</span><span class="o">)</span> <span class="nc">MultipartFile</span> <span class="n">file</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">Exception</span> <span class="o">{</span>
        <span class="nc">String</span> <span class="n">fileName</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
        <span class="k">if</span> <span class="o">(!</span><span class="n">file</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">())</span> <span class="o">{</span>
            <span class="n">fileName</span> <span class="o">=</span> <span class="nc">Commons</span><span class="o">.</span><span class="na">convertImgName</span><span class="o">(</span><span class="n">file</span><span class="o">.</span><span class="na">getOriginalFilename</span><span class="o">(),</span> <span class="n">service</span><span class="o">.</span><span class="na">getLastProdNum</span><span class="o">()</span> <span class="o">+</span> <span class="mi">1</span><span class="o">,</span> <span class="nc">ImgType</span><span class="o">.</span><span class="na">DETAIL</span><span class="o">);</span>
            <span class="nc">File</span> <span class="n">targetFile</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">File</span><span class="o">(</span><span class="n">prodDimgUploadPath</span><span class="o">,</span> <span class="n">fileName</span><span class="o">);</span>
            <span class="nc">FileCopyUtils</span><span class="o">.</span><span class="na">copy</span><span class="o">(</span><span class="n">file</span><span class="o">.</span><span class="na">getBytes</span><span class="o">(),</span> <span class="n">targetFile</span><span class="o">);</span>
        <span class="o">}</span>
		
        <span class="k">return</span> <span class="n">fileName</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>이미지 원본은 별도의 작업을 할 필요가 없기 때문에 지정된 경로에 그대로 업로드 한다.</li>
  <li>파일을 업로드 할 때 파일명을 각 용도별로 지정해서 사용하기로 했다. 예를 들면 상세 이미지는 <code class="language-plaintext highlighter-rouge">detail_상품번호.png</code>, 썸네일은 <code class="language-plaintext highlighter-rouge">thumbnail_상품번호.png</code>, 후기글의 이미지는 <code class="language-plaintext highlighter-rouge">review_리뷰글번호.png</code>와 같은 형태이다. 그래서 업로드되는 파일명을 변환해주는 메서드가 필요해서 따로 만들었다.</li>
  <li>파일명을 변환하는 메서드는 <code class="language-plaintext highlighter-rouge">ProductAjaxController</code> 뿐만 아니라 <code class="language-plaintext highlighter-rouge">ProductController</code>에서도 쓰이기 때문에 여러 클래스에서 공통으로 사용되는 메서드들을 모아놓은 <code class="language-plaintext highlighter-rouge">Commons</code> 클래스를 만들어서 작성했다. <code class="language-plaintext highlighter-rouge">Commons</code> 클래스의 메서드는 객체 생성 없이 바로 접근해서 사용하고 싶었기 때문에 <code class="language-plaintext highlighter-rouge">static</code> 메서드로 선언했다.</li>
</ul>

<h3 id="commonsjava">Commons.java</h3>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// 여러 컨트롤러에서 공통으로 쓸 수 있는 메서드를 모아놓은 클래스</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Commons</span> <span class="o">{</span>

    <span class="c1">// 이미지 용도에 따라 파일명 다르게 설정</span>
    <span class="kd">public</span> <span class="kd">final</span> <span class="kd">static</span> <span class="nc">String</span> <span class="nf">convertImgName</span><span class="o">(</span><span class="nc">String</span> <span class="n">name</span><span class="o">,</span> <span class="kt">int</span> <span class="n">num</span><span class="o">,</span> <span class="nc">ImgType</span> <span class="n">type</span><span class="o">)</span> <span class="o">{</span>
        <span class="c1">// 확장자명 시작 위치 찾기</span>
        <span class="kt">int</span> <span class="n">idx</span> <span class="o">=</span> <span class="n">name</span><span class="o">.</span><span class="na">lastIndexOf</span><span class="o">(</span><span class="s">"."</span><span class="o">);</span>
        <span class="nc">String</span> <span class="n">ret</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
		
        <span class="k">switch</span> <span class="o">(</span><span class="n">type</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">case</span> <span class="nl">DETAIL:</span>
                <span class="n">ret</span> <span class="o">=</span> <span class="s">"detail_"</span> <span class="o">+</span> <span class="n">num</span> <span class="o">+</span> <span class="s">"."</span> <span class="o">+</span> <span class="n">name</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="n">idx</span> <span class="o">+</span> <span class="mi">1</span><span class="o">).</span><span class="na">toLowerCase</span><span class="o">();</span>
                <span class="k">break</span><span class="o">;</span>
            <span class="k">case</span> <span class="nl">THUMBNAIL:</span>
                <span class="n">ret</span> <span class="o">=</span> <span class="s">"thumbnail_"</span> <span class="o">+</span> <span class="n">num</span> <span class="o">+</span> <span class="s">"."</span> <span class="o">+</span> <span class="n">name</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="n">idx</span> <span class="o">+</span> <span class="mi">1</span><span class="o">).</span><span class="na">toLowerCase</span><span class="o">();</span>
                <span class="k">break</span><span class="o">;</span>
            <span class="k">case</span> <span class="nl">TOP:</span>
                <span class="n">ret</span> <span class="o">=</span> <span class="s">"top_"</span> <span class="o">+</span> <span class="n">num</span> <span class="o">+</span> <span class="s">"."</span> <span class="o">+</span> <span class="n">name</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="n">idx</span> <span class="o">+</span> <span class="mi">1</span><span class="o">).</span><span class="na">toLowerCase</span><span class="o">();</span>
                <span class="k">break</span><span class="o">;</span>
            <span class="k">case</span> <span class="nl">SOLDOUT:</span>
                <span class="n">ret</span> <span class="o">=</span> <span class="s">"soldout_"</span> <span class="o">+</span> <span class="n">num</span> <span class="o">+</span> <span class="s">"."</span> <span class="o">+</span> <span class="n">name</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="n">idx</span> <span class="o">+</span> <span class="mi">1</span><span class="o">).</span><span class="na">toLowerCase</span><span class="o">();</span>
                <span class="k">break</span><span class="o">;</span>
            <span class="k">case</span> <span class="nl">REVIEW:</span>
                <span class="n">ret</span> <span class="o">=</span> <span class="s">"review_"</span> <span class="o">+</span> <span class="n">num</span> <span class="o">+</span> <span class="s">"."</span> <span class="o">+</span> <span class="n">name</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="n">idx</span> <span class="o">+</span> <span class="mi">1</span><span class="o">).</span><span class="na">toLowerCase</span><span class="o">();</span>
                <span class="k">break</span><span class="o">;</span>
        <span class="o">}</span>
		
        <span class="k">return</span> <span class="n">ret</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>이미지 파일명 변환 메서드에서는 이미지 타입별로 파일명을 다르게 설정할 것인데 역시 재사용성을 높이기 위해 <code class="language-plaintext highlighter-rouge">enum</code> 클래스를 사용했으며, 가독성과 속도 향상을 위해 <code class="language-plaintext highlighter-rouge">swith</code>문으로 이미지 타입을 구분하도록 했다.</li>
</ul>

<h3 id="imgtypejava">ImgType.java</h3>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.april.unomas.domain</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">enum</span> <span class="nc">ImgType</span> <span class="o">{</span>

    <span class="no">DETAIL</span><span class="o">,</span> <span class="no">THUMBNAIL</span><span class="o">,</span> <span class="no">TOP</span><span class="o">,</span> <span class="no">SOLDOUT</span><span class="o">,</span> <span class="no">REVIEW</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">ImgType enum</code> 역시 여러 클래스에서 공통으로 사용되기 때문에 <code class="language-plaintext highlighter-rouge">enum</code> 클래스를 생성했다.</li>
</ul>

<h3 id="이미지-크기-줄여서-업로드">이미지 크기 줄여서 업로드</h3>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// 썸네일 업로드</span>
<span class="nd">@RequestMapping</span><span class="o">(</span><span class="n">value</span> <span class="o">=</span> <span class="s">"/upload_thumb"</span><span class="o">,</span> <span class="n">method</span> <span class="o">=</span> <span class="nc">RequestMethod</span><span class="o">.</span><span class="na">POST</span><span class="o">)</span>
<span class="kd">public</span> <span class="nc">String</span> <span class="nf">uploadThumbPOST</span><span class="o">(</span><span class="nd">@RequestParam</span><span class="o">(</span><span class="s">"uploadImg3"</span><span class="o">)</span> <span class="nc">MultipartFile</span> <span class="n">file</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">Exception</span> <span class="o">{</span>
    <span class="nc">String</span> <span class="n">fileName</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
    <span class="k">if</span> <span class="o">(!</span><span class="n">file</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">())</span> <span class="o">{</span>
        <span class="c1">// 파일명 변환 후</span>
        <span class="n">fileName</span> <span class="o">=</span> <span class="nc">Commons</span><span class="o">.</span><span class="na">convertImgName</span><span class="o">(</span><span class="n">file</span><span class="o">.</span><span class="na">getOriginalFilename</span><span class="o">(),</span> <span class="n">service</span><span class="o">.</span><span class="na">getLastProdNum</span><span class="o">()</span> <span class="o">+</span> <span class="mi">1</span><span class="o">,</span> <span class="nc">ImgType</span><span class="o">.</span><span class="na">THUMBNAIL</span><span class="o">);</span>
        <span class="c1">// 이미지 크기 리사이즈</span>
        <span class="nc">Commons</span><span class="o">.</span><span class="na">resizeImg</span><span class="o">(</span><span class="n">file</span><span class="o">,</span> <span class="n">prodThumbUploadPath</span><span class="o">,</span> <span class="n">fileName</span><span class="o">);</span>
    <span class="o">}</span>
		
    <span class="k">return</span> <span class="n">fileName</span><span class="o">;</span>
<span class="o">}</span>

<span class="c1">// 품절시 대체 썸네일 업로드</span>
<span class="nd">@RequestMapping</span><span class="o">(</span><span class="n">value</span> <span class="o">=</span> <span class="s">"/upload_soldoutImg"</span><span class="o">,</span> <span class="n">method</span> <span class="o">=</span> <span class="nc">RequestMethod</span><span class="o">.</span><span class="na">POST</span><span class="o">)</span>
<span class="kd">public</span> <span class="nc">String</span> <span class="nf">uploadSoldoutImgPOST</span><span class="o">(</span><span class="nd">@RequestParam</span><span class="o">(</span><span class="s">"uploadImg4"</span><span class="o">)</span> <span class="nc">MultipartFile</span> <span class="n">file</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">Exception</span> <span class="o">{</span>
    <span class="nc">String</span> <span class="n">fileName</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
    <span class="k">if</span> <span class="o">(!</span><span class="n">file</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">())</span> <span class="o">{</span>
        <span class="n">fileName</span> <span class="o">=</span> <span class="nc">Commons</span><span class="o">.</span><span class="na">convertImgName</span><span class="o">(</span><span class="n">file</span><span class="o">.</span><span class="na">getOriginalFilename</span><span class="o">(),</span> <span class="n">service</span><span class="o">.</span><span class="na">getLastProdNum</span><span class="o">()</span> <span class="o">+</span> <span class="mi">1</span><span class="o">,</span> <span class="nc">ImgType</span><span class="o">.</span><span class="na">SOLDOUT</span><span class="o">);</span>
        <span class="nc">Commons</span><span class="o">.</span><span class="na">resizeImg</span><span class="o">(</span><span class="n">file</span><span class="o">,</span> <span class="n">prodSoldoutImgUploadPath</span><span class="o">,</span> <span class="n">fileName</span><span class="o">);</span>
    <span class="o">}</span>
		
    <span class="k">return</span> <span class="n">fileName</span><span class="o">;</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>썸네일과 품절시 대체 썸네일은 크기가 줄여져야 한다. 이미지 크기를 조절하는 메서드 또한 <code class="language-plaintext highlighter-rouge">Commons</code> 클래스에 작성했다.</li>
</ul>

<h3 id="commonsjava-1">Commons.java</h3>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">final</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">resizeImg</span><span class="o">(</span><span class="nc">MultipartFile</span> <span class="n">file</span><span class="o">,</span> <span class="nc">String</span> <span class="n">filePath</span><span class="o">,</span> <span class="nc">String</span> <span class="n">fileName</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">IOException</span> <span class="o">{</span>
    <span class="c1">// 이미지 읽어오기</span>
    <span class="nc">BufferedImage</span> <span class="n">inputImg</span> <span class="o">=</span> <span class="nc">ImageIO</span><span class="o">.</span><span class="na">read</span><span class="o">(</span><span class="n">file</span><span class="o">.</span><span class="na">getInputStream</span><span class="o">());</span>
		
    <span class="c1">// 이미지 가로세로 길이 측정</span>
    <span class="kt">int</span> <span class="n">originWidth</span> <span class="o">=</span> <span class="n">inputImg</span><span class="o">.</span><span class="na">getWidth</span><span class="o">();</span>
    <span class="kt">int</span> <span class="n">originHeight</span> <span class="o">=</span> <span class="n">inputImg</span><span class="o">.</span><span class="na">getHeight</span><span class="o">();</span>
		
    <span class="c1">// 변경할 가로 길이</span>
    <span class="kt">int</span> <span class="n">newWidth</span> <span class="o">=</span> <span class="mi">360</span><span class="o">;</span>
		
    <span class="k">if</span> <span class="o">(</span><span class="n">originWidth</span> <span class="o">&gt;</span> <span class="n">newWidth</span><span class="o">)</span> <span class="o">{</span>
        <span class="c1">// 기존 이미지 비율을 유지하여 세로길이 설정</span>
        <span class="kt">int</span> <span class="n">newHeight</span> <span class="o">=</span> <span class="o">(</span><span class="n">originHeight</span> <span class="o">*</span> <span class="n">newWidth</span><span class="o">)</span> <span class="o">/</span> <span class="n">originWidth</span><span class="o">;</span>
			
        <span class="c1">// 이미지 품질 설정         </span>
        <span class="c1">// Image.SCALE_DEFAULT : 기본 이미지 스케일링 알고리즘 사용</span>
        <span class="c1">// Image.SCALE_FAST : 이미지 부드러움보다 속도 우선</span>
        <span class="c1">// Image.SCALE_REPLICATE : ReplicateScaleFilter 클래스로 구체화 된 이미지 크기 조절 알고리즘</span>
        <span class="c1">// Image.SCALE_SMOOTH : 속도보다 이미지 부드러움을 우선</span>
        <span class="c1">// Image.SCALE_AREA_AVERAGING : 평균 알고리즘 사용</span>
        <span class="nc">Image</span> <span class="n">resizeImg</span> <span class="o">=</span> <span class="n">inputImg</span><span class="o">.</span><span class="na">getScaledInstance</span><span class="o">(</span><span class="n">newWidth</span><span class="o">,</span> <span class="n">newHeight</span><span class="o">,</span> <span class="nc">Image</span><span class="o">.</span><span class="na">SCALE_FAST</span><span class="o">);</span>
        <span class="nc">BufferedImage</span> <span class="n">newImg</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedImage</span><span class="o">(</span><span class="n">newWidth</span><span class="o">,</span> <span class="n">newHeight</span><span class="o">,</span> <span class="nc">BufferedImage</span><span class="o">.</span><span class="na">TYPE_INT_RGB</span><span class="o">);</span>
        <span class="nc">Graphics</span> <span class="n">graphics</span> <span class="o">=</span> <span class="n">newImg</span><span class="o">.</span><span class="na">getGraphics</span><span class="o">();</span>
        <span class="n">graphics</span><span class="o">.</span><span class="na">drawImage</span><span class="o">(</span><span class="n">resizeImg</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="kc">null</span><span class="o">);</span>
        <span class="n">graphics</span><span class="o">.</span><span class="na">dispose</span><span class="o">();</span>
			
        <span class="c1">// 이미지 저장</span>
        <span class="nc">File</span> <span class="n">newFile</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">File</span><span class="o">(</span><span class="n">filePath</span><span class="o">,</span> <span class="n">fileName</span><span class="o">);</span>
        <span class="nc">ImageIO</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">newImg</span><span class="o">,</span> <span class="n">fileName</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="n">fileName</span><span class="o">.</span><span class="na">lastIndexOf</span><span class="o">(</span><span class="s">"."</span><span class="o">)</span> <span class="o">+</span> <span class="mi">1</span><span class="o">),</span> <span class="n">newFile</span><span class="o">);</span>
    <span class="o">}</span>
    <span class="k">else</span> <span class="o">{</span>
        <span class="c1">// 이미지 저장</span>
        <span class="nc">File</span> <span class="n">newFile</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">File</span><span class="o">(</span><span class="n">filePath</span><span class="o">,</span> <span class="n">fileName</span><span class="o">);</span>
        <span class="nc">FileCopyUtils</span><span class="o">.</span><span class="na">copy</span><span class="o">(</span><span class="n">file</span><span class="o">.</span><span class="na">getBytes</span><span class="o">(),</span> <span class="n">newFile</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>업로드 된 파일과 업로드 될 경로, 변환된 파일명을 인자값으로 받아와 이미지 크기 조절 후 업로드를 수행한다.</li>
  <li>이미지 크기 조절은 지정된 썸네일 크기보다 클 때 수행한다.<br /><br /><br /></li>
</ul>

<h1 id="구현하며-했던-고민">구현하며 했던 고민</h1>
<ul>
  <li>업로드 한 이미지를 실시간으로 미리볼 수 있게 하는 기능을 구현하는 것이 가장 고민이었다. 왜냐면 처음 해 보는 것이었고 학원에서 배웠던 것은 동기방식으로 미리보기 없이 업로드 하는 방식이었기 때문이다.</li>
  <li>
    <p>하지만 이와 관련해서 구글에 레퍼런스가 많았기 때문에 약 세 시간 정도 걸려서 구현할 수 있었다.</p>
  </li>
  <li>그리고 파일명을 변환하는 메서드와 같이 여러 클래스에서 공통적으로 쓰이게 되는 메서드의 중복 작성을 줄이고자 <code class="language-plaintext highlighter-rouge">Commons</code> 클래스와 <code class="language-plaintext highlighter-rouge">static</code> 메서드를 만드는 과정에서 자바의 <code class="language-plaintext highlighter-rouge">static</code> 메서드 선언 규칙을 다시 공부할 수 있어서 좋았다. 왜냐면 <code class="language-plaintext highlighter-rouge">static</code> 메서드 사용 관련해서는 <code class="language-plaintext highlighter-rouge">C++</code> 기준 지식을 가지고 있었기 때문에…ㅎ<br /><br /><br /></li>
</ul>

<h1 id="마감까지">마감까지</h1>
<ul>
  <li><code class="language-plaintext highlighter-rouge">D-9</code><br /><br /><br /></li>
</ul>

<h1 id="참고">참고</h1>
<ul>
  <li><a href="https://cloud0477.tistory.com/122">ajax으로 file upload를 해보자 &amp; 첨부파일 이미지 미리보기</a></li>
  <li><a href="https://gorokke.tistory.com/214">JAVA 이미지 리사이징, 가로세로 크기 줄이기</a></li>
</ul>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="Uno mas" /><category term="Project" /><category term="UnoMas" /><category term="Log" /><summary type="html"><![CDATA[작성일 : 2022.05.18 작성자 : 황유진]]></summary></entry><entry><title type="html">JAVA Spring) 1인가구를 위한 쇼핑몰 Uno más 개발일지 15 - 후기글 첨부 이미지의 수정과 삭제</title><link href="http://localhost:4000/uno%20mas/uno-mas-dev-log-15/" rel="alternate" type="text/html" title="JAVA Spring) 1인가구를 위한 쇼핑몰 Uno más 개발일지 15 - 후기글 첨부 이미지의 수정과 삭제" /><published>2022-05-17T00:00:00+09:00</published><updated>2022-05-17T00:00:00+09:00</updated><id>http://localhost:4000/uno%20mas/uno-mas-dev-log-15</id><content type="html" xml:base="http://localhost:4000/uno%20mas/uno-mas-dev-log-15/"><![CDATA[<ul>
  <li>작성일 : 2022.05.17</li>
  <li>
    <p>작성자 : 황유진</p>
  </li>
  <li>팀원 : 김진영, 박승지, 반현빈, 오성은, 오은현, 황유진</li>
  <li>팀장 : 황유진</li>
  <li>부팀장 : 오성은</li>
  <li>GitHub Repository : <a href="https://github.com/miro7923/Uno-Mas">https://github.com/miro7923/Uno-Mas</a><br /><br /><br /></li>
</ul>

<h1 id="개발환경">개발환경</h1>
<ul>
  <li>MacBook Air (M1, 2020)</li>
  <li>OpenJDK 8</li>
  <li>Spring Tool Suite 4.14.0</li>
  <li>Spring framework 4.3.1.RELEASE</li>
  <li>Tomcat 8.5</li>
  <li>MySQL Workbench 8.0.19<br /><br /><br /></li>
</ul>

<h1 id="기간">기간</h1>
<ul>
  <li>2022.4.13 ~ 2022.5.27<br /><br /><br /></li>
</ul>

<h1 id="주제">주제</h1>
<ul>
  <li>웹 백엔드 수업 중 마지막 과제로 팀 프로젝트를 진행하게 되었다.</li>
  <li>조건은 <code class="language-plaintext highlighter-rouge">Spring</code> 기반으로 웹 사이트를 제작하는 것이다.</li>
  <li>총 팀원은 6명이며, 우리 팀은 <code class="language-plaintext highlighter-rouge">1인 가구를 위한 쇼핑몰</code>을 주제로 정했다.</li>
  <li>팀 이름으로 정해진 <code class="language-plaintext highlighter-rouge">Uno más</code>는 스페인어로 <code class="language-plaintext highlighter-rouge">하나 더</code>라는 뜻이다. <br /><br /><br /></li>
</ul>

<h1 id="진행상황">진행상황</h1>

<p align="center"><img src="../../assets/images/unomas_reviewImg.png" width="900" /></p>

<ul>
  <li>상품 후기글에 이미지 하나를 첨부할 수 있도록 설계했기 때문에 후기글에 등록되는 이미지의 업로드 및 수정과 삭제가 가능하게 하는 기능을 구현했다. 업로드 자체는 <code class="language-plaintext highlighter-rouge">MultipartFile</code>로 쉽게 구현할 수 있었지만 수정 기능을 구현하는 과정이 만만치 않았기 때문에 기록으로 남긴다.</li>
</ul>

<h2 id="productmapperxml">productMapper.xml</h2>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;update</span> <span class="na">id=</span><span class="s">"updateReview"</span><span class="nt">&gt;</span>
    UPDATE board_review
    SET review_title = #{review_title}, review_content = #{review_content}, review_rating = #{review_rating}, review_image = #{review_image}
    WHERE review_num = #{review_num}
<span class="nt">&lt;/update&gt;</span>
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">DB</code> 업데이트를 위한 쿼리문에서는 별도의 조건문 없이 입력받은 데이터를 그대로 사용하기 때문에 여기까지 오기 전에 후기글과 함께 업로드 되는 이미지 파일명에 대한 검증을 거친 후 추가 작업이 필요하다.</li>
</ul>

<h2 id="productcontrollerjava">ProductController.java</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@RequestMapping</span><span class="o">(</span><span class="n">value</span> <span class="o">=</span> <span class="s">"/modify_review"</span><span class="o">,</span> <span class="n">method</span> <span class="o">=</span> <span class="nc">RequestMethod</span><span class="o">.</span><span class="na">POST</span><span class="o">)</span>
<span class="kd">public</span> <span class="nc">String</span> <span class="nf">modifyReviewPOST</span><span class="o">(</span><span class="nc">HttpServletRequest</span> <span class="n">request</span><span class="o">,</span> 
        <span class="nd">@RequestParam</span><span class="o">(</span><span class="n">value</span> <span class="o">=</span> <span class="s">"review_image"</span><span class="o">,</span> <span class="n">required</span> <span class="o">=</span> <span class="kc">false</span><span class="o">)</span> <span class="nc">MultipartFile</span> <span class="n">file</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">Exception</span> <span class="o">{</span>
    <span class="nc">BoardReviewVO</span> <span class="n">vo</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BoardReviewVO</span><span class="o">();</span>
    <span class="n">vo</span><span class="o">.</span><span class="na">setReview_num</span><span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"review_num"</span><span class="o">)));</span>
    <span class="n">vo</span><span class="o">.</span><span class="na">setProd_num</span><span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"prod_num"</span><span class="o">)));</span>
    <span class="n">vo</span><span class="o">.</span><span class="na">setReview_content</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"review_content"</span><span class="o">));</span>
    <span class="n">vo</span><span class="o">.</span><span class="na">setReview_rating</span><span class="o">(</span><span class="nc">Float</span><span class="o">.</span><span class="na">parseFloat</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"review_rating"</span><span class="o">)));</span>
    <span class="n">vo</span><span class="o">.</span><span class="na">setReview_title</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"review_title"</span><span class="o">));</span>
    <span class="n">vo</span><span class="o">.</span><span class="na">setUser_num</span><span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"user_num"</span><span class="o">)));</span>
		
    <span class="nc">String</span> <span class="n">reviewImg</span> <span class="o">=</span> <span class="n">service</span><span class="o">.</span><span class="na">getReviewImg</span><span class="o">(</span><span class="n">vo</span><span class="o">.</span><span class="na">getReview_num</span><span class="o">());</span>
    <span class="nc">String</span> <span class="n">uploadImgName</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"uploadImgName"</span><span class="o">);</span>

    <span class="c1">// 업로드 된 파일이 있을 때 </span>
    <span class="k">if</span> <span class="o">(!</span><span class="n">file</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">())</span> <span class="o">{</span>
        <span class="c1">// 기존에 저장된 이미지가 없는 경우 파일이름 생성</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">reviewImg</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">reviewImg</span> <span class="o">=</span> <span class="n">convertImgName</span><span class="o">(</span><span class="n">file</span><span class="o">.</span><span class="na">getOriginalFilename</span><span class="o">(),</span> <span class="n">vo</span><span class="o">.</span><span class="na">getReview_num</span><span class="o">());</span>
        <span class="o">}</span>
        
        <span class="c1">// 파일 새로 업로드 </span>
        <span class="nc">File</span> <span class="n">targetFile</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">File</span><span class="o">(</span><span class="n">reviewImgUploatPath</span><span class="o">,</span> <span class="n">reviewImg</span><span class="o">);</span>
        <span class="nc">FileCopyUtils</span><span class="o">.</span><span class="na">copy</span><span class="o">(</span><span class="n">file</span><span class="o">.</span><span class="na">getBytes</span><span class="o">(),</span> <span class="n">targetFile</span><span class="o">);</span>
        <span class="n">vo</span><span class="o">.</span><span class="na">setReview_image</span><span class="o">(</span><span class="n">reviewImg</span><span class="o">);</span>
    <span class="o">}</span>
    <span class="c1">// 업로드 된 파일이 없을 때</span>
    <span class="k">else</span> <span class="o">{</span> 
        <span class="c1">// 기존에 업로드 된 파일이 없거나 글을 수정하며 이미지를 삭제한 경우</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">uploadImgName</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"이미지 선택"</span><span class="o">))</span> <span class="o">{</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">reviewImg</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
                <span class="c1">// 기존에 업로드 된 파일이 있으면 서버에서 삭제</span>
                <span class="nc">File</span> <span class="n">f</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">File</span><span class="o">(</span><span class="n">reviewImgUploatPath</span> <span class="o">+</span> <span class="nc">File</span><span class="o">.</span><span class="na">separator</span> <span class="o">+</span> <span class="n">reviewImg</span><span class="o">);</span>

                <span class="k">if</span> <span class="o">(</span><span class="n">f</span><span class="o">.</span><span class="na">exists</span><span class="o">())</span>
                    <span class="n">f</span><span class="o">.</span><span class="na">delete</span><span class="o">();</span>
            <span class="o">}</span>
            
            <span class="c1">// 기존 파일명 삭제</span>
            <span class="n">vo</span><span class="o">.</span><span class="na">setReview_image</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="c1">// 기존에 업로드 된 파일이 있으면 그대로 사용</span>
        <span class="k">else</span> <span class="o">{</span>
            <span class="n">vo</span><span class="o">.</span><span class="na">setReview_image</span><span class="o">(</span><span class="n">uploadImgName</span><span class="o">);</span>
        <span class="o">}</span>
    <span class="o">}</span>
		
    <span class="n">service</span><span class="o">.</span><span class="na">modifyReview</span><span class="o">(</span><span class="n">vo</span><span class="o">);</span>
		
    <span class="k">return</span> <span class="s">"redirect:/product/product_detail?prod_num="</span> <span class="o">+</span> <span class="n">vo</span><span class="o">.</span><span class="na">getProd_num</span><span class="o">();</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>매퍼에 후기글에 대한 정보를 보낼 때 <code class="language-plaintext highlighter-rouge">BoardReviewVO</code>를 사용해서 보내는데 게시글을 수정할 때 이미지 파일에 대한 정보도 설정해 주지 않으면 <code class="language-plaintext highlighter-rouge">VO</code> 속의 이미지 파일명 필드는 <code class="language-plaintext highlighter-rouge">null</code>로 남아있는 상태로 매퍼에 전달될 것이다. 그렇게 되면 기존에 서버에 업로드 된 이미지파일이 있는데도 DB 데이터 상에서는 이미지 파일명 정보가 없기 때문에 화면에 출력되지 않는다. 그래서 첨부파일이 포함된 게시글을 수정할 때엔 위와 같이 분기를 나누어 처리해 주게 했다.<br /><br /><br /></li>
</ul>

<h1 id="구현하며-했던-고민">구현하며 했던 고민</h1>
<ul>
  <li>가장 고민했던 것은 사용자가 글을 수정하면서 이미지를 삭제했는지 아닌지 여부를 확인하는 것이었다. 단순히 <code class="language-plaintext highlighter-rouge">file</code>로 넘어온 정보가 있고 없고로 따질 수 없었기 때문이다. <code class="language-plaintext highlighter-rouge">file</code>타입의 인풋태그 특성상 게시글을 작성할 때 파일을 업로드 하지 않으면 사진 첨부 영역의 삭제 버튼을 눌러서 이미지를 삭제해도 값이 비어있고 기존에 업로드했던 이미지를 삭제하는 동작을 하지 않아도 값이 비어있다. 즉 게시글을 수정할 때 새로운 이미지를 첨부하지 않는다면 항상 비어있는 상태로 전송되는 것이다.</li>
</ul>

<div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;c:choose&gt;</span>
    <span class="nt">&lt;c:when </span><span class="na">test=</span><span class="s">"</span><span class="si">${</span><span class="n">vo</span><span class="o">.</span><span class="na">review_image</span> <span class="o">==</span> <span class="kc">null</span> <span class="si">}</span><span class="s">"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"text"</span> <span class="na">class=</span><span class="s">"uploadImgName"</span> <span class="na">id=</span><span class="s">"uploadImgName"</span> <span class="na">value=</span><span class="s">"이미지 선택"</span>
            <span class="na">readonly</span> <span class="na">name=</span><span class="s">"uploadImgName"</span><span class="nt">&gt;</span> 
    <span class="nt">&lt;/c:when&gt;</span>
    <span class="nt">&lt;c:otherwise&gt;</span>
        <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"text"</span> <span class="na">class=</span><span class="s">"uploadImgName"</span> <span class="na">id=</span><span class="s">"uploadImgName"</span> <span class="na">value=</span><span class="s">"${vo.review_image }"</span>
            <span class="na">readonly</span> <span class="na">name=</span><span class="s">"uploadImgName"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;/c:otherwise&gt;</span>
<span class="nt">&lt;/c:choose&gt;</span>
<span class="nt">&lt;label</span> <span class="na">class=</span><span class="s">"site-btn"</span> <span class="na">for=</span><span class="s">"uploadImg"</span> <span class="na">id=</span><span class="s">"uploadBtn"</span><span class="nt">&gt;</span>업로드<span class="nt">&lt;/label&gt;</span>
<span class="nt">&lt;button</span> <span class="na">type=</span><span class="s">"button"</span> <span class="na">class=</span><span class="s">"site-btn"</span> <span class="na">onclick=</span><span class="s">"removeImg();"</span><span class="nt">&gt;</span>삭제<span class="nt">&lt;/button&gt;</span>
<span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"file"</span> <span class="na">id=</span><span class="s">"uploadImg"</span> <span class="na">name=</span><span class="s">"review_image"</span> <span class="na">oninput=</span><span class="s">"checkFileName();"</span><span class="nt">&gt;</span>
</code></pre></div></div>

<ul>
  <li>뷰 페이지 UI 디자인을 하며 업로드 하려는 파일명을 출력하는 인풋 태그를 분리해 뒀기 때문에 파일명이 출력되는 인풋 태그의 값에 따라 기존에 업로드 된 이미지 파일의 존재 유무를 확인하도록 설계했다.<br /><br /><br /></li>
</ul>

<h1 id="마감까지">마감까지</h1>
<ul>
  <li><code class="language-plaintext highlighter-rouge">D-10</code></li>
</ul>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="Uno mas" /><category term="Project" /><category term="UnoMas" /><category term="Log" /><summary type="html"><![CDATA[작성일 : 2022.05.17 작성자 : 황유진]]></summary></entry><entry><title type="html">에러해결 Log) (Spring framework) &amp;lt; session-config &amp;gt; element is limited to 1 occurrence</title><link href="http://localhost:4000/errorlog/warning-log-11/" rel="alternate" type="text/html" title="에러해결 Log) (Spring framework) &amp;lt; session-config &amp;gt; element is limited to 1 occurrence" /><published>2022-05-17T00:00:00+09:00</published><updated>2022-05-17T00:00:00+09:00</updated><id>http://localhost:4000/errorlog/warning-log-11</id><content type="html" xml:base="http://localhost:4000/errorlog/warning-log-11/"><![CDATA[<h1 id="사용환경">사용환경</h1>
<ul>
  <li>MacBook Air (M1, 2020) 16GB</li>
  <li>JDK 8</li>
  <li>Spring Tool Suite 4.14.0</li>
  <li>tomcat 8.5<br /><br /><br /></li>
</ul>

<h1 id="에러의-발생">에러의 발생</h1>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;session-config&gt;</span> element is limited to 1 occurrence
... 이하 생략
}
</code></pre></div></div>

<ul>
  <li>팀 프로젝트 진행 중 팀원의 작업물을 <code class="language-plaintext highlighter-rouge">master</code> 브랜치에 머지하고 난 후 이런 메세지가 뜨면서 서버 실행이 되지 않는 것이었다. 풀 리퀘에서 충돌 확인 할 때도 별 문제 없었는데 무슨 일…?<br /><br /><br /></li>
</ul>

<h1 id="문제-해결">문제 해결</h1>

<p align="center"><img src="../../assets/images/sessionConfigError.png" width="500" /></p>

<ul>
  <li>문제는 <code class="language-plaintext highlighter-rouge">web.xml</code> 파일에서 세션 유지 시간을 설정하는 태그가 두 번 작성되어 있었던 것이었다… 머지시 충돌나는 부분을 처리하는 과정에서 제대로 보지 못 하고 머지를 해서 저렇게 되었던 모양이다. 동일한 태그 하나를 지워주니까 서버가 정상적으로 실행되었다.<br /><br /><br /></li>
</ul>

<h1 id="참고">참고</h1>
<ul>
  <li><a href="https://to-dy.tistory.com/89">[에러] &lt; session-config &gt; element is limited to 1 occurrence</a></li>
</ul>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="ErrorLog" /><category term="Error" /><category term="Solve" /><category term="Log" /><summary type="html"><![CDATA[사용환경 MacBook Air (M1, 2020) 16GB JDK 8 Spring Tool Suite 4.14.0 tomcat 8.5]]></summary></entry><entry><title type="html">에러해결 Log) (Spring framework) 파일업로드시 MultipartFile 변수 값이 null로 입력될 때 해결방법</title><link href="http://localhost:4000/errorlog/warning-log-10/" rel="alternate" type="text/html" title="에러해결 Log) (Spring framework) 파일업로드시 MultipartFile 변수 값이 null로 입력될 때 해결방법" /><published>2022-05-16T00:00:00+09:00</published><updated>2022-05-16T00:00:00+09:00</updated><id>http://localhost:4000/errorlog/warning-log-10</id><content type="html" xml:base="http://localhost:4000/errorlog/warning-log-10/"><![CDATA[<h1 id="사용환경">사용환경</h1>
<ul>
  <li>MacBook Air (M1, 2020) 16GB</li>
  <li>JDK 8</li>
  <li>Spring Tool Suite 4.14.0</li>
  <li>tomcat 8.5<br /><br /><br /></li>
</ul>

<h1 id="에러의-발생">에러의 발생</h1>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@RequestMapping</span><span class="o">(</span><span class="n">value</span> <span class="o">=</span> <span class="s">"/write_review"</span><span class="o">,</span> <span class="n">method</span> <span class="o">=</span> <span class="nc">RequestMethod</span><span class="o">.</span><span class="na">POST</span><span class="o">)</span>
<span class="kd">public</span> <span class="nc">String</span> <span class="nf">writeReviewPOST</span><span class="o">(</span><span class="nc">HttpServletRequest</span> <span class="n">request</span><span class="o">,</span> <span class="nc">MultipartFile</span> <span class="n">file</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">Exception</span> <span class="o">{</span>
    <span class="nc">BoardReviewVO</span> <span class="n">vo</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BoardReviewVO</span><span class="o">();</span>
    <span class="n">vo</span><span class="o">.</span><span class="na">setProd_num</span><span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"prod_num"</span><span class="o">)));</span>
    <span class="n">vo</span><span class="o">.</span><span class="na">setReview_content</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"review_content"</span><span class="o">));</span>
    <span class="n">vo</span><span class="o">.</span><span class="na">setReview_rating</span><span class="o">(</span><span class="nc">Float</span><span class="o">.</span><span class="na">parseFloat</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"review_rating"</span><span class="o">)));</span>
    <span class="n">vo</span><span class="o">.</span><span class="na">setReview_title</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"review_title"</span><span class="o">));</span>
    <span class="n">vo</span><span class="o">.</span><span class="na">setUser_num</span><span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"user_num"</span><span class="o">)));</span>
    <span class="n">vo</span><span class="o">.</span><span class="na">setReview_ip</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getRemoteAddr</span><span class="o">());</span>
		
    <span class="c1">// 리뷰 이미지파일명: review_리뷰글번호</span>
    <span class="nc">String</span> <span class="n">fileName</span> <span class="o">=</span> <span class="s">"review_"</span> <span class="o">+</span> <span class="n">service</span><span class="o">.</span><span class="na">getLastReviewNum</span><span class="o">()</span> <span class="o">+</span> <span class="mi">1</span><span class="o">;</span>
		
    <span class="nc">File</span> <span class="n">targetFile</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">File</span><span class="o">(</span><span class="n">reviewImgUploatPath</span><span class="o">,</span> <span class="n">fileName</span><span class="o">);</span>
    <span class="nc">FileCopyUtils</span><span class="o">.</span><span class="na">copy</span><span class="o">(</span><span class="n">file</span><span class="o">.</span><span class="na">getBytes</span><span class="o">(),</span> <span class="n">targetFile</span><span class="o">);</span>

    <span class="n">vo</span><span class="o">.</span><span class="na">setReview_image</span><span class="o">(</span><span class="n">fileName</span><span class="o">);</span>
		
    <span class="n">service</span><span class="o">.</span><span class="na">insertReview</span><span class="o">(</span><span class="n">vo</span><span class="o">);</span>
		
    <span class="k">return</span> <span class="s">"redirect:/product/product_detail?prod_num="</span> <span class="o">+</span> <span class="n">vo</span><span class="o">.</span><span class="na">getProd_num</span><span class="o">();</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">jsp</code> 파일에서 <code class="language-plaintext highlighter-rouge">enctype</code>을 <code class="language-plaintext highlighter-rouge">multipart/form-data</code>로 지정하고 컨트롤러에서 <code class="language-plaintext highlighter-rouge">MultipartFile</code>로 받게 했는데 <code class="language-plaintext highlighter-rouge">file</code> 변수의 값이 자꾸 <code class="language-plaintext highlighter-rouge">null</code>로 나오는 것이었다. 수업시간에 한대로 따라했는데 이게 뭐람<br /><br /><br /></li>
</ul>

<h1 id="문제-해결">문제 해결</h1>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@RequestMapping</span><span class="o">(</span><span class="n">value</span> <span class="o">=</span> <span class="s">"/write_review"</span><span class="o">,</span> <span class="n">method</span> <span class="o">=</span> <span class="nc">RequestMethod</span><span class="o">.</span><span class="na">POST</span><span class="o">)</span>
<span class="kd">public</span> <span class="nc">String</span> <span class="nf">writeReviewPOST</span><span class="o">(</span><span class="nc">HttpServletRequest</span> <span class="n">request</span><span class="o">,</span> 
        <span class="nd">@RequestParam</span><span class="o">(</span><span class="n">value</span> <span class="o">=</span> <span class="s">"review_image"</span><span class="o">,</span> <span class="n">required</span> <span class="o">=</span> <span class="kc">false</span><span class="o">)</span> <span class="nc">MultipartFile</span> <span class="n">file</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">Exception</span> <span class="o">{</span>
        <span class="c1">// ...생략</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>위처럼 <code class="language-plaintext highlighter-rouge">MultipartFile</code> 변수가 어떤 파라미터와 연관이 있는지 지정해 주어야 했다. 파일 업로드 태그는 하나 뿐이었건만 함께 넘어오는 파라미터가 많아서 못 찾은 걸까? 어쨌든 새로운 사실도 알게 되었고 문제도 해결했다.<br /><br /><br /></li>
</ul>

<h1 id="참고">참고</h1>
<ul>
  <li><a href="https://m.blog.naver.com/PostView.naver?isHttpsRedirect=true&amp;blogId=websearch&amp;logNo=221309319248">[스프링] MultipartFile 변수가 null 로 입력되는 문제 해결 방법</a></li>
</ul>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="ErrorLog" /><category term="Error" /><category term="Solve" /><category term="Log" /><summary type="html"><![CDATA[사용환경 MacBook Air (M1, 2020) 16GB JDK 8 Spring Tool Suite 4.14.0 tomcat 8.5]]></summary></entry><entry><title type="html">에러해결 Log) (Spring framework) There is no getter for property named ‘prod_num’ in ‘class java.lang.Integer’</title><link href="http://localhost:4000/errorlog/warning-log-09/" rel="alternate" type="text/html" title="에러해결 Log) (Spring framework) There is no getter for property named ‘prod_num’ in ‘class java.lang.Integer’" /><published>2022-05-15T00:00:00+09:00</published><updated>2022-05-15T00:00:00+09:00</updated><id>http://localhost:4000/errorlog/warning-log-09</id><content type="html" xml:base="http://localhost:4000/errorlog/warning-log-09/"><![CDATA[<h1 id="사용환경">사용환경</h1>
<ul>
  <li>MacBook Air (M1, 2020) 16GB</li>
  <li>JDK 8</li>
  <li>Spring Tool Suite 4.14.0</li>
  <li>tomcat 8.5<br /><br /><br /></li>
</ul>

<h1 id="에러의-발생">에러의 발생</h1>

<p><code class="language-plaintext highlighter-rouge">There is no getter for property named 'prod_num' in 'class java.lang.Integer'</code></p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">MyBatis</code> 매퍼에서 새로운 쿼리문을 만들고 컨트롤러단에서 단위 테스트를 진행했다. 그런데 암만 봐도 잘못 쓴 곳이 없는 거 같은데 자꾸 이런 에러가 나는 것이었다…<br /><br /><br /></li>
</ul>

<h1 id="문제-해결">문제 해결</h1>

<p align="center"><img src="../../assets/images/mybatisError5.png" width="600" /></p>

<ul>
  <li>그래서 DB에 접근하는 부분마다 로그를 찍어 보았다.</li>
  <li>
    <p>그리고 발견한 문제는 <code class="language-plaintext highlighter-rouge">service.getInquiryCnt(prod_num)</code>와 연결되는 <code class="language-plaintext highlighter-rouge">mapper</code>의 쿼리문에서 변수명을 넣어주는 자리에 <code class="language-plaintext highlighter-rouge">${prod_num}</code> 이딴 식으로 쓴 것이었다… 후…….🥲</p>
  </li>
  <li><code class="language-plaintext highlighter-rouge">#{prod_num}</code>으로 수정해 주니까 잘 해결 되었다.<br /><br /><br /></li>
</ul>

<h1 id="참고">참고</h1>
<ul>
  <li><a href="https://velog.io/@jaewon95/%ED%95%B4%EA%B2%B0%EB%A9%94%EB%AA%A8-There-is-no-getter-for-property-named-bno-in-class-java.lang.Integer-%EC%98%A4%EB%A5%98">해결메모 There is no getter for property named ‘bno’ in ‘class java.lang.Integer’ 오류</a></li>
</ul>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="ErrorLog" /><category term="Error" /><category term="Solve" /><category term="Log" /><summary type="html"><![CDATA[사용환경 MacBook Air (M1, 2020) 16GB JDK 8 Spring Tool Suite 4.14.0 tomcat 8.5]]></summary></entry><entry><title type="html">Python) BOJ 1436. 영화감독 숌</title><link href="http://localhost:4000/boj/boj1436-py/" rel="alternate" type="text/html" title="Python) BOJ 1436. 영화감독 숌" /><published>2022-05-13T00:00:00+09:00</published><updated>2022-05-13T00:00:00+09:00</updated><id>http://localhost:4000/boj/boj1436-py</id><content type="html" xml:base="http://localhost:4000/boj/boj1436-py/"><![CDATA[<h1 id="문제-링크">문제 링크</h1>
<hr />

<ul>
  <li><a href="https://www.acmicpc.net/problem/1436">https://www.acmicpc.net/problem/1436</a><br /><br /></li>
</ul>

<h1 id="제한">제한</h1>
<hr />

<ul>
  <li>시간 제한 : 2 초</li>
  <li>메모리 제한 : 128 MB<br /><br /></li>
</ul>

<h1 id="문제">문제</h1>
<hr />

<ul>
  <li>
    <p>666은 종말을 나타내는 숫자라고 한다. 따라서, 많은 블록버스터 영화에서는 666이 들어간 제목을 많이 사용한다. 영화감독 숌은 세상의 종말 이라는 시리즈 영화의 감독이다. 조지 루카스는 스타워즈를 만들 때, 스타워즈 1, 스타워즈 2, 스타워즈 3, 스타워즈 4, 스타워즈 5, 스타워즈 6과 같이 이름을 지었고, 피터 잭슨은 반지의 제왕을 만들 때, 반지의 제왕 1, 반지의 제왕 2, 반지의 제왕 3과 같이 영화 제목을 지었다.</p>
  </li>
  <li>
    <p>하지만 숌은 자신이 조지 루카스와 피터 잭슨을 뛰어넘는다는 것을 보여주기 위해서 영화 제목을 좀 다르게 만들기로 했다.</p>
  </li>
  <li>
    <p>종말의 숫자란 어떤 수에 6이 적어도 3개이상 연속으로 들어가는 수를 말한다. 제일 작은 종말의 숫자는 666이고, 그 다음으로 큰 수는 1666, 2666, 3666, …. 과 같다.</p>
  </li>
  <li>
    <p>따라서, 숌은 첫 번째 영화의 제목은 세상의 종말 666, 두 번째 영화의 제목은 세상의 종말 1666 이렇게 이름을 지을 것이다. 일반화해서 생각하면, N번째 영화의 제목은 세상의 종말 (N번째로 작은 종말의 숫자) 와 같다.</p>
  </li>
  <li>
    <p>숌이 만든 N번째 영화의 제목에 들어간 숫자를 출력하는 프로그램을 작성하시오. 숌은 이 시리즈를 항상 차례대로 만들고, 다른 영화는 만들지 않는다.<br /><br /></p>
  </li>
</ul>

<h1 id="입력">입력</h1>
<hr />

<ul>
  <li>첫째 줄에 숫자 N이 주어진다. N은 10,000보다 작거나 같은 자연수이다.<br /><br /></li>
</ul>

<h1 id="출력">출력</h1>
<hr />

<ul>
  <li>첫째 줄에 N번째 영화의 제목에 들어간 수를 출력한다.<br /><br /><br /></li>
</ul>

<h1 id="-풀이">👀 풀이</h1>
<hr />

<ul>
  <li>숫자를 문자로 바꾼 뒤 그 안에 문자열 ‘666’이 포함되어 있는지 검사한다. 숫자를 1씩 증가시키면서 이 과정을 반복한다.</li>
  <li>문자열에 ‘666’이 포함되어 있을 때마다 카운트를 1씩 증가시키며 카운트가 N과 같아지면 중단하고 N번째 수를 출력한다.</li>
  <li>N의 최대 크기인 10,000을 입력했을 때 결과값이 2666799이라 제한 시간인 2초 안에 모든 경우를 충분히 탐색할 수 있을 것이라 생각하고 이렇게 짰다.<br /><br /></li>
</ul>

<h1 id="전체-코드">전체 코드</h1>
<hr />

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">sys</span>
<span class="nb">input</span> <span class="o">=</span> <span class="n">sys</span><span class="p">.</span><span class="n">stdin</span><span class="p">.</span><span class="n">readline</span>

<span class="n">n</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">())</span>
<span class="n">num</span> <span class="o">=</span> <span class="mi">666</span>
<span class="n">i</span> <span class="o">=</span> <span class="mi">0</span>
<span class="k">while</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">n</span><span class="p">:</span>
    <span class="n">s</span> <span class="o">=</span> <span class="nb">str</span><span class="p">(</span><span class="n">num</span><span class="p">)</span>
    <span class="k">if</span> <span class="s">'666'</span> <span class="ow">in</span> <span class="n">s</span><span class="p">:</span>
        <span class="n">i</span> <span class="o">+=</span> <span class="mi">1</span>
    <span class="n">num</span> <span class="o">+=</span> <span class="mi">1</span>

<span class="c1"># 반복문이 끝나고 나면 num은 항상 정답보다 1 큰 상태이기 때문에 1을 뺀 숫자를 출력한다.
</span><span class="k">print</span><span class="p">(</span><span class="n">num</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span>
</code></pre></div></div>
<p><br /><br /></p>

<h1 id="결과">결과</h1>
<hr />

<ul>
  <li>시간 : 932 ms</li>
  <li>메모리 : 30840 KB</li>
</ul>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="BOJ" /><category term="Algorithm" /><category term="BOJ" /><category term="No1436" /><category term="BruteForce" /><category term="Python" /><summary type="html"><![CDATA[문제 링크 https://www.acmicpc.net/problem/1436 제한 시간 제한 : 2 초 메모리 제한 : 128 MB]]></summary></entry><entry><title type="html">Python) BOJ 1181. 단어 정렬</title><link href="http://localhost:4000/boj/boj1181-py/" rel="alternate" type="text/html" title="Python) BOJ 1181. 단어 정렬" /><published>2022-05-12T00:00:00+09:00</published><updated>2022-05-12T00:00:00+09:00</updated><id>http://localhost:4000/boj/boj1181-py</id><content type="html" xml:base="http://localhost:4000/boj/boj1181-py/"><![CDATA[<h1 id="문제-링크">문제 링크</h1>
<hr />

<ul>
  <li><a href="https://www.acmicpc.net/problem/1181">https://www.acmicpc.net/problem/1181</a><br /><br /></li>
</ul>

<h1 id="제한">제한</h1>
<hr />

<ul>
  <li>시간 제한 : 2 초</li>
  <li>메모리 제한 : 256 MB<br /><br /></li>
</ul>

<h1 id="문제">문제</h1>
<hr />

<ul>
  <li>알파벳 소문자로 이루어진 N개의 단어가 들어오면 아래와 같은 조건에 따라 정렬하는 프로그램을 작성하시오.
    <ul>
      <li>길이가 짧은 것부터</li>
      <li>길이가 같으면 사전 순으로<br /><br /></li>
    </ul>
  </li>
</ul>

<h1 id="입력">입력</h1>
<hr />

<ul>
  <li>첫째 줄에 단어의 개수 N이 주어진다. (1 ≤ N ≤ 20,000) 둘째 줄부터 N개의 줄에 걸쳐 알파벳 소문자로 이루어진 단어가 한 줄에 하나씩 주어진다. 주어지는 문자열의 길이는 50을 넘지 않는다.<br /><br /></li>
</ul>

<h1 id="출력">출력</h1>
<hr />

<ul>
  <li>조건에 따라 정렬하여 단어들을 출력한다. 단, 같은 단어가 여러 번 입력된 경우에는 한 번씩만 출력한다.<br /><br /><br /></li>
</ul>

<h1 id="-풀이">👀 풀이</h1>
<hr />

<ul>
  <li><code class="language-plaintext highlighter-rouge">list.sort()</code>나 <code class="language-plaintext highlighter-rouge">sorted()</code>를 이용해서 정렬할 수 있는데 나는 리스트의 <code class="language-plaintext highlighter-rouge">sort()</code> 메서드를 사용했다.</li>
  <li>같은 단어가 여러 개 있으면 하나만 출력해야 하기 때문에 먼저 <code class="language-plaintext highlighter-rouge">set</code>으로 중복제거를 해 준 다음 정렬함수에 조건식을 넣어준다.<br /><br /></li>
</ul>

<h1 id="전체-코드">전체 코드</h1>
<hr />

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">sys</span>
<span class="nb">input</span> <span class="o">=</span> <span class="n">sys</span><span class="p">.</span><span class="n">stdin</span><span class="p">.</span><span class="n">readline</span>

<span class="n">n</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">())</span>
<span class="n">words</span> <span class="o">=</span> <span class="p">[]</span>
<span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">n</span><span class="p">):</span>
    <span class="n">words</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="nb">input</span><span class="p">())</span>

<span class="n">words</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="nb">set</span><span class="p">(</span><span class="n">words</span><span class="p">))</span>
<span class="n">words</span><span class="p">.</span><span class="n">sort</span><span class="p">(</span><span class="n">key</span><span class="o">=</span><span class="k">lambda</span> <span class="n">x</span> <span class="p">:</span> <span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">x</span><span class="p">),</span> <span class="n">x</span><span class="p">))</span>

<span class="k">for</span> <span class="n">word</span> <span class="ow">in</span> <span class="n">words</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="n">word</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s">''</span><span class="p">)</span>
</code></pre></div></div>
<p><br /><br /></p>

<h1 id="코드-분석">코드 분석</h1>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">words</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="nb">set</span><span class="p">(</span><span class="n">words</span><span class="p">))</span>
<span class="n">words</span><span class="p">.</span><span class="n">sort</span><span class="p">(</span><span class="n">key</span><span class="o">=</span><span class="k">lambda</span> <span class="n">x</span> <span class="p">:</span> <span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">x</span><span class="p">),</span> <span class="n">x</span><span class="p">))</span>
</code></pre></div></div>

<ul>
  <li>중복된 단어는 하나만 출력해야 하기 때문에 먼저 <code class="language-plaintext highlighter-rouge">set</code>으로 중복제거를 해 준다. 나는 리스트의 정렬함수를 사용할 것이라 <code class="language-plaintext highlighter-rouge">set</code>으로 중복제거 한 결과를 <code class="language-plaintext highlighter-rouge">list()</code>로 리턴하도록 했다.</li>
  <li>그 다음 정렬을 하는데, 정렬 조건이 2개이기 때문에 람다식을 사용했다.</li>
  <li>첫 번째로 길이를 기준으로 정렬되어야 하기 때문에 길이를 먼저 넣고 그 다음엔 사전순으로 정렬되도록 x를 그대로 넣어주었다.</li>
  <li>그동안 다소 복잡한 언어들만 써 와서 이게 되나 하고 넣어봤는데 아주 잘 되었다. 역시 직관적으로 쓸 수 있는 파이썬…!</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">for</span> <span class="n">word</span> <span class="ow">in</span> <span class="n">words</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="n">word</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s">''</span><span class="p">)</span>
</code></pre></div></div>

<ul>
  <li>정렬된 단어들을 출력하는 부분인데 입력된 단어들에 개행문자(\n)가 들어있어서 단어 하나를 출력하면 자체 줄바꿈이 되었다.</li>
  <li>그래서 출력문 자체는 줄바꿈을 하지 않게 <code class="language-plaintext highlighter-rouge">end=''</code> 조건을 주었다.<br /><br /></li>
</ul>

<h1 id="결과">결과</h1>
<hr />

<ul>
  <li>시간 : 116 ms</li>
  <li>메모리 : 35452 KB<br /><br /></li>
</ul>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="BOJ" /><category term="Algorithm" /><category term="BOJ" /><category term="No1181" /><category term="BruteForce" /><category term="Python" /><summary type="html"><![CDATA[문제 링크 https://www.acmicpc.net/problem/1181 제한 시간 제한 : 2 초 메모리 제한 : 256 MB]]></summary></entry><entry><title type="html">Python) BOJ 1018. 체스판 다시 칠하기</title><link href="http://localhost:4000/boj/boj1018-py/" rel="alternate" type="text/html" title="Python) BOJ 1018. 체스판 다시 칠하기" /><published>2022-05-11T00:00:00+09:00</published><updated>2022-05-11T00:00:00+09:00</updated><id>http://localhost:4000/boj/boj1018-py</id><content type="html" xml:base="http://localhost:4000/boj/boj1018-py/"><![CDATA[<h1 id="문제-링크">문제 링크</h1>
<hr />

<ul>
  <li><a href="https://www.acmicpc.net/problem/1018">https://www.acmicpc.net/problem/1018</a><br /><br /></li>
</ul>

<h1 id="제한">제한</h1>
<hr />

<ul>
  <li>시간 제한 : 2 초</li>
  <li>메모리 제한 : 128 MB<br /><br /></li>
</ul>

<h1 id="문제">문제</h1>
<hr />

<ul>
  <li>
    <p>지민이는 자신의 저택에서 MN개의 단위 정사각형으로 나누어져 있는 M×N 크기의 보드를 찾았다. 어떤 정사각형은 검은색으로 칠해져 있고, 나머지는 흰색으로 칠해져 있다. 지민이는 이 보드를 잘라서 8×8 크기의 체스판으로 만들려고 한다.</p>
  </li>
  <li>
    <p>체스판은 검은색과 흰색이 번갈아서 칠해져 있어야 한다. 구체적으로, 각 칸이 검은색과 흰색 중 하나로 색칠되어 있고, 변을 공유하는 두 개의 사각형은 다른 색으로 칠해져 있어야 한다. 따라서 이 정의를 따르면 체스판을 색칠하는 경우는 두 가지뿐이다. 하나는 맨 왼쪽 위 칸이 흰색인 경우, 하나는 검은색인 경우이다.</p>
  </li>
  <li>
    <p>보드가 체스판처럼 칠해져 있다는 보장이 없어서, 지민이는 8×8 크기의 체스판으로 잘라낸 후에 몇 개의 정사각형을 다시 칠해야겠다고 생각했다. 당연히 8*8 크기는 아무데서나 골라도 된다. 지민이가 다시 칠해야 하는 정사각형의 최소 개수를 구하는 프로그램을 작성하시오.<br /><br /></p>
  </li>
</ul>

<h1 id="입력">입력</h1>
<hr />

<ul>
  <li>첫째 줄에 N과 M이 주어진다. N과 M은 8보다 크거나 같고, 50보다 작거나 같은 자연수이다. 둘째 줄부터 N개의 줄에는 보드의 각 행의 상태가 주어진다. B는 검은색이며, W는 흰색이다.<br /><br /></li>
</ul>

<h1 id="출력">출력</h1>
<hr />

<ul>
  <li>첫째 줄에 지민이가 다시 칠해야 하는 정사각형 개수의 최솟값을 출력한다.<br /><br /><br /></li>
</ul>

<h1 id="-풀이">👀 풀이</h1>
<hr />

<ul>
  <li>지민이가 가지고 싶은 체스판의 크기는 8*8이기 때문에 저 크기만큼만 조사해서 그 중 가장 적은 칸을 칠하는 경우를 찾으면 된다.</li>
  <li>8*8 범위에서 색칠해야 하는 칸의 개수를 구하는 함수를 만들어 슬라이딩 윈도우처럼 옮겨가며 조사한다. 그 중 가장 작은 값을 정답으로 출력한다.<br /><br /></li>
</ul>

<h1 id="전체-코드">전체 코드</h1>
<hr />

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">sys</span>
<span class="nb">input</span> <span class="o">=</span> <span class="n">sys</span><span class="p">.</span><span class="n">stdin</span><span class="p">.</span><span class="n">readline</span>

<span class="n">n</span><span class="p">,</span> <span class="n">m</span> <span class="o">=</span> <span class="nb">map</span><span class="p">(</span><span class="nb">int</span><span class="p">,</span> <span class="nb">input</span><span class="p">().</span><span class="n">split</span><span class="p">())</span>
<span class="n">board</span> <span class="o">=</span> <span class="p">[]</span>
<span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">n</span><span class="p">):</span>
    <span class="n">board</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="nb">input</span><span class="p">())</span> 
<span class="c1"># 입력받는 부분 끝
</span>
<span class="n">INF</span> <span class="o">=</span> <span class="mi">64</span>
<span class="n">ans</span> <span class="o">=</span> <span class="mi">64</span>
<span class="k">def</span> <span class="nf">changeColor</span><span class="p">(</span><span class="n">cur</span><span class="p">):</span>
    <span class="k">if</span> <span class="n">cur</span> <span class="o">==</span> <span class="s">'W'</span><span class="p">:</span>
        <span class="k">return</span> <span class="s">'B'</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="k">return</span> <span class="s">'W'</span>

<span class="k">def</span> <span class="nf">checkBoard</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">):</span>
    <span class="n">cur</span> <span class="o">=</span> <span class="n">board</span><span class="p">[</span><span class="n">x</span><span class="p">][</span><span class="n">y</span><span class="p">]</span>
    <span class="n">cnt</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">x</span><span class="o">+</span><span class="mi">8</span><span class="p">):</span>
        <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">y</span><span class="p">,</span> <span class="n">y</span><span class="o">+</span><span class="mi">8</span><span class="p">):</span>
            <span class="k">if</span> <span class="n">board</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">!=</span> <span class="n">cur</span><span class="p">:</span>
                <span class="n">cnt</span> <span class="o">+=</span> <span class="mi">1</span>
            <span class="n">cur</span> <span class="o">=</span> <span class="n">changeColor</span><span class="p">(</span><span class="n">cur</span><span class="p">)</span>

        <span class="n">cur</span> <span class="o">=</span> <span class="n">changeColor</span><span class="p">(</span><span class="n">cur</span><span class="p">)</span>

    <span class="n">cnt</span> <span class="o">=</span> <span class="nb">min</span><span class="p">(</span><span class="n">cnt</span><span class="p">,</span> <span class="n">INF</span> <span class="o">-</span> <span class="n">cnt</span><span class="p">)</span>

    <span class="k">global</span> <span class="n">ans</span>
    <span class="n">ans</span> <span class="o">=</span> <span class="nb">min</span><span class="p">(</span><span class="n">ans</span><span class="p">,</span> <span class="n">cnt</span><span class="p">)</span>

<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">n</span><span class="o">-</span><span class="mi">7</span><span class="p">):</span>
    <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">m</span><span class="o">-</span><span class="mi">7</span><span class="p">):</span>
        <span class="n">checkBoard</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">ans</span><span class="p">)</span>
</code></pre></div></div>
<p><br /><br /></p>

<h1 id="코드-분석">코드 분석</h1>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">INF</span> <span class="o">=</span> <span class="mi">64</span>
<span class="n">ans</span> <span class="o">=</span> <span class="mi">64</span>
</code></pre></div></div>

<ul>
  <li>8*8 체스판에서 색칠해야 하는 최대 칸의 수는 64개이다. 체스판을 칠하는 경우는 <code class="language-plaintext highlighter-rouge">W</code>로 시작하는 경우와 <code class="language-plaintext highlighter-rouge">B</code>로 시작하는 경우 두 가지가 있기 때문에 두 경우에 칠해야 하는 칸의 수를 모두 비교해 봐야 한다.</li>
  <li>이걸 2중 반복문을 두 번 돌려 구할 수도 있지만 한 가지 경우에 칠해야 하는 개수를 구한 다음에 그걸 64에서 빼면 다른 경우에 칠해야 하는 개수가 되기 때문에 이렇게 구하는 것이 훨씬 효율적이다. 그래서 무한대값으로 64를 설정한다.</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">changeColor</span><span class="p">(</span><span class="n">cur</span><span class="p">):</span>
    <span class="k">if</span> <span class="n">cur</span> <span class="o">==</span> <span class="s">'W'</span><span class="p">:</span>
        <span class="k">return</span> <span class="s">'B'</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="k">return</span> <span class="s">'W'</span>
</code></pre></div></div>

<ul>
  <li>다음에 나와야 하는 색으로 바꿔주는 메서드이다. 체스판은 검은색 흰색이 번갈아 칠해지니까 서로 반대로 바꿔준다.</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">checkBoard</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">):</span>
    <span class="n">cur</span> <span class="o">=</span> <span class="n">board</span><span class="p">[</span><span class="n">x</span><span class="p">][</span><span class="n">y</span><span class="p">]</span>
    <span class="n">cnt</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">x</span><span class="o">+</span><span class="mi">8</span><span class="p">):</span>
        <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">y</span><span class="p">,</span> <span class="n">y</span><span class="o">+</span><span class="mi">8</span><span class="p">):</span>
            <span class="k">if</span> <span class="n">board</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">!=</span> <span class="n">cur</span><span class="p">:</span>
                <span class="n">cnt</span> <span class="o">+=</span> <span class="mi">1</span>
            <span class="n">cur</span> <span class="o">=</span> <span class="n">changeColor</span><span class="p">(</span><span class="n">cur</span><span class="p">)</span>

        <span class="n">cur</span> <span class="o">=</span> <span class="n">changeColor</span><span class="p">(</span><span class="n">cur</span><span class="p">)</span>

    <span class="n">cnt</span> <span class="o">=</span> <span class="nb">min</span><span class="p">(</span><span class="n">cnt</span><span class="p">,</span> <span class="n">INF</span> <span class="o">-</span> <span class="n">cnt</span><span class="p">)</span>

    <span class="k">global</span> <span class="n">ans</span>
    <span class="n">ans</span> <span class="o">=</span> <span class="nb">min</span><span class="p">(</span><span class="n">ans</span><span class="p">,</span> <span class="n">cnt</span><span class="p">)</span>
</code></pre></div></div>

<ul>
  <li>8*8 크기의 보드판을 탐색하며 색칠해야 하는 칸의 개수를 구하는 메서드이다.</li>
  <li>보드판의 시작점 색깔을 기준으로 새로 색칠해야 하는 칸의 개수를 구한 뒤 시작점의 색깔이 반대 색으로 시작하는 경우도 살펴봐야 하기 때문에 64에서 cnt를 뺀 수와 cnt를 비교해 봐야 한다.</li>
  <li><code class="language-plaintext highlighter-rouge">B</code>와 <code class="language-plaintext highlighter-rouge">W</code>로 시작하는 경우에서 색칠해야 하는 개수의 비교가 끝나면 정답변수와 비교해 최소값을 구한다.</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">n</span><span class="o">-</span><span class="mi">7</span><span class="p">):</span>
    <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">m</span><span class="o">-</span><span class="mi">7</span><span class="p">):</span>
        <span class="n">checkBoard</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">ans</span><span class="p">)</span>
</code></pre></div></div>

<ul>
  <li>입력받은 보드판의 크기가 8<em>8인 경우에 한 번은 돌아야 하기 때문에 n, m에서 7을 뺀 크기만큼 탐색하도록 한다. (8을 빼버리면 입력 크기가 8</em>8인 경우에 범위값이 0이라 반복문에 안 들어감)<br /><br /></li>
</ul>

<h1 id="결과">결과</h1>
<hr />

<ul>
  <li>시간 : 96 ms</li>
  <li>메모리 : 30840 KB<br /><br /></li>
</ul>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="BOJ" /><category term="Algorithm" /><category term="BOJ" /><category term="No1018" /><category term="BruteForce" /><category term="Python" /><summary type="html"><![CDATA[문제 링크 https://www.acmicpc.net/problem/1018 제한 시간 제한 : 2 초 메모리 제한 : 128 MB]]></summary></entry><entry><title type="html">JAVA Spring) 1인가구를 위한 쇼핑몰 Uno más 개발일지 14 - 신상품 페이지와 특가상품 페이지에서 할인상품의 할인율과 할인가 보여주기</title><link href="http://localhost:4000/uno%20mas/uno-mas-dev-log-14/" rel="alternate" type="text/html" title="JAVA Spring) 1인가구를 위한 쇼핑몰 Uno más 개발일지 14 - 신상품 페이지와 특가상품 페이지에서 할인상품의 할인율과 할인가 보여주기" /><published>2022-05-10T00:00:00+09:00</published><updated>2022-05-10T00:00:00+09:00</updated><id>http://localhost:4000/uno%20mas/uno-mas-dev-log-14</id><content type="html" xml:base="http://localhost:4000/uno%20mas/uno-mas-dev-log-14/"><![CDATA[<ul>
  <li>작성일 : 2022.05.10</li>
  <li>
    <p>작성자 : 황유진</p>
  </li>
  <li>팀원 : 김진영, 박승지, 반현빈, 오성은, 오은현, 황유진</li>
  <li>팀장 : 황유진</li>
  <li>부팀장 : 오성은</li>
  <li>GitHub Repository : <a href="https://github.com/miro7923/Uno-Mas">https://github.com/miro7923/Uno-Mas</a><br /><br /><br /></li>
</ul>

<h1 id="개발환경">개발환경</h1>
<ul>
  <li>MacBook Air (M1, 2020)</li>
  <li>OpenJDK 8</li>
  <li>Spring Tool Suite 4.14.0</li>
  <li>Spring framework 4.3.1.RELEASE</li>
  <li>Tomcat 8.5</li>
  <li>MySQL Workbench 8.0.19<br /><br /><br /></li>
</ul>

<h1 id="기간">기간</h1>
<ul>
  <li>2022.4.13 ~ 2022.5.20<br /><br /><br /></li>
</ul>

<h1 id="주제">주제</h1>
<ul>
  <li>웹 백엔드 수업 중 마지막 과제로 팀 프로젝트를 진행하게 되었다.</li>
  <li>조건은 <code class="language-plaintext highlighter-rouge">Spring</code> 기반으로 웹 사이트를 제작하는 것이다.</li>
  <li>총 팀원은 6명이며, 우리 팀은 <code class="language-plaintext highlighter-rouge">1인 가구를 위한 쇼핑몰</code>을 주제로 정했다.</li>
  <li>팀 이름으로 정해진 <code class="language-plaintext highlighter-rouge">Uno más</code>는 스페인어로 <code class="language-plaintext highlighter-rouge">하나 더</code>라는 뜻이다. <br /><br /><br /></li>
</ul>

<h1 id="진행상황">진행상황</h1>

<p align="center"><img src="../../assets/images/unomas_prodListDb1.png" width="900" /></p>

<ul>
  <li>신상품과 할인상품을 볼 수 있는 페이지를 만들어 DB에서 조회해 온 값에 따라 출력되도록 했다.</li>
</ul>

<h2 id="productmapperxml">productMapper.xml</h2>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;mapper</span> <span class="na">namespace=</span><span class="s">"com.unomas.mapper.ProductMapper"</span><span class="nt">&gt;</span>
    <span class="c">&lt;!-- 한 달 이내 신상품 목록 가져오기 --&gt;</span>
    <span class="nt">&lt;select</span> <span class="na">id=</span><span class="s">"getNewProducts"</span> <span class="na">resultType=</span><span class="s">"ProductVO"</span><span class="nt">&gt;</span>
        SELECT *
        FROM products
        WHERE prod_regdate BETWEEN DATE_SUB(NOW(), INTERVAL 1 MONTH) AND NOW()
        ORDER BY prod_regdate DESC
        LIMIT #{pageStart}, #{perPageNum}
    <span class="nt">&lt;/select&gt;</span>
    
    <span class="c">&lt;!-- 신상품 개수 가져오기 --&gt;</span>
    <span class="nt">&lt;select</span> <span class="na">id=</span><span class="s">"getNewProdCnt"</span> <span class="na">resultType=</span><span class="s">"int"</span><span class="nt">&gt;</span>
        SELECT COUNT(prod_num)
        FROM products
        WHERE prod_regdate BETWEEN DATE_SUB(NOW(), INTERVAL 1 MONTH) AND NOW()
    <span class="nt">&lt;/select&gt;</span>
    
    <span class="c">&lt;!-- 특가 상품 목록 가져오기 --&gt;</span>
    <span class="nt">&lt;select</span> <span class="na">id=</span><span class="s">"getSaleProducts"</span> <span class="na">resultType=</span><span class="s">"ProductVO"</span><span class="nt">&gt;</span>
        SELECT *
        FROM products
        WHERE prod_discntrate &gt; 0
        ORDER BY prod_regdate DESC
        LIMIT #{pageStart}, #{perPageNum}
    <span class="nt">&lt;/select&gt;</span>
    
    <span class="c">&lt;!-- 특가 상품 개수 가져오기 --&gt;</span>
    <span class="nt">&lt;select</span> <span class="na">id=</span><span class="s">"getSaleProdCnt"</span> <span class="na">resultType=</span><span class="s">"int"</span><span class="nt">&gt;</span>
        SELECT COUNT(prod_num)
        FROM products
        WHERE prod_discntrate &gt; 0
    <span class="nt">&lt;/select&gt;</span>
<span class="nt">&lt;/mapper&gt;</span>
</code></pre></div></div>

<ul>
  <li>상품 테이블에서 신상품과 할인상품 목록을 가져오기 위한 쿼리문을 작성했다.</li>
  <li>신상품은 등록일 기준으로 최근 한 달 이내의 상품만 가져오도록 했고, 특가(할인) 상품은 할인율을 표시하는 컬럼인 <code class="language-plaintext highlighter-rouge">prod_discntrate</code>의 값이 0 보다 큰 값을 때에만 가져오도록 했다. 할인율이 0이라면 할인하지 않는 상품이라는 뜻이다.</li>
</ul>

<h2 id="productdaojava">ProductDAO.java</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">interface</span> <span class="nc">ProductDAO</span> <span class="o">{</span>
	
    <span class="c1">// 신상품 목록 가져오는 메서드</span>
    <span class="kd">public</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">ProductVO</span><span class="o">&gt;</span> <span class="nf">getNewProductList</span><span class="o">(</span><span class="nc">ProdCriteria</span> <span class="n">pc</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">Exception</span><span class="o">;</span>
	
    <span class="c1">// 신상품 개수 가져오는 메서드</span>
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getNewProdCnt</span><span class="o">()</span> <span class="kd">throws</span> <span class="nc">Exception</span><span class="o">;</span>
	
    <span class="c1">// 특가 목록 가져오는 메서드</span>
    <span class="kd">public</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">ProductVO</span><span class="o">&gt;</span> <span class="nf">getSaleProductList</span><span class="o">(</span><span class="nc">ProdCriteria</span> <span class="n">pc</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">Exception</span><span class="o">;</span>
	
    <span class="c1">// 특가 상품 개수 가져오는 메서드</span>
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getSaleCnt</span><span class="o">()</span> <span class="kd">throws</span> <span class="nc">Exception</span><span class="o">;</span>
<span class="o">}</span>
</code></pre></div></div>

<h2 id="productdaoimpljava">ProductDAOImpl.java</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@Repository</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">ProductDAOImpl</span> <span class="kd">implements</span> <span class="nc">ProductDAO</span> <span class="o">{</span>

    <span class="nd">@Inject</span>
    <span class="kd">private</span> <span class="nc">SqlSession</span> <span class="n">sqlSession</span><span class="o">;</span>
    <span class="kd">private</span> <span class="kd">static</span> <span class="nc">String</span> <span class="no">NAMESPACE</span> <span class="o">=</span> <span class="s">"com.unomas.mapper.ProductMapper"</span><span class="o">;</span>
    <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">Logger</span> <span class="n">log</span> <span class="o">=</span> <span class="nc">LoggerFactory</span><span class="o">.</span><span class="na">getLogger</span><span class="o">(</span><span class="nc">ProductDAOImpl</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>

    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">ProductVO</span><span class="o">&gt;</span> <span class="nf">getNewProductList</span><span class="o">(</span><span class="nc">ProdCriteria</span> <span class="n">pc</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">Exception</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">sqlSession</span><span class="o">.</span><span class="na">selectList</span><span class="o">(</span><span class="no">NAMESPACE</span> <span class="o">+</span> <span class="s">".getNewProducts"</span><span class="o">,</span> <span class="n">pc</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getNewProdCnt</span><span class="o">()</span> <span class="kd">throws</span> <span class="nc">Exception</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">sqlSession</span><span class="o">.</span><span class="na">selectOne</span><span class="o">(</span><span class="no">NAMESPACE</span> <span class="o">+</span> <span class="s">".getNewProdCnt"</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">ProductVO</span><span class="o">&gt;</span> <span class="nf">getSaleProductList</span><span class="o">(</span><span class="nc">ProdCriteria</span> <span class="n">pc</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">Exception</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">sqlSession</span><span class="o">.</span><span class="na">selectList</span><span class="o">(</span><span class="no">NAMESPACE</span> <span class="o">+</span> <span class="s">".getSaleProducts"</span><span class="o">,</span> <span class="n">pc</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getSaleCnt</span><span class="o">()</span> <span class="kd">throws</span> <span class="nc">Exception</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">sqlSession</span><span class="o">.</span><span class="na">selectOne</span><span class="o">(</span><span class="no">NAMESPACE</span> <span class="o">+</span> <span class="s">".getSaleProdCnt"</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">DAO</code>를 통해 DB에서 신상품과 특가상품 정보를 불러온다.</li>
</ul>

<h2 id="productdaotestjava">ProductDAOTest.java</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@RunWith</span><span class="o">(</span><span class="nc">SpringJUnit4ClassRunner</span><span class="o">.</span><span class="na">class</span><span class="o">)</span>
<span class="nd">@ContextConfiguration</span><span class="o">(</span>
        <span class="n">locations</span> <span class="o">=</span> <span class="o">{</span><span class="s">"file:src/main/webapp/WEB-INF/spring/root-context.xml"</span><span class="o">}</span>
        <span class="o">)</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">ProductDAOTest</span> <span class="o">{</span>

    <span class="nd">@Inject</span>
    <span class="kd">private</span> <span class="nc">ProductDAO</span> <span class="n">dao</span><span class="o">;</span>
    <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">Logger</span> <span class="n">log</span> <span class="o">=</span> <span class="nc">LoggerFactory</span><span class="o">.</span><span class="na">getLogger</span><span class="o">(</span><span class="nc">ProductDAOTest</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
	
    <span class="nd">@Test</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="n">신상품목록출력테스트</span><span class="o">()</span> <span class="kd">throws</span> <span class="nc">Exception</span> <span class="o">{</span>
        <span class="nc">ProdCriteria</span> <span class="n">pp</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ProdCriteria</span><span class="o">();</span>
        <span class="n">pp</span><span class="o">.</span><span class="na">setPage</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
        <span class="n">pp</span><span class="o">.</span><span class="na">setPerPageNum</span><span class="o">(</span><span class="mi">9</span><span class="o">);</span>
		
        <span class="n">log</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="n">dao</span><span class="o">.</span><span class="na">getNewProductList</span><span class="o">(</span><span class="n">pp</span><span class="o">)+</span><span class="s">""</span><span class="o">);</span>
        <span class="n">log</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="s">"count: "</span> <span class="o">+</span> <span class="n">dao</span><span class="o">.</span><span class="na">getNewProdCnt</span><span class="o">());</span>
    <span class="o">}</span>
	
    <span class="nd">@Test</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="n">특가목록출력테스트</span><span class="o">()</span> <span class="kd">throws</span> <span class="nc">Exception</span> <span class="o">{</span>
        <span class="nc">ProdCriteria</span> <span class="n">pc</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ProdCriteria</span><span class="o">();</span>
        <span class="nc">ProdPageMaker</span> <span class="n">pm</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ProdPageMaker</span><span class="o">();</span>
        <span class="n">pm</span><span class="o">.</span><span class="na">setCri</span><span class="o">(</span><span class="n">pc</span><span class="o">);</span>
        <span class="n">pm</span><span class="o">.</span><span class="na">setTotalCnt</span><span class="o">(</span><span class="n">dao</span><span class="o">.</span><span class="na">getSaleCnt</span><span class="o">());</span>
		
        <span class="n">log</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="n">dao</span><span class="o">.</span><span class="na">getSaleProductList</span><span class="o">(</span><span class="n">pc</span><span class="o">)+</span><span class="s">""</span><span class="o">);</span>
        <span class="n">log</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="n">pm</span><span class="o">.</span><span class="na">getTotalCnt</span><span class="o">()+</span><span class="s">""</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>서비스 코드에 넣기 전 테스트를 진행했다. 결과가 잘 나왔기 때문에 다음 단계로 넘어간다.</li>
  <li><code class="language-plaintext highlighter-rouge">ProdCriteria</code>와 <code class="language-plaintext highlighter-rouge">ProdPageMaker</code>는 페이징 처리를 위한 객체들이다.</li>
</ul>

<h2 id="prodcriteriajava">ProdCriteria.java</h2>

<ul>
  <li>한 페이지에 보여줄 상품 목록의 정보를 담고 있다.</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.april.unomas.domain</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">lombok.Data</span><span class="o">;</span>

<span class="nd">@Data</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">ProdCriteria</span> <span class="o">{</span>

    <span class="kd">private</span> <span class="kt">int</span> <span class="n">cateStart</span><span class="o">;</span> 
    <span class="kd">private</span> <span class="kt">int</span> <span class="n">cateEnd</span><span class="o">;</span> <span class="c1">// 소분류의 시작과 끝번호 (대분류별로 가져올 때 사용)</span>
    <span class="kd">private</span> <span class="kt">int</span> <span class="n">page</span><span class="o">;</span> <span class="c1">// 현재 페이지번호</span>
    <span class="kd">private</span> <span class="kt">int</span> <span class="n">perPageNum</span><span class="o">;</span> <span class="c1">// 한 페이지에 보여질 상품 개수</span>
    <span class="kd">private</span> <span class="kt">int</span> <span class="n">prod_category</span><span class="o">;</span> <span class="c1">// 소분류 번호. 소분류만 지정해서 가져올 때 사용</span>
	
    <span class="c1">// 한 페이지에 상품이 9개씩 노출될 것이고 첫 페이지는 1로 설정 </span>
    <span class="kd">public</span> <span class="nf">ProdCriteria</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">page</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
        <span class="k">this</span><span class="o">.</span><span class="na">perPageNum</span> <span class="o">=</span> <span class="mi">9</span><span class="o">;</span>
    <span class="o">}</span>
	
    <span class="c1">// 테이블에서 상품 목록을 가져올 때 시작 로우 설정</span>
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getPageStart</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">page</span> <span class="o">-</span> <span class="mi">1</span><span class="o">)</span> <span class="o">*</span> <span class="n">perPageNum</span><span class="o">;</span>
    <span class="o">}</span>
	
    <span class="c1">// 페이지번호가 1보다 작게 입력되면 1페이지로 고정 </span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setPage</span><span class="o">(</span><span class="kt">int</span> <span class="n">page</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">page</span> <span class="o">&lt;=</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">this</span><span class="o">.</span><span class="na">page</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
            <span class="k">return</span><span class="o">;</span>
        <span class="o">}</span>
		
        <span class="k">this</span><span class="o">.</span><span class="na">page</span> <span class="o">=</span> <span class="n">page</span><span class="o">;</span>
    <span class="o">}</span>
	
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setPerPageNum</span><span class="o">(</span><span class="kt">int</span> <span class="n">perPageNum</span><span class="o">)</span> <span class="o">{</span>
        <span class="c1">// 페이지 사이즈 (한 페이지에 perPageNum만큼 출력하게 하기)</span>
        <span class="k">if</span> <span class="o">(!(</span><span class="mi">0</span> <span class="o">&lt;</span> <span class="n">perPageNum</span> <span class="o">&amp;&amp;</span> <span class="n">perPageNum</span> <span class="o">&lt;</span> <span class="mi">100</span><span class="o">))</span> <span class="o">{</span>
            <span class="k">this</span><span class="o">.</span><span class="na">perPageNum</span> <span class="o">=</span> <span class="mi">10</span><span class="o">;</span>
            <span class="k">return</span><span class="o">;</span>
        <span class="o">}</span>
		
        <span class="k">this</span><span class="o">.</span><span class="na">perPageNum</span> <span class="o">=</span> <span class="n">perPageNum</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>입력된 페이지 번호에 따라 테이블에서 가져와야 할 로우 번호를 내부적으로 계산한 후 <code class="language-plaintext highlighter-rouge">MyBatis</code>로 넘겨주도록 했다.</li>
</ul>

<h2 id="prodpagemakerjava">ProdPageMaker.java</h2>

<ul>
  <li>페이지의 하단에서 다음 페이지로 이동할 수 있도록 하는 데이터를 처리하여 가지고 있는 객체이다.</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.april.unomas.domain</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">lombok.Data</span><span class="o">;</span>

<span class="nd">@Data</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">ProdPageMaker</span> <span class="o">{</span>

    <span class="kd">private</span> <span class="kt">int</span> <span class="n">totalCnt</span><span class="o">;</span> <span class="c1">// 총 게시글 수</span>
    <span class="kd">private</span> <span class="kt">int</span> <span class="n">startPage</span><span class="o">;</span> <span class="c1">// 시작페이지 번호</span>
    <span class="kd">private</span> <span class="kt">int</span> <span class="n">endPage</span><span class="o">;</span> <span class="c1">// 마지막 페이지 번호</span>
    <span class="kd">private</span> <span class="kt">boolean</span> <span class="n">prev</span><span class="o">;</span> <span class="c1">// 이전 버튼 활성화 여부(페이지의 개수가 10개가 넘어가면 &lt;&lt; &gt;&gt; 와 같은 버튼 보이게 하는 변수</span>
    <span class="kd">private</span> <span class="kt">boolean</span> <span class="n">next</span><span class="o">;</span> <span class="c1">// 다음 버튼 활성화 여부</span>
    <span class="kd">private</span> <span class="kt">int</span> <span class="n">pageBlock</span> <span class="o">=</span> <span class="mi">10</span><span class="o">;</span> <span class="c1">// 한 페이지에서 보여줄 페이지 블럭의 개수 </span>
    <span class="kd">private</span> <span class="nc">ProdCriteria</span> <span class="n">cri</span><span class="o">;</span> <span class="c1">// 한 페이지에 보여주는 상품 정보를 관리하는 객체</span>
	
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setCri</span><span class="o">(</span><span class="nc">ProdCriteria</span> <span class="n">cri</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">cri</span> <span class="o">=</span> <span class="n">cri</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setTotalCnt</span><span class="o">(</span><span class="kt">int</span> <span class="n">totalCnt</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">totalCnt</span> <span class="o">=</span> <span class="n">totalCnt</span><span class="o">;</span>
		
        <span class="n">calcData</span><span class="o">();</span>
    <span class="o">}</span>
	
    <span class="c1">// 입력받은 총 상품 수와 한 페이지에 보여줄 상품의 수를 이용해서 몇 개의 페이지가 생성되어야 하는지 계산 </span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">calcData</span><span class="o">()</span> <span class="o">{</span>
        <span class="n">endPage</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span><span class="nc">Math</span><span class="o">.</span><span class="na">ceil</span><span class="o">(</span><span class="n">cri</span><span class="o">.</span><span class="na">getPage</span><span class="o">()</span> <span class="o">/</span> <span class="o">(</span><span class="kt">double</span><span class="o">)</span><span class="n">pageBlock</span><span class="o">)</span> <span class="o">*</span> <span class="n">pageBlock</span><span class="o">;</span>
        <span class="n">startPage</span> <span class="o">=</span> <span class="o">(</span><span class="n">endPage</span> <span class="o">-</span> <span class="n">pageBlock</span><span class="o">)</span> <span class="o">+</span> <span class="mi">1</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">tmpEndPage</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span><span class="nc">Math</span><span class="o">.</span><span class="na">ceil</span><span class="o">(</span><span class="n">totalCnt</span> <span class="o">/</span> <span class="o">(</span><span class="kt">double</span><span class="o">)</span><span class="n">cri</span><span class="o">.</span><span class="na">getPerPageNum</span><span class="o">());</span>
		
        <span class="k">if</span> <span class="o">(</span><span class="n">endPage</span> <span class="o">&gt;</span> <span class="n">tmpEndPage</span><span class="o">)</span> <span class="n">endPage</span> <span class="o">=</span> <span class="n">tmpEndPage</span><span class="o">;</span>
		
        <span class="n">prev</span> <span class="o">=</span> <span class="o">(</span><span class="n">startPage</span> <span class="o">==</span> <span class="mi">1</span><span class="o">)</span> <span class="o">?</span> <span class="kc">false</span> <span class="o">:</span> <span class="kc">true</span><span class="o">;</span>
        <span class="n">next</span> <span class="o">=</span> <span class="o">(</span><span class="n">endPage</span> <span class="o">*</span> <span class="n">cri</span><span class="o">.</span><span class="na">getPerPageNum</span><span class="o">()</span> <span class="o">&gt;=</span> <span class="n">totalCnt</span><span class="o">)</span> <span class="o">?</span> <span class="kc">false</span> <span class="o">:</span> <span class="kc">true</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>현재 카테고리에서 보여져야 하는 상품의 총 개수를 이용해서 생성해야 하는 페이지 블럭의 개수를 계산해 가지고 있는 객체이다. 여기서 계산된 데이터로 뷰 페이지에서 표시되어야 하는 페이지 블럭의 개수만큼 반복문을 돌려 출력한다.</li>
</ul>

<h2 id="productservicejava">ProductService.java</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">interface</span> <span class="nc">ProductService</span> <span class="o">{</span>
	
    <span class="c1">// 신상품 목록 가져오는 메서드</span>
    <span class="kd">public</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">ProductVO</span><span class="o">&gt;</span> <span class="nf">getNewProductList</span><span class="o">(</span><span class="nc">ProdCriteria</span> <span class="n">pc</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">Exception</span><span class="o">;</span>
	
    <span class="c1">// 신상품 개수 가져오는 메서드</span>
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getNewProdCnt</span><span class="o">()</span> <span class="kd">throws</span> <span class="nc">Exception</span><span class="o">;</span>
	
    <span class="c1">// 특가 목록 가져오는 메서드</span>
    <span class="kd">public</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">ProductVO</span><span class="o">&gt;</span> <span class="nf">getSaleProductList</span><span class="o">(</span><span class="nc">ProdCriteria</span> <span class="n">pc</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">Exception</span><span class="o">;</span>
	
    <span class="c1">// 특가 상품 개수 가져오는 메서드</span>
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getSaleCnt</span><span class="o">()</span> <span class="kd">throws</span> <span class="nc">Exception</span><span class="o">;</span>
<span class="o">}</span>
</code></pre></div></div>

<h2 id="productserviceimpljava">ProductServiceImpl.java</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@Service</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">ProductServiceImpl</span> <span class="kd">implements</span> <span class="nc">ProductService</span> <span class="o">{</span>

    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">ProductVO</span><span class="o">&gt;</span> <span class="nf">getNewProductList</span><span class="o">(</span><span class="nc">ProdCriteria</span> <span class="n">pc</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">Exception</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">dao</span><span class="o">.</span><span class="na">getNewProductList</span><span class="o">(</span><span class="n">pc</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getNewProdCnt</span><span class="o">()</span> <span class="kd">throws</span> <span class="nc">Exception</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">dao</span><span class="o">.</span><span class="na">getNewProdCnt</span><span class="o">();</span>
    <span class="o">}</span>

    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">ProductVO</span><span class="o">&gt;</span> <span class="nf">getSaleProductList</span><span class="o">(</span><span class="nc">ProdCriteria</span> <span class="n">pc</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">Exception</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">dao</span><span class="o">.</span><span class="na">getSaleProductList</span><span class="o">(</span><span class="n">pc</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getSaleCnt</span><span class="o">()</span> <span class="kd">throws</span> <span class="nc">Exception</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">dao</span><span class="o">.</span><span class="na">getSaleCnt</span><span class="o">();</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>서비스 클래스도 연결해 준다.</li>
</ul>

<h2 id="productcontrollerjava">ProductController.java</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@Controller</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">ProductController</span> <span class="o">{</span>

    <span class="nd">@Inject</span>
    <span class="kd">private</span> <span class="nc">ProductService</span> <span class="n">service</span><span class="o">;</span>
	
    <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">Logger</span> <span class="n">log</span> <span class="o">=</span> <span class="nc">LoggerFactory</span><span class="o">.</span><span class="na">getLogger</span><span class="o">(</span><span class="nc">ProductController</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
    
    <span class="nd">@RequestMapping</span><span class="o">(</span><span class="n">value</span> <span class="o">=</span> <span class="s">"/new_list"</span><span class="o">,</span> <span class="n">method</span> <span class="o">=</span> <span class="nc">RequestMethod</span><span class="o">.</span><span class="na">GET</span><span class="o">)</span>
    <span class="kd">public</span> <span class="nc">String</span> <span class="nf">newProductListGET</span><span class="o">(</span><span class="nd">@RequestParam</span><span class="o">(</span><span class="n">value</span> <span class="o">=</span> <span class="s">"pageNum"</span><span class="o">,</span> <span class="n">defaultValue</span> <span class="o">=</span> <span class="s">"1"</span><span class="o">)</span> <span class="kt">int</span> <span class="n">pageNum</span><span class="o">,</span> 
        <span class="nc">ProdCriteria</span> <span class="n">pc</span><span class="o">,</span> <span class="nc">Model</span> <span class="n">model</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">Exception</span> <span class="o">{</span>
        <span class="n">pc</span><span class="o">.</span><span class="na">setPage</span><span class="o">(</span><span class="n">pageNum</span><span class="o">);</span>
		
        <span class="kt">int</span> <span class="n">postCnt</span> <span class="o">=</span> <span class="n">service</span><span class="o">.</span><span class="na">getNewProdCnt</span><span class="o">();</span>
		
        <span class="nc">ProdPageMaker</span> <span class="n">pm</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ProdPageMaker</span><span class="o">();</span>
        <span class="n">pm</span><span class="o">.</span><span class="na">setCri</span><span class="o">(</span><span class="n">pc</span><span class="o">);</span>
        <span class="n">pm</span><span class="o">.</span><span class="na">setTotalCnt</span><span class="o">(</span><span class="n">postCnt</span><span class="o">);</span>

        <span class="n">model</span><span class="o">.</span><span class="na">addAttribute</span><span class="o">(</span><span class="s">"productList"</span><span class="o">,</span> <span class="n">service</span><span class="o">.</span><span class="na">getNewProductList</span><span class="o">(</span><span class="n">pc</span><span class="o">));</span>
        <span class="n">model</span><span class="o">.</span><span class="na">addAttribute</span><span class="o">(</span><span class="s">"postCnt"</span><span class="o">,</span> <span class="n">postCnt</span><span class="o">);</span>
        <span class="n">model</span><span class="o">.</span><span class="na">addAttribute</span><span class="o">(</span><span class="s">"topcate"</span><span class="o">,</span> <span class="s">"신상품"</span><span class="o">);</span>
        <span class="n">model</span><span class="o">.</span><span class="na">addAttribute</span><span class="o">(</span><span class="s">"topcate_num"</span><span class="o">,</span> <span class="mi">6</span><span class="o">);</span>
        <span class="n">model</span><span class="o">.</span><span class="na">addAttribute</span><span class="o">(</span><span class="s">"pageNum"</span><span class="o">,</span> <span class="n">pageNum</span><span class="o">);</span>
        <span class="n">model</span><span class="o">.</span><span class="na">addAttribute</span><span class="o">(</span><span class="s">"pm"</span><span class="o">,</span> <span class="n">pm</span><span class="o">);</span>
		
        <span class="k">return</span> <span class="s">"product/productList"</span><span class="o">;</span>
    <span class="o">}</span>
	
    <span class="nd">@RequestMapping</span><span class="o">(</span><span class="n">value</span> <span class="o">=</span> <span class="s">"/sale_list"</span><span class="o">,</span> <span class="n">method</span> <span class="o">=</span> <span class="nc">RequestMethod</span><span class="o">.</span><span class="na">GET</span><span class="o">)</span>
    <span class="kd">public</span> <span class="nc">String</span> <span class="nf">saleProductList</span><span class="o">(</span><span class="nd">@RequestParam</span><span class="o">(</span><span class="n">value</span> <span class="o">=</span> <span class="s">"pageNum"</span><span class="o">,</span> <span class="n">defaultValue</span> <span class="o">=</span> <span class="s">"1"</span><span class="o">)</span> <span class="kt">int</span> <span class="n">pageNum</span><span class="o">,</span> 
            <span class="nc">ProdCriteria</span> <span class="n">pc</span><span class="o">,</span> <span class="nc">Model</span> <span class="n">model</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">Exception</span> <span class="o">{</span>
        <span class="n">pc</span><span class="o">.</span><span class="na">setPage</span><span class="o">(</span><span class="n">pageNum</span><span class="o">);</span>
		
        <span class="kt">int</span> <span class="n">postCnt</span> <span class="o">=</span> <span class="n">service</span><span class="o">.</span><span class="na">getSaleCnt</span><span class="o">();</span>
		
        <span class="nc">ProdPageMaker</span> <span class="n">pm</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ProdPageMaker</span><span class="o">();</span>
        <span class="n">pm</span><span class="o">.</span><span class="na">setCri</span><span class="o">(</span><span class="n">pc</span><span class="o">);</span>
        <span class="n">pm</span><span class="o">.</span><span class="na">setTotalCnt</span><span class="o">(</span><span class="n">postCnt</span><span class="o">);</span>

        <span class="n">model</span><span class="o">.</span><span class="na">addAttribute</span><span class="o">(</span><span class="s">"productList"</span><span class="o">,</span> <span class="n">service</span><span class="o">.</span><span class="na">getSaleProductList</span><span class="o">(</span><span class="n">pc</span><span class="o">));</span>
        <span class="n">model</span><span class="o">.</span><span class="na">addAttribute</span><span class="o">(</span><span class="s">"postCnt"</span><span class="o">,</span> <span class="n">postCnt</span><span class="o">);</span>
        <span class="n">model</span><span class="o">.</span><span class="na">addAttribute</span><span class="o">(</span><span class="s">"topcate"</span><span class="o">,</span> <span class="s">"특가"</span><span class="o">);</span>
        <span class="n">model</span><span class="o">.</span><span class="na">addAttribute</span><span class="o">(</span><span class="s">"topcate_num"</span><span class="o">,</span> <span class="mi">7</span><span class="o">);</span>
        <span class="n">model</span><span class="o">.</span><span class="na">addAttribute</span><span class="o">(</span><span class="s">"pageNum"</span><span class="o">,</span> <span class="n">pageNum</span><span class="o">);</span>
        <span class="n">model</span><span class="o">.</span><span class="na">addAttribute</span><span class="o">(</span><span class="s">"pm"</span><span class="o">,</span> <span class="n">pm</span><span class="o">);</span>
		
        <span class="k">return</span> <span class="s">"product/productList"</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>이제 컨트롤러로 와서 아까 작업했던 것들을 연결시켜 준다.</li>
  <li>분류별 상품목록을 출력할 때와 다르게 신상품과 특가 상품 목록은 제목과 테이블 상에서의 대분류 번호가 고정되어 있기 때문에 인자값으로 고정된 값을 넣어주었다. 나중에 대분류와 소분류가 더 추가되어서 확장되었을 경우를 생각해보면 지금처럼 대분류 번호인 <code class="language-plaintext highlighter-rouge">topcate_num</code> 값 자체를 지정해 줄 필요가 없이 제거해도 될 거 같기도 하다… 저 번호를 활용해서 테이블에서 데이터를 불러오는 것도 아니고… 나중에 수정 해야겠다.</li>
</ul>

<h2 id="productlistjsp">productList.jsp</h2>
<ul>
  <li>처음에 페이지 템플릿을 만들던 당시에는 신상품과 특가 상품 목록 페이지도 따로 만들었는데 이번에 DB 연결 작업을 하며 생각해보니 저 페이지들을 굳이 따로 만들 필요가 없었다. 기존에 상품 분류별로 출력하던 페이지에서 제어조건만 조금 추가해서 신상품과 특가 상품들도 출력하면 되는 것이었다. 페이지의 제목 부분만 다르지 상품 목록을 보여주고, 상품을 클릭하면 상세 페이지로 이동하는 로직은 다 같기 때문에…</li>
  <li>그래서 분류별 상품을 출력할 때 썼던 <code class="language-plaintext highlighter-rouge">productList.jsp</code> 파일을 재활용했다.</li>
</ul>

<div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"categoryBox"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;h3</span> <span class="na">class=</span><span class="s">"title"</span><span class="nt">&gt;</span>${topcate }<span class="nt">&lt;/h3&gt;</span>
    <span class="nt">&lt;c:if </span><span class="na">test=</span><span class="s">"</span><span class="si">${</span><span class="n">topcate_num</span> <span class="o">&lt;=</span> <span class="mi">5</span> <span class="si">}</span><span class="s">"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;ul</span> <span class="na">class=</span><span class="s">"categoryList"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"hidden"</span> <span class="na">id=</span><span class="s">"dcateNum"</span> <span class="na">value=</span><span class="s">"${dcate_num }"</span><span class="nt">&gt;</span> 
            <span class="nt">&lt;li&gt;&lt;a</span> <span class="na">href=</span><span class="s">"/product/product_list?cateStart=${cateStart }&amp;cateEnd=${cateEnd}&amp;topcate_num=${topcate_num}&amp;pageNum=${pageNum}&amp;dcate_num=0"</span> 
                    <span class="na">class=</span><span class="s">"category"</span> <span class="na">id=</span><span class="s">"category0"</span> <span class="na">style=</span><span class="s">"color: black;"</span> 
                    <span class="na">onclick=</span><span class="s">"changeSort(0, 0, ${fn:length(dcateList) });"</span><span class="nt">&gt;</span> 전체보기<span class="nt">&lt;/a&gt;</span>
            <span class="nt">&lt;c:forEach </span><span class="na">var=</span><span class="s">"dcate"</span><span class="na"> begin=</span><span class="s">"0"</span><span class="na"> end=</span><span class="s">"</span><span class="si">${</span><span class="n">cateEnd</span><span class="o">-</span><span class="n">cateStart</span> <span class="si">}</span><span class="s">"</span><span class="na"> step=</span><span class="s">"1"</span><span class="na"> varStatus=</span><span class="s">"it"</span><span class="nt">&gt;</span>
                <span class="nt">&lt;li&gt;&lt;a</span> <span class="na">href=</span><span class="s">"/product/product_list?cateStart=${cateStart }&amp;cateEnd=${cateEnd}&amp;topcate_num=${topcate_num}&amp;pageNum=1&amp;dcate_num=${cateStart+dcate}"</span> 
                    <span class="na">class=</span><span class="s">"category"</span> <span class="na">id=</span><span class="s">"category${cateStart+dcate }"</span> <span class="na">style=</span><span class="s">"color: black;"</span> 
                    <span class="na">onclick=</span><span class="s">"changeSort(${cateStart+dcate }, ${cateStart }, ${fn:length(dcateList) });"</span><span class="nt">&gt;</span> ${dcateList[it.index] }<span class="nt">&lt;/a&gt;&lt;/li&gt;</span>
            <span class="nt">&lt;/c:forEach&gt;</span>
        <span class="nt">&lt;/ul&gt;</span>
    <span class="nt">&lt;/c:if&gt;</span>
<span class="nt">&lt;/div&gt;</span>
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">JSTL</code> 표현식을 사용해 페이지 종류에 따라 출력해야 할 부분을 제어해 주었다. 상단의 소분류는 분류별로 상품을 보는 페이지에서만 출력하고 신상품과 특가 상품 페이지에서는 필요하지 않아서 출력하지 않게 했다.</li>
</ul>

<div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"pi-text"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"/product/product_detail?prod_num=${vo.prod_num }"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;h5&gt;</span>${vo.prod_name }<span class="nt">&lt;/h5&gt;</span>
    <span class="nt">&lt;/a&gt;</span>
    <span class="nt">&lt;c:choose&gt;</span>
        <span class="nt">&lt;c:when </span><span class="na">test=</span><span class="s">"</span><span class="si">${</span><span class="n">vo</span><span class="o">.</span><span class="na">prod_discntrate</span> <span class="n">eq</span> <span class="mi">0</span><span class="si">}</span><span class="s">"</span><span class="nt">&gt;</span>
            <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"product-price"</span><span class="nt">&gt;</span>
                <span class="nt">&lt;fmt:formatNumber </span><span class="na">value=</span><span class="s">"</span><span class="si">${</span><span class="n">vo</span><span class="o">.</span><span class="na">prod_price</span><span class="si">}</span><span class="s">"</span><span class="nt">/&gt;</span>원
            <span class="nt">&lt;/div&gt;</span>
        <span class="nt">&lt;/c:when&gt;</span>
        <span class="nt">&lt;c:otherwise&gt;</span>
            <span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">"product-price discountedRate"</span><span class="nt">&gt;</span>${vo.prod_discntrate}%<span class="nt">&lt;/span&gt;</span>
            <span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">"product-price"</span><span class="nt">&gt;</span>
                <span class="nt">&lt;c:set </span><span class="na">var=</span><span class="s">"discnted"</span><span class="na"> value=</span><span class="s">"</span><span class="si">${</span><span class="n">vo</span><span class="o">.</span><span class="na">prod_price</span><span class="o">*(</span><span class="mi">100</span><span class="o">-</span><span class="n">vo</span><span class="o">.</span><span class="na">prod_discntrate</span><span class="o">)/</span><span class="mi">100</span><span class="si">}</span><span class="s">"</span><span class="nt">/&gt;</span>
                <span class="nt">&lt;fmt:formatNumber </span><span class="na">value=</span><span class="s">"</span><span class="si">${</span><span class="n">discnted</span><span class="o">+((</span><span class="n">discnted</span><span class="o">%</span><span class="mi">10</span><span class="o">&gt;</span><span class="mi">5</span><span class="o">)?(</span><span class="mi">10</span><span class="o">-(</span><span class="n">discnted</span><span class="o">%</span><span class="mi">10</span><span class="o">))%</span><span class="mi">10</span><span class="o">:-(</span><span class="n">discnted</span><span class="o">%</span><span class="mi">10</span><span class="o">))</span><span class="si">}</span><span class="s">"</span><span class="na"> type=</span><span class="s">"number"</span><span class="nt">/&gt;</span>원<span class="nt">&lt;br&gt;</span>
            <span class="nt">&lt;/span&gt;</span>
            <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"product-price"</span><span class="nt">&gt;</span>
                <span class="nt">&lt;span&gt;&lt;fmt:formatNumber </span><span class="na">value=</span><span class="s">"</span><span class="si">${</span><span class="n">vo</span><span class="o">.</span><span class="na">prod_price</span><span class="si">}</span><span class="s">"</span><span class="na"> type=</span><span class="s">"number"</span><span class="nt">/&gt;</span>원<span class="nt">&lt;/span&gt;</span>
            <span class="nt">&lt;/div&gt;</span>
        <span class="nt">&lt;/c:otherwise&gt;</span>
    <span class="nt">&lt;/c:choose&gt;</span>
<span class="nt">&lt;/div&gt;</span>
</code></pre></div></div>

<ul>
  <li>만약 할인하는 상품이면 십의 자리에서 반올림한 가격을 출력하도록 했다.</li>
  <li>그리고 <code class="language-plaintext highlighter-rouge">JSTL</code>의 숫자 포맷 라이브러리를 사용해서 통화에 자동으로 <code class="language-plaintext highlighter-rouge">,</code>를 찍도록 했다. 처음엔 이걸 까먹고 있어서 자바스크립트에서 정규식을 사용하는 방식으로 구현했는데… <code class="language-plaintext highlighter-rouge">JSTL</code>을 사용하는 것이 코드상으로 깔끔하고 가독성도 좋아서 통화 출력 부분은 모두 이렇게 수정했다.</li>
</ul>

<div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"row"</span> <span class="na">id=</span><span class="s">"pagediv"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"hidden"</span> <span class="na">value=</span><span class="s">"${pageNum }"</span> <span class="na">id=</span><span class="s">"curPage"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"col-lg-12 text-center"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;c:if </span><span class="na">test=</span><span class="s">"</span><span class="si">${</span><span class="n">pm</span><span class="o">.</span><span class="na">prev</span> <span class="si">}</span><span class="s">"</span><span class="nt">&gt;</span>
            <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"#"</span> <span class="na">class=</span><span class="s">"arrow_carrot-left_alt pagingBtn"</span> <span class="na">id=</span><span class="s">"prev"</span><span class="nt">&gt;&lt;/a&gt;</span> 
        <span class="nt">&lt;/c:if&gt;</span>
						
        <span class="nt">&lt;c:forEach </span><span class="na">var=</span><span class="s">"block"</span><span class="na"> varStatus=</span><span class="s">"it"</span><span class="na"> begin=</span><span class="s">"</span><span class="si">${</span><span class="n">pm</span><span class="o">.</span><span class="na">startPage</span> <span class="si">}</span><span class="s">"</span><span class="na"> end=</span><span class="s">"</span><span class="si">${</span><span class="n">pm</span><span class="o">.</span><span class="na">endPage</span> <span class="si">}</span><span class="s">"</span><span class="na"> step=</span><span class="s">"1"</span><span class="nt">&gt;</span>
            <span class="nt">&lt;span&gt;</span>
                <span class="nt">&lt;c:choose&gt;</span>
                    <span class="nt">&lt;c:when </span><span class="na">test=</span><span class="s">"</span><span class="si">${</span><span class="n">topcate_num</span> <span class="o">&lt;=</span> <span class="mi">5</span> <span class="si">}</span><span class="s">"</span><span class="nt">&gt;</span>
                        <span class="c">&lt;!----&gt;</span> <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"/product/product_list?cateStart=${cateStart }&amp;cateEnd=${cateEnd }&amp;topcate_num=${topcate_num }&amp;pageNum=${it.index}&amp;dcate_num=${dcate_num}"</span> 
                            <span class="na">class=</span><span class="s">"pagingBtn"</span> <span class="na">id=</span><span class="s">"page${it.index }"</span> <span class="na">style=</span><span class="s">"color: black;"</span>
                            <span class="na">onclick=</span><span class="s">"changePageNum(${it.index }, ${pm.endPage });"</span><span class="nt">&gt;</span>${it.index } <span class="c">&lt;!----&gt;</span><span class="nt">&lt;/a&gt;</span>
                    <span class="nt">&lt;/c:when&gt;</span>
                    <span class="nt">&lt;c:when </span><span class="na">test=</span><span class="s">"</span><span class="si">${</span><span class="n">topcate_num</span> <span class="o">&gt;</span> <span class="mi">5</span> <span class="si">}</span><span class="s">"</span><span class="nt">&gt;</span>
                        <span class="c">&lt;!----&gt;</span> <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"/product/new_list?pageNum=${it.index}"</span> 
                        <span class="na">class=</span><span class="s">"pagingBtn"</span> <span class="na">id=</span><span class="s">"page${it.index }"</span> <span class="na">style=</span><span class="s">"color: black;"</span>
                        <span class="na">onclick=</span><span class="s">"changePageNum(${it.index }, ${pm.endPage });"</span><span class="nt">&gt;</span>${it.index } <span class="c">&lt;!----&gt;</span><span class="nt">&lt;/a&gt;</span>
                    <span class="nt">&lt;/c:when&gt;</span>
                    <span class="nt">&lt;c:otherwise&gt;</span>
                        <span class="c">&lt;!----&gt;</span> <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"/product/sale_list?pageNum=${it.index}"</span> 
                                <span class="na">class=</span><span class="s">"pagingBtn"</span> <span class="na">id=</span><span class="s">"page${it.index }"</span> <span class="na">style=</span><span class="s">"color: black;"</span>
                                <span class="na">onclick=</span><span class="s">"changePageNum(${it.index }, ${pm.endPage });"</span><span class="nt">&gt;</span>${it.index } <span class="c">&lt;!----&gt;</span><span class="nt">&lt;/a&gt;</span>
                    <span class="nt">&lt;/c:otherwise&gt;</span>
                <span class="nt">&lt;/c:choose&gt;</span>
            <span class="nt">&lt;/span&gt;</span> 
        <span class="nt">&lt;/c:forEach&gt;</span>
						
        <span class="nt">&lt;c:if </span><span class="na">test=</span><span class="s">"</span><span class="si">${</span><span class="n">pm</span><span class="o">.</span><span class="na">next</span> <span class="si">}</span><span class="s">"</span><span class="nt">&gt;</span>
            <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"#"</span> <span class="na">class=</span><span class="s">"arrow_carrot-right_alt pagingBtn"</span> <span class="na">id=</span><span class="s">"next"</span><span class="nt">&gt;&lt;/a&gt;</span> 
        <span class="nt">&lt;/c:if&gt;</span>
    <span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/div&gt;</span>
</code></pre></div></div>

<ul>
  <li>하단 페이지 블럭 부분에도 각 페이지 종류에 따라 다른 주소를 매핑해주도록 제어했다.</li>
  <li>이렇게 페이지 재활용 끝!! 😄<br /><br /><br /></li>
</ul>

<h1 id="구현하며-했던-고민">구현하며 했던 고민</h1>
<ul>
  <li>위에서도 기술했다시피 신상품과 특가상품 목록 페이지에서 상품 상세페이지로 이동하는 로직은 다 같은데 굳이 페이지를 나눠야 할까? 였다. 페이지들을 따로 만들지 않고 페이지 하나를 재활용해서 구현하게 된 데에는 상품 상세페이지로 이동하는 매핑주소 작업을 새로 해주기 귀찮았던 것이 가장 컸다.</li>
  <li>역시 프로그래밍은 귀찮음이 커야 효율적으로 짤 수 있다는 말이 맞는 말이란 생각이 든다…😅 <br /><br /><br /></li>
</ul>

<h1 id="마감까지">마감까지</h1>
<ul>
  <li><code class="language-plaintext highlighter-rouge">D-10</code></li>
</ul>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="Uno mas" /><category term="Project" /><category term="UnoMas" /><category term="Log" /><summary type="html"><![CDATA[작성일 : 2022.05.10 작성자 : 황유진]]></summary></entry><entry><title type="html">에러해결 Log) (Spring framework) Mapped Statements collection does not contain value for ~</title><link href="http://localhost:4000/errorlog/warning-log-08/" rel="alternate" type="text/html" title="에러해결 Log) (Spring framework) Mapped Statements collection does not contain value for ~" /><published>2022-05-09T00:00:00+09:00</published><updated>2022-05-09T00:00:00+09:00</updated><id>http://localhost:4000/errorlog/warning-log-08</id><content type="html" xml:base="http://localhost:4000/errorlog/warning-log-08/"><![CDATA[<h1 id="사용환경">사용환경</h1>
<ul>
  <li>MacBook Air (M1, 2020) 16GB</li>
  <li>JDK 8</li>
  <li>Spring Tool Suite 4.14.0</li>
  <li>tomcat 8.5<br /><br /><br /></li>
</ul>

<h1 id="에러의-발생">에러의 발생</h1>

<p align="center"><img src="../../assets/images/mybatisError1.png" width="800" /></p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">MyBatis</code> 매퍼에서 새로운 쿼리문을 만들고 <code class="language-plaintext highlighter-rouge">DAO</code> 테스트를 진행해보려 했는데 마이바티스 쪽에서 에러가 있다고 나왔다. 그 동안 잘만 됐는데 갑자기 왜 안 됄까… 구글링을 해 보았다.<br /><br /><br /></li>
</ul>

<h1 id="문제-해결">문제 해결</h1>

<ul>
  <li>구글링 결과 매퍼에서 쓴 <code class="language-plaintext highlighter-rouge">id</code>값과 <code class="language-plaintext highlighter-rouge">DAO</code> 클래스 내의 메서드에서 부르는 <code class="language-plaintext highlighter-rouge">id</code>값이 일치하지 않았던 것이었다.</li>
</ul>

<p align="center"><img src="../../assets/images/mybatisError2.png" width="600" /></p>

<ul>
  <li>매퍼의 <code class="language-plaintext highlighter-rouge">id</code>값은 <code class="language-plaintext highlighter-rouge">getSaleProdCnt</code>인데</li>
</ul>

<p align="center"><img src="../../assets/images/mybatisError3.png" width="700" /></p>

<ul>
  <li>메서드에서 호출하는 부분에서는 중간을 빼먹고 부르고 있었다 ㅠ.ㅠ</li>
  <li>요즘 <code class="language-plaintext highlighter-rouge">tabnine</code> 자동완성 기능을 많이 쓰고 있는데 저 과정에서 오타가 난 것 같다.</li>
</ul>

<p align="center"><img src="../../assets/images/mybatisError4.png" width="700" /></p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">id</code>를 맞춰주니까 잘 된다…<br /><br /><br /></li>
</ul>

<h1 id="참고">참고</h1>
<ul>
  <li><a href="https://manli000.wordpress.com/2016/01/02/mapped-statements-collection-does-not-contain-value-for/">Mapped Statements collection does not contain value for ***</a></li>
</ul>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="ErrorLog" /><category term="Error" /><category term="Solve" /><category term="Log" /><summary type="html"><![CDATA[사용환경 MacBook Air (M1, 2020) 16GB JDK 8 Spring Tool Suite 4.14.0 tomcat 8.5]]></summary></entry></feed>