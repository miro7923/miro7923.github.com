<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2022-02-12T00:49:14+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Yujin Dev Log</title><subtitle>개발 공부하는 블로그</subtitle><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><entry><title type="html">JDBC</title><link href="http://localhost:4000/jsp/jdbc/" rel="alternate" type="text/html" title="JDBC" /><published>2022-02-12T00:00:00+09:00</published><updated>2022-02-12T00:00:00+09:00</updated><id>http://localhost:4000/jsp/jdbc</id><content type="html" xml:base="http://localhost:4000/jsp/jdbc/"><![CDATA[<h1 id="-jdbcjava-database-connectivity란">👀 JDBC(Java Database Connectivity)란?</h1>
<ul>
  <li><code class="language-plaintext highlighter-rouge">Java</code>랑 <code class="language-plaintext highlighter-rouge">DBMS</code>를 연결시켜주는 <code class="language-plaintext highlighter-rouge">API</code></li>
  <li>즉 자바랑 DB를 연결시켜서 사용할 수 있게 해주는 기능들이 모여있는 라이브러리라 할 수 있다.</li>
  <li>데이터베이스에 데이터를 삽입, 수정, 삭제할 때 <code class="language-plaintext highlighter-rouge">SQL</code> 프롬프트에서 <code class="language-plaintext highlighter-rouge">SQL</code>문을 사용하지 않아도 자바 프로그램에서 <code class="language-plaintext highlighter-rouge">SQL</code>문을 사용하여 데이터베이스에 데이터를 추가하고 삭제하는 작업을 할 수 있게 하는 <code class="language-plaintext highlighter-rouge">API</code>이다.</li>
  <li><code class="language-plaintext highlighter-rouge">JDBC</code>는 <code class="language-plaintext highlighter-rouge">DBMS</code> 종류에 상관없이 독립적으로 사용 가능하다.
    <ul>
      <li>여러 언어에서 작동하는 방법이 전반적으로 같다고 할 수 있다.
<br /><br /></li>
    </ul>
  </li>
</ul>

<h2 id="jdbc-드라이버-설치">JDBC 드라이버 설치</h2>
<ul>
  <li><code class="language-plaintext highlighter-rouge">mysql</code> 홈페이지에서 <code class="language-plaintext highlighter-rouge">Connect J</code>를 다운받는다.(현재 최신버전인 8.0.28)</li>
  <li>윈도우라면 <code class="language-plaintext highlighter-rouge">.zip</code> 파일을 받으면 되고 맥이라면 <code class="language-plaintext highlighter-rouge">.tar</code> 파일을 받는다.</li>
  <li>압축을 풀면 <code class="language-plaintext highlighter-rouge">mysql-connector-java-8.0.28.jar</code>란 파일이 있다.</li>
  <li>저걸 <code class="language-plaintext highlighter-rouge">JDBC</code>를 사용하고자 하는 (이클립스)프로젝트의 <code class="language-plaintext highlighter-rouge">WEB-INF/lib</code> 폴더에 넣는다.(경로 다르면 안 됨!! 무조건 저기에 넣어야 함)</li>
  <li>그러면 설치 끝!
<br /><br /></li>
</ul>

<h2 id="jdbc-연동">JDBC 연동</h2>
<h3 id="1-드라이버-로드하드디스크에-있는-프로그램을-메모리로-불러오기">1. 드라이버 로드(하드디스크에 있는 프로그램을 메모리로 불러오기)</h3>
<ul>
  <li>아까 설치한 <code class="language-plaintext highlighter-rouge">JDBC</code> 드라이버를 불러올 것이다.
    <div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Class.forName("com.mysql.cj.jdbc.Driver"); // static method라서 객체 생성 없이 바로 호출할 수 있음
</code></pre></div>    </div>
  </li>
  <li>이렇게 입력하면 드라이버를 로드할 수 있다.</li>
  <li>MySQL 홈페이지 가서 Documentation 페이지 - Connector/J 8.0 Developer Guide - 6. ConnectJ reference - 6.1 Driver/Datasource Class Name 가면 드라이버를 로드할 때 무슨 클래스명을 입력해야 하는지 찾을 수 있다.
    <ul>
      <li>그 외에도 레퍼런스가 필요하면 참고하자.</li>
    </ul>
  </li>
  <li>만약 설치를 안 했다면 실행시 참고할 드라이버가 없어서 <code class="language-plaintext highlighter-rouge">HTTP500</code> 에러가 뜬다.<br /><br /></li>
</ul>

<h3 id="2-db-연결">2. DB 연결</h3>
<ul>
  <li><code class="language-plaintext highlighter-rouge">DriverManager.getConnection("디비주소", "디비아이디", "디비비밀번호");</code></li>
  <li><code class="language-plaintext highlighter-rouge">DriverManager</code> 객체를 이용해 <code class="language-plaintext highlighter-rouge">DB</code>와 드라이버를 연결한다.</li>
</ul>

<div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/jspdb", "root", "1234");
</code></pre></div></div>

<ul>
  <li>이런 식으로 <code class="language-plaintext highlighter-rouge">DB</code>의 주소와 아이디, 비밀번호를 입력한 뒤 연결 객체 정보를 <code class="language-plaintext highlighter-rouge">Connection</code>에 저장한다.</li>
  <li>이러면 <code class="language-plaintext highlighter-rouge">mysql</code>과 연결된 것이다. 이제 <code class="language-plaintext highlighter-rouge">jsp</code> 파일에서 <code class="language-plaintext highlighter-rouge">SQL</code>문을 작성해 데이터베이스를 관리할 수 있다.</li>
</ul>

<h2 id="jdbc-사용-예제-1-사용자가-홈페이지에-회원가입-하는-상황">JDBC 사용 예제 1) 사용자가 홈페이지에 회원가입 하는 상황</h2>

<h3 id="1-insertformjsp라는-이름으로-간단한-회원가입-페이지를-만든다">1. <code class="language-plaintext highlighter-rouge">insertForm.jsp</code>라는 이름으로 간단한 회원가입 페이지를 만든다.</h3>
<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;form</span> <span class="na">action=</span><span class="s">"insertPro.jsp"</span> <span class="na">method=</span><span class="s">"post"</span><span class="nt">&gt;</span>
    아이디 : <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"text"</span> <span class="na">name=</span><span class="s">"id"</span><span class="nt">&gt;&lt;br&gt;</span>
    비밀번호 : <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"password"</span> <span class="na">name=</span><span class="s">"pass"</span><span class="nt">&gt;&lt;br&gt;</span>
    이름 : <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"text"</span> <span class="na">name=</span><span class="s">"name"</span><span class="nt">&gt;&lt;br&gt;</span>
    <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"submit"</span> <span class="na">value=</span><span class="s">"전송하기"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;/form&gt;</span>
</code></pre></div></div>

<ul>
  <li>여기서 사용자가 정보를 입력하고 <code class="language-plaintext highlighter-rouge">submit</code>버튼을 클릭하면 <code class="language-plaintext highlighter-rouge">insertPro.jsp</code> 페이지로 전달된다.<br /><br /></li>
</ul>

<h3 id="2-insertprojsp라는-이름으로-회원가입-정보를-받아서-db에-사용자-정보를-추가하는-페이지를-만든다">2. <code class="language-plaintext highlighter-rouge">insertPro.jsp</code>라는 이름으로 회원가입 정보를 받아서 <code class="language-plaintext highlighter-rouge">DB</code>에 사용자 정보를 추가하는 페이지를 만든다.</h3>
<div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="nt">&lt;%</span> <span class="c1">// 스크립틀릿 사용</span>
    <span class="c1">// 0단계 : 드라이버 설치 - 완료됐으니 로드 단계로 넘어간다.</span>
    <span class="c1">// 1단계 : 드라이버 로드</span>
    <span class="nc">Class</span><span class="o">.</span><span class="na">forName</span><span class="o">(</span><span class="s">"com.mysql.cj.jdbc.Driver"</span><span class="o">);</span>
  
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"드라이버 로드 성공!"</span><span class="o">);</span>
    
    <span class="c1">// 2단계 : 디비 연결 (디비 바꾸려면 jdbc:mysql://localhost:3306/뒤에 디비 이름만 바꿔주면 됨)</span>
    <span class="nc">Connection</span> <span class="n">con</span> <span class="o">=</span> <span class="nc">DriverManager</span><span class="o">.</span><span class="na">getConnection</span><span class="o">(</span><span class="s">"jdbc:mysql://localhost:3306/jspdb"</span><span class="o">,</span> <span class="s">"root"</span><span class="o">,</span> <span class="s">"1234"</span><span class="o">);</span>
    
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"디비 연결 성공!"</span><span class="o">);</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"연결정보 : "</span> <span class="o">+</span> <span class="n">con</span><span class="o">);</span>
    
    <span class="c1">// 3단계 : SQL 구문 생성 &amp; stmt(statement) 객체 생성</span>
    <span class="c1">// String sql = "insert into itwill_member (id, pass, name) values('id', 'pw', 'name')";</span>
    
    <span class="c1">// secure 코딩 예시) values에 담을 데이터의 개수만큼 ?를 넣는다.</span>
    <span class="nc">String</span> <span class="n">sql</span> <span class="o">=</span> <span class="s">"insert into itwill_member (id, pass, name) values(?, ?, ?)"</span><span class="o">;</span>
    
    <span class="c1">// stmt 객체 만들기 : sql 구문을 실행하는 객체 	   </span>
    <span class="c1">// Statement stmt = con.createStatement(); // 하지만 이렇게 쓰려면 valuse 괄호 안에 따옴표를 넘 많이 써야해서 안 쓸 예정</span>
                            <span class="c1">// 그리고 따옴표 안에 정보를 노출해서 써야해서 보안적으로 좋지 않다.</span>
    <span class="c1">// Statement랑 PreparedStatement 객체 둘 중 하나만 쓸 수 있음</span>
    
    <span class="c1">// pstmt 객체 : sql 구문을 실행하는 객체</span>
    <span class="nc">PreparedStatement</span> <span class="n">pstmt</span> <span class="o">=</span> <span class="n">con</span><span class="o">.</span><span class="na">prepareStatement</span><span class="o">(</span><span class="n">sql</span><span class="o">);</span> <span class="c1">// 객체를 만들 때 쿼리 정보를 가져가서 사전준비함</span>
    
    <span class="c1">// ??? 값 sql 구문에 채워넣기</span>
    <span class="c1">// pstmt.setXXXXXX(물음표의 위치, 실제 들어갈 값);</span>
    <span class="c1">// =</span><span class="err">&gt;</span> <span class="no">XXXXX</span> <span class="o">:</span> <span class="n">컬럼의</span> <span class="n">데이터타입</span><span class="o">(</span><span class="kt">int</span><span class="o">,</span> <span class="kt">double</span><span class="o">,</span> <span class="n">string</span><span class="o">,</span> <span class="o">...)</span><span class="n">에</span> <span class="n">따라</span> <span class="n">변경</span>
    <span class="c1">// * ? 개수와 동일한 구문을 수행해야 함 - ?가 3개면 채우는 구문 3개 있어야 함</span>
    <span class="c1">// null 넣고 싶으면 쿼리문(String sql) 안에 직접 넣으면 됨</span>
    <span class="n">pstmt</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="n">id</span><span class="o">);</span> <span class="c1">// 뜻 : 1번 물음표에 id에 해당하는 값을 넣는다.</span>
    <span class="n">pstmt</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="mi">2</span><span class="o">,</span> <span class="n">pass</span><span class="o">);</span>
    <span class="n">pstmt</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="mi">3</span><span class="o">,</span> <span class="n">name</span><span class="o">);</span>
    
    <span class="c1">// 4단계 : SQL 구문 실행</span>
    <span class="c1">// stmt.executeUpdate(sql); // 얘는 미리 준비 안해서 파라미터로 넣어줌</span>
    <span class="n">pstmt</span><span class="o">.</span><span class="na">executeUpdate</span><span class="o">();</span> <span class="c1">// 그리고 바로 실행</span>
    
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"insert 동작 완료!"</span><span class="o">);</span>
  <span class="nt">%&gt;</span>
</code></pre></div></div>

<ul>
  <li>위 과정을 완료하면 터미널이나 워크벤치에서 직접 <code class="language-plaintext highlighter-rouge">SQL</code>문을 작성하지 않았는데도 <code class="language-plaintext highlighter-rouge">DB</code>에 데이터가 삽입된다!<br /><br /></li>
</ul>

<h3 id="️-페이지를-실행할-땐-formjsp-페이지에서-한다">❗️ 페이지를 실행할 땐 <code class="language-plaintext highlighter-rouge">~Form.jsp</code> 페이지에서 한다.</h3>
<ul>
  <li>사용자가 보는 페이지는 <code class="language-plaintext highlighter-rouge">Form</code> 페이지이지 처리를 하는 <code class="language-plaintext highlighter-rouge">Pro</code> 페이지를 사용자가 볼 수 없고 그럴 필요도 없기 때문이다.</li>
  <li><code class="language-plaintext highlighter-rouge">Pro</code> 페이지는 개발과정에서 개발자만 보는 페이지이다.</li>
</ul>

<h2 id="jdbc-사용-예제-2-회원-정보를-수정하는-상황">JDBC 사용 예제 2) 회원 정보를 수정하는 상황</h2>
<h3 id="1-updateformjsp라는-이름으로-수정할-정보를-입력받을-간단한-페이지를-하나-만든다">1. <code class="language-plaintext highlighter-rouge">updateForm.jsp</code>라는 이름으로 수정할 정보를 입력받을 간단한 페이지를 하나 만든다.</h3>
<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="nt">&lt;form</span> <span class="na">action=</span><span class="s">"updatePro.jsp"</span> <span class="na">method=</span><span class="s">"post"</span><span class="nt">&gt;</span>
    아이디 : <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"text"</span> <span class="na">name=</span><span class="s">"id"</span><span class="nt">&gt;&lt;br&gt;</span>
    비밀번호 : <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"password"</span> <span class="na">name=</span><span class="s">"pass"</span><span class="nt">&gt;&lt;br&gt;</span>
    수정할 이름 : <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"text"</span> <span class="na">name=</span><span class="s">"update_name"</span><span class="nt">&gt;&lt;br&gt;</span>
    <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"submit"</span> <span class="na">value=</span><span class="s">"전송하기"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;/form&gt;</span>
</code></pre></div></div>

<h3 id="2-updateprojsp라는-이름으로-전송받은-정보를-db에-삽입할-페이지를-만든다">2. <code class="language-plaintext highlighter-rouge">updatePro.jsp</code>라는 이름으로 전송받은 정보를 <code class="language-plaintext highlighter-rouge">DB</code>에 삽입할 페이지를 만든다.</h3>
<div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="nt">&lt;%</span>
    <span class="c1">// 그냥 받으면 한글이 깨지기 때문에 꼭 한글처리 후 데이터 받기를 시작한다.</span>
    <span class="n">request</span><span class="o">.</span><span class="na">setCharacterEncoding</span><span class="o">(</span><span class="s">"UTF-8"</span><span class="o">);</span>
    
    <span class="c1">// 전달된 파라미터 저장</span>
    <span class="nc">String</span> <span class="n">id</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"id"</span><span class="o">);</span>
    <span class="nc">String</span> <span class="n">pass</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"pass"</span><span class="o">);</span>
    <span class="nc">String</span> <span class="n">uName</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"update_name"</span><span class="o">);</span>
  <span class="nt">%&gt;</span>
  
  아이디 : <span class="nt">&lt;%=</span><span class="n">id</span> <span class="nt">%&gt;&lt;br&gt;</span>
  비밀번호 : <span class="nt">&lt;%=</span><span class="n">pass</span> <span class="nt">%&gt;&lt;br&gt;</span>
  수정할 이름 : <span class="nt">&lt;%=</span><span class="n">uName</span> <span class="nt">%&gt;&lt;br&gt;</span>
  <span class="nt">&lt;hr&gt;</span>
  
  <span class="nt">&lt;%</span>
    <span class="kd">final</span> <span class="nc">String</span> <span class="no">DRIVER</span> <span class="o">=</span> <span class="s">"com.mysql.cj.jdbc.Driver"</span><span class="o">;</span>
    <span class="kd">final</span> <span class="nc">String</span> <span class="no">DBURL</span> <span class="o">=</span> <span class="s">"jdbc:mysql://localhost:3306/jspdb"</span><span class="o">;</span>
    <span class="kd">final</span> <span class="nc">String</span> <span class="no">DBID</span> <span class="o">=</span> <span class="s">"root"</span><span class="o">;</span>
    <span class="kd">final</span> <span class="nc">String</span> <span class="no">DBPASS</span> <span class="o">=</span> <span class="s">"1234"</span><span class="o">;</span>
  <span class="nt">%&gt;</span>
  
  <span class="nt">&lt;h2&gt;</span> 1. 드라이버 로드 <span class="nt">&lt;/h2&gt;</span>
  <span class="nt">&lt;%</span>
    <span class="nc">Class</span><span class="o">.</span><span class="na">forName</span><span class="o">(</span><span class="no">DRIVER</span><span class="o">);</span> <span class="c1">// Class는 java.lang 패키지에 들어서 임포트 없이 쓸 수 있음.</span>
    
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"드라이버 로드 성공!"</span><span class="o">);</span>
  <span class="nt">%&gt;</span>
  
  <span class="nt">&lt;h2&gt;</span> 2. 디비 연결 <span class="nt">&lt;/h2&gt;</span>
  <span class="nt">&lt;%</span>
    <span class="nc">Connection</span> <span class="n">con</span> <span class="o">=</span> <span class="nc">DriverManager</span><span class="o">.</span><span class="na">getConnection</span><span class="o">(</span><span class="no">DBURL</span><span class="o">,</span> <span class="no">DBID</span><span class="o">,</span> <span class="no">DBPASS</span><span class="o">);</span>
    
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"디비연결 성공!"</span><span class="o">);</span>
  <span class="nt">%&gt;</span>
  
  <span class="nt">&lt;h2&gt;</span> 3. sql 작성 <span class="err">&amp;</span> pstmt 생성 <span class="nt">&lt;/h2&gt;</span>
  <span class="nt">&lt;%</span>
    <span class="nc">String</span> <span class="n">sql</span> <span class="o">=</span> <span class="s">"update itwill_member set name=? where id=? and pass=?"</span><span class="o">;</span> <span class="c1">// ?는 mysql 문법이 아니고 jsp 코드에서만 쓸 수 있는 문법</span>
    
    <span class="nc">PreparedStatement</span> <span class="n">pstmt</span> <span class="o">=</span> <span class="n">con</span><span class="o">.</span><span class="na">prepareStatement</span><span class="o">(</span><span class="n">sql</span><span class="o">);</span> <span class="c1">// 인터페이스를 통해 객체를 생성하지 않고 만들어진 정보를 전달</span>
    
    <span class="c1">// ? 채우기</span>
    <span class="n">pstmt</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="n">uName</span><span class="o">);</span>
    <span class="n">pstmt</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="mi">2</span><span class="o">,</span> <span class="n">id</span><span class="o">);</span>
    <span class="n">pstmt</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="mi">3</span><span class="o">,</span> <span class="n">pass</span><span class="o">);</span>
  <span class="nt">%&gt;</span>
  
  <span class="nt">&lt;h2&gt;</span> 4. sql 실행 <span class="nt">&lt;/h2&gt;</span>
  <span class="nt">&lt;%</span>
    <span class="n">pstmt</span><span class="o">.</span><span class="na">executeUpdate</span><span class="o">();</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"회원정보 수정 완료!"</span><span class="o">);</span>
  <span class="nt">%&gt;</span>
</code></pre></div></div>

<h2 id="jdbc-사용-예제-3-사용자-정보를-삭제하는-상황">JDBC 사용 예제 3) 사용자 정보를 삭제하는 상황</h2>
<h3 id="1-deleteformjsp라는-이름으로-삭제할-사용자의-정보를-입력받는-페이지를-만든다">1. <code class="language-plaintext highlighter-rouge">deleteForm.jsp</code>라는 이름으로 삭제할 사용자의 정보를 입력받는 페이지를 만든다.</h3>
<div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="nt">&lt;form</span> <span class="na">action=</span><span class="s">"deletePro.jsp"</span> <span class="na">method=</span><span class="s">"post"</span><span class="nt">&gt;</span>
    아이디 : <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"text"</span> <span class="na">name=</span><span class="s">"id"</span><span class="nt">&gt;&lt;br&gt;</span>
    비밀번호 : <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"password"</span> <span class="na">name=</span><span class="s">"pass"</span><span class="nt">&gt;&lt;br&gt;</span>
    <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"submit"</span> <span class="na">value=</span><span class="s">"전송하기"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;/form&gt;</span>
</code></pre></div></div>

<h3 id="2-deleteprojsp라는-이름으로-db에서-전달받은-정보를-삭제하는-작업을-하는-페이지를-만든다">2. <code class="language-plaintext highlighter-rouge">deletePro.jsp</code>라는 이름으로 <code class="language-plaintext highlighter-rouge">DB</code>에서 전달받은 정보를 삭제하는 작업을 하는 페이지를 만든다.</h3>
<div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="nt">&lt;%</span>
    <span class="n">request</span><span class="o">.</span><span class="na">setCharacterEncoding</span><span class="o">(</span><span class="s">"UTF-8"</span><span class="o">);</span>
  
    <span class="nc">String</span> <span class="n">id</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"id"</span><span class="o">);</span>
    <span class="nc">String</span> <span class="n">pass</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"pass"</span><span class="o">);</span>
  <span class="nt">%&gt;</span>
  
  <span class="nt">&lt;%</span>
    <span class="kd">final</span> <span class="nc">String</span> <span class="no">DRIVER</span> <span class="o">=</span> <span class="s">"com.mysql.cj.jdbc.Driver"</span><span class="o">;</span>
    <span class="kd">final</span> <span class="nc">String</span> <span class="no">DBURL</span> <span class="o">=</span> <span class="s">"jdbc:mysql://localhost:3306/jspdb"</span><span class="o">;</span>
    <span class="kd">final</span> <span class="nc">String</span> <span class="no">DBID</span> <span class="o">=</span> <span class="s">"root"</span><span class="o">;</span>
    <span class="kd">final</span> <span class="nc">String</span> <span class="no">DBPASS</span> <span class="o">=</span> <span class="s">"1234"</span><span class="o">;</span>
  <span class="nt">%&gt;</span>
  
  <span class="nt">&lt;h2&gt;</span> 1. 드라이버 로드 <span class="nt">&lt;/h2&gt;</span>
  <span class="nt">&lt;%</span>
    <span class="nc">Class</span><span class="o">.</span><span class="na">forName</span><span class="o">(</span><span class="no">DRIVER</span><span class="o">);</span>
  <span class="nt">%&gt;</span>
  
  <span class="nt">&lt;h2&gt;</span> 2. 디비 연결 <span class="nt">&lt;/h2&gt;</span>
  <span class="nt">&lt;%</span>
    <span class="nc">Connection</span> <span class="n">con</span> <span class="o">=</span> <span class="nc">DriverManager</span><span class="o">.</span><span class="na">getConnection</span><span class="o">(</span><span class="no">DBURL</span><span class="o">,</span> <span class="no">DBID</span><span class="o">,</span> <span class="no">DBPASS</span><span class="o">);</span>
  <span class="nt">%&gt;</span>
  
  <span class="nt">&lt;h2&gt;</span> 3. sql 작성 <span class="err">&amp;</span> pstmt 생성 <span class="nt">&lt;/h2&gt;</span>
  <span class="nt">&lt;%</span>
    <span class="nc">String</span> <span class="n">sql</span> <span class="o">=</span> <span class="s">"delete from itwill_member where id=? and pass=?"</span><span class="o">;</span>
    
    <span class="nc">PreparedStatement</span> <span class="n">pstmt</span> <span class="o">=</span> <span class="n">con</span><span class="o">.</span><span class="na">prepareStatement</span><span class="o">(</span><span class="n">sql</span><span class="o">);</span>
    <span class="n">pstmt</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="n">id</span><span class="o">);</span>
    <span class="n">pstmt</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="mi">2</span><span class="o">,</span> <span class="n">pass</span><span class="o">);</span>
  <span class="nt">%&gt;</span>
  
  <span class="nt">&lt;h2&gt;</span> 4. sql 실행 <span class="nt">&lt;/h2&gt;</span>
  <span class="nt">&lt;%</span>
    <span class="n">pstmt</span><span class="o">.</span><span class="na">executeUpdate</span><span class="o">();</span>
  
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"회원정보 삭제 완료!"</span><span class="o">);</span>
  <span class="nt">%&gt;</span>
</code></pre></div></div>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="JSP" /><category term="Database" /><category term="JSP" /><category term="JDBC" /><summary type="html"><![CDATA[👀 JDBC(Java Database Connectivity)란? Java랑 DBMS를 연결시켜주는 API 즉 자바랑 DB를 연결시켜서 사용할 수 있게 해주는 기능들이 모여있는 라이브러리라 할 수 있다. 데이터베이스에 데이터를 삽입, 수정, 삭제할 때 SQL 프롬프트에서 SQL문을 사용하지 않아도 자바 프로그램에서 SQL문을 사용하여 데이터베이스에 데이터를 추가하고 삭제하는 작업을 할 수 있게 하는 API이다. JDBC는 DBMS 종류에 상관없이 독립적으로 사용 가능하다. 여러 언어에서 작동하는 방법이 전반적으로 같다고 할 수 있다.]]></summary></entry><entry><title type="html">회원관리 서비스 요구사항</title><link href="http://localhost:4000/jsp/customer-management/" rel="alternate" type="text/html" title="회원관리 서비스 요구사항" /><published>2022-02-12T00:00:00+09:00</published><updated>2022-02-12T00:00:00+09:00</updated><id>http://localhost:4000/jsp/customer-management</id><content type="html" xml:base="http://localhost:4000/jsp/customer-management/"><![CDATA[<h1 id="-회원관리-서비스-요구사항">👀 회원관리 서비스 요구사항</h1>
<ul>
  <li>모든 웹페이지의 기본 서비스라고 할 수 있는 회원관리 서비스! 아래와 같은 사항들이 가능해야 한다.<br /><br /></li>
</ul>

<p>1) 회원가입 페이지 - 아이디는 이메일을 사용하거나 전화번호를 입력받는 등 회원가입에 필요한 정보 입력<br />
2) 로그인<br />
3) 메인페이지<br />
4) 회원정보 조회<br />
5) 회원정보 수정<br />
6) 회원정보 삭제<br />
7) 관리자 - 회원 전체 목록 조회<br /><br /></p>

<ul>
  <li>이렇게 작성하는 것을 <code class="language-plaintext highlighter-rouge">요구사항 확인</code> 혹은 <code class="language-plaintext highlighter-rouge">요구사항 명세</code>라고 한다.</li>
  <li>이 과정을 진행하기 전에 <code class="language-plaintext highlighter-rouge">DB</code> 테이블 생성을 먼저 진행한다.</li>
</ul>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="JSP" /><category term="Database" /><category term="JSP" /><category term="JDBC" /><summary type="html"><![CDATA[👀 회원관리 서비스 요구사항 모든 웹페이지의 기본 서비스라고 할 수 있는 회원관리 서비스! 아래와 같은 사항들이 가능해야 한다.]]></summary></entry><entry><title type="html">자바빈(JavaBean)</title><link href="http://localhost:4000/jsp/javabean/" rel="alternate" type="text/html" title="자바빈(JavaBean)" /><published>2022-02-12T00:00:00+09:00</published><updated>2022-02-12T00:00:00+09:00</updated><id>http://localhost:4000/jsp/javabean</id><content type="html" xml:base="http://localhost:4000/jsp/javabean/"><![CDATA[<h1 id="자바빈javabean">자바빈(JavaBean)</h1>
<ul>
  <li>관련있는 데이터를 하나의 클래스에 설계해서 한 번에 관리하는 것</li>
  <li>디자인과 비즈니스 로직을 분리하기 위해 사용한다.
    <ul>
      <li>자바 코드로만 입력하면 프로그래밍 언어를 모르는 디자이너가 알아보기 어렵고 그렇다고 프로그래머가 자바 코드를 안 쓸 수는 없는 일이니 중간 지점을 찾기 위해 사용한다고 보면 될 거 같다.<br /><br /></li>
    </ul>
  </li>
</ul>

<h2 id="자바빈-설계-규약">자바빈 설계 규약</h2>
<p>1) 기본패키지(default)를 제외한 특정 패키지 안에 있어야 함
2) 기본 생성자가 있어야 함
3) 멤버 변수는 접근지정자 <code class="language-plaintext highlighter-rouge">private</code> 선언
4) 멤버 변수에 접근하기 위해서 <code class="language-plaintext highlighter-rouge">get</code>, <code class="language-plaintext highlighter-rouge">set</code> 메서드 선언(<code class="language-plaintext highlighter-rouge">public</code>)<br /><br /></p>

<h2 id="자바빈을-사용한-db-관리-예제-1-회원가입-하는-상황">자바빈을 사용한 DB 관리 예제 1) 회원가입 하는 상황</h2>
<h3 id="1-사용자-정보를-저장할-클래스를-만든다">1. 사용자 정보를 저장할 클래스를 만든다.</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.itwillbs.member</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.sql.Timestamp</span><span class="o">;</span>

<span class="c1">// Object 클래스는 자바의 최상위 클래스 =&gt; 자바에서 사용하는 모든 클래스는 Object 클래스를 상속받는다.</span>
<span class="c1">// 명시된 상속관계가 없을 경우 자동으로 Object 클래스를 상속한다.(생략가능)</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">MemberBean</span> <span class="o">{</span>
	
	<span class="c1">// member 테이블정보를 한 번에 저장하는 객체</span>
	<span class="c1">// MemberDTO / MemberVO 다 Bean이랑 같은거라고 보면 된다.</span>
	
	<span class="kd">private</span> <span class="nc">String</span> <span class="n">id</span><span class="o">;</span>
	<span class="kd">private</span> <span class="nc">String</span> <span class="n">pass</span><span class="o">;</span>
	<span class="kd">private</span> <span class="nc">String</span> <span class="n">name</span><span class="o">;</span>
	<span class="kd">private</span> <span class="kt">int</span> <span class="n">age</span><span class="o">;</span>
	<span class="kd">private</span> <span class="nc">String</span> <span class="n">gender</span><span class="o">;</span>
	<span class="kd">private</span> <span class="nc">String</span> <span class="n">email</span><span class="o">;</span>
	<span class="kd">private</span> <span class="nc">Timestamp</span> <span class="n">regdate</span><span class="o">;</span>
	
	<span class="c1">// 하나하나 타이핑하지 말고 generate getter/setter를 사용해 get/set 메서드를 세팅한다.</span>
	<span class="kd">public</span> <span class="nc">String</span> <span class="nf">getId</span><span class="o">()</span> <span class="o">{</span>
		<span class="k">return</span> <span class="n">id</span><span class="o">;</span>
	<span class="o">}</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setId</span><span class="o">(</span><span class="nc">String</span> <span class="n">id</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">this</span><span class="o">.</span><span class="na">id</span> <span class="o">=</span> <span class="n">id</span><span class="o">;</span>
	<span class="o">}</span>
	<span class="kd">public</span> <span class="nc">String</span> <span class="nf">getPass</span><span class="o">()</span> <span class="o">{</span>
		<span class="k">return</span> <span class="n">pass</span><span class="o">;</span>
	<span class="o">}</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setPass</span><span class="o">(</span><span class="nc">String</span> <span class="n">pass</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">this</span><span class="o">.</span><span class="na">pass</span> <span class="o">=</span> <span class="n">pass</span><span class="o">;</span>
	<span class="o">}</span>
	<span class="kd">public</span> <span class="nc">String</span> <span class="nf">getName</span><span class="o">()</span> <span class="o">{</span>
		<span class="k">return</span> <span class="n">name</span><span class="o">;</span>
	<span class="o">}</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setName</span><span class="o">(</span><span class="nc">String</span> <span class="n">name</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">this</span><span class="o">.</span><span class="na">name</span> <span class="o">=</span> <span class="n">name</span><span class="o">;</span>
	<span class="o">}</span>
	<span class="kd">public</span> <span class="kt">int</span> <span class="nf">getAge</span><span class="o">()</span> <span class="o">{</span>
		<span class="k">return</span> <span class="n">age</span><span class="o">;</span>
	<span class="o">}</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setAge</span><span class="o">(</span><span class="kt">int</span> <span class="n">age</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">this</span><span class="o">.</span><span class="na">age</span> <span class="o">=</span> <span class="n">age</span><span class="o">;</span>
	<span class="o">}</span>
	<span class="kd">public</span> <span class="nc">String</span> <span class="nf">getGender</span><span class="o">()</span> <span class="o">{</span>
		<span class="k">return</span> <span class="n">gender</span><span class="o">;</span>
	<span class="o">}</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setGender</span><span class="o">(</span><span class="nc">String</span> <span class="n">gender</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">this</span><span class="o">.</span><span class="na">gender</span> <span class="o">=</span> <span class="n">gender</span><span class="o">;</span>
	<span class="o">}</span>
	<span class="kd">public</span> <span class="nc">String</span> <span class="nf">getEmail</span><span class="o">()</span> <span class="o">{</span>
		<span class="k">return</span> <span class="n">email</span><span class="o">;</span>
	<span class="o">}</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setEmail</span><span class="o">(</span><span class="nc">String</span> <span class="n">email</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">this</span><span class="o">.</span><span class="na">email</span> <span class="o">=</span> <span class="n">email</span><span class="o">;</span>
	<span class="o">}</span>
	<span class="kd">public</span> <span class="nc">Timestamp</span> <span class="nf">getRegdate</span><span class="o">()</span> <span class="o">{</span>
		<span class="k">return</span> <span class="n">regdate</span><span class="o">;</span>
	<span class="o">}</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setRegdate</span><span class="o">(</span><span class="nc">Timestamp</span> <span class="n">regdate</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">this</span><span class="o">.</span><span class="na">regdate</span> <span class="o">=</span> <span class="n">regdate</span><span class="o">;</span>
	<span class="o">}</span>
	
	<span class="c1">// alt + shift + s + s를 누르면 오버라이딩 할 수 있는 메서드 목록을 불러올 수 있다.</span>
    <span class="c1">// String 클래스에 있는 toString()이 오버라이딩 되는 이유는 자바의 모든 클래스는 Object 클래스를 상속받는데 </span>
    <span class="c1">// Object 클래스로 가보면 toString() 메서드의 원형이 작성되어 있다.(원형은 객체가 생성된 메모리의 주소를 리턴)</span>
    <span class="c1">// 자바의 모든 클래스는 Object 클래스를 상속받기 때문에 String 클래스에서도 toString()을 오버라이딩해서 우리가 자주 쓰는 동작을 보여주는 것이고</span>
    <span class="c1">// 사용자 정의로 만든 이 클래스 또한 Object를 상속받기 때문에 toString() 메서드의 오버라이딩이 가능한 것이다.  </span>
	<span class="nd">@Override</span> <span class="c1">// memberBean 정보를 모두 한 번에 확인하기 위해서 사용(하나하나 get 메서드로 부르려면 복잡하니깐..)</span>
	<span class="kd">public</span> <span class="nc">String</span> <span class="nf">toString</span><span class="o">()</span> <span class="o">{</span>
		<span class="k">return</span> <span class="s">"MemberBean [id="</span> <span class="o">+</span> <span class="n">id</span> <span class="o">+</span> <span class="s">", pass="</span> <span class="o">+</span> <span class="n">pass</span> <span class="o">+</span> <span class="s">", name="</span> <span class="o">+</span> <span class="n">name</span> <span class="o">+</span> <span class="s">", age="</span> <span class="o">+</span> <span class="n">age</span> <span class="o">+</span> <span class="s">", gender="</span> <span class="o">+</span> <span class="n">gender</span>
				<span class="o">+</span> <span class="s">", email="</span> <span class="o">+</span> <span class="n">email</span> <span class="o">+</span> <span class="s">", regdate="</span> <span class="o">+</span> <span class="n">regdate</span> <span class="o">+</span> <span class="s">"]"</span><span class="o">;</span>
	<span class="o">}</span>

<span class="o">}</span>
</code></pre></div></div>

<h3 id="2-insertformjsp라는-이름으로-가입정보를-입력받는-페이지를-만든다">2. <code class="language-plaintext highlighter-rouge">insertForm.jsp</code>라는 이름으로 가입정보를 입력받는 페이지를 만든다.</h3>
<div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="c">&lt;!-- name은 컬럼명과 일치시켜 주는 것이 좋다 --&gt;</span>
  <span class="nt">&lt;fieldset&gt;</span>
    <span class="nt">&lt;form</span> <span class="na">action=</span><span class="s">"insertPro.jsp"</span> <span class="na">method=</span><span class="s">"post"</span><span class="nt">&gt;</span>
	  아이디 : <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"text"</span> <span class="na">name=</span><span class="s">"id"</span><span class="nt">&gt;&lt;br&gt;</span>
	  비밀번호 : <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"password"</span> <span class="na">name=</span><span class="s">"pass"</span><span class="nt">&gt;&lt;br&gt;</span>
	  이름 : <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"text"</span> <span class="na">name=</span><span class="s">"name"</span><span class="nt">&gt;&lt;br&gt;</span>
	  나이 : <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"number"</span> <span class="na">name=</span><span class="s">"age"</span><span class="nt">&gt;&lt;br&gt;</span><span class="c">&lt;!-- number: 옆에 숫자 증감시키는 화살표 생김 --&gt;</span>
	  성별 : <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"radio"</span> <span class="na">name=</span><span class="s">"gender"</span> <span class="na">value=</span><span class="s">"남자"</span><span class="nt">&gt;</span>남
	  		<span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"radio"</span> <span class="na">name=</span><span class="s">"gender"</span> <span class="na">value=</span><span class="s">"여자"</span><span class="nt">&gt;</span>여<span class="nt">&lt;br&gt;</span>
	  이메일 : <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"email"</span> <span class="na">name=</span><span class="s">"email"</span><span class="nt">&gt;&lt;br&gt;</span><span class="c">&lt;!-- email: 이메일 형식이 맞는지 확인해줌 --&gt;</span>
	  
	  <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"submit"</span> <span class="na">value=</span><span class="s">"회원가입하기"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;/form&gt;</span>
  <span class="nt">&lt;/fieldset&gt;</span>
</code></pre></div></div>

<h3 id="3-insertprojsp라는-이름으로-전달받은-정보를-db에-삽입하는-페이지를-만든다">3. <code class="language-plaintext highlighter-rouge">insertPro.jsp</code>라는 이름으로 전달받은 정보를 <code class="language-plaintext highlighter-rouge">DB</code>에 삽입하는 페이지를 만든다.</h3>
<div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="nt">&lt;%</span>
    <span class="n">request</span><span class="o">.</span><span class="na">setCharacterEncoding</span><span class="o">(</span><span class="s">"UTF-8"</span><span class="o">);</span>
  
    <span class="nc">String</span> <span class="n">id</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"id"</span><span class="o">);</span>
    <span class="nc">String</span> <span class="n">pass</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"pass"</span><span class="o">);</span>
    <span class="nc">String</span> <span class="n">name</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"name"</span><span class="o">);</span>
	<span class="kt">int</span> <span class="n">age</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"age"</span><span class="o">));</span>
    <span class="nc">String</span> <span class="n">gender</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"gender"</span><span class="o">);</span>
    <span class="nc">String</span> <span class="n">email</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"email"</span><span class="o">);</span>
  <span class="nt">%&gt;</span>
  
  <span class="nt">&lt;hr&gt;</span>
    <span class="nt">&lt;h2&gt;</span>전달받은 회원정보<span class="nt">&lt;/h2&gt;</span>
	  아이디 : <span class="nt">&lt;%=</span><span class="n">id</span> <span class="nt">%&gt;&lt;br&gt;</span>
	  비밀번호 : <span class="nt">&lt;%=</span><span class="n">pass</span> <span class="nt">%&gt;&lt;br&gt;</span>
	  이름 : <span class="nt">&lt;%=</span><span class="n">name</span> <span class="nt">%&gt;&lt;br&gt;</span>
	  나이 : <span class="nt">&lt;%=</span><span class="n">age</span> <span class="nt">%&gt;&lt;br&gt;</span>
	  성별 : <span class="nt">&lt;%=</span><span class="n">gender</span> <span class="nt">%&gt;&lt;br&gt;</span>
	  이메일 : <span class="nt">&lt;%=</span><span class="n">email</span> <span class="nt">%&gt;&lt;br&gt;</span>
	  
	  <span class="nt">&lt;%</span>
<span class="c1">//	    MemberBean mb = new MemberBean();</span>
<span class="c1">//	    System.out.println(mb);</span>
<span class="c1">//	    System.out.println(mb.toString()); // 둘은 같은 코드</span>
                                           <span class="c1">// MemberBean 클래스에서 toString()을 오버라이딩하지 않았으면 객체가 할당된 메모리 주소를 출력한다.</span>
	  <span class="nt">%&gt;</span>
  <span class="nt">&lt;hr&gt;</span>
  
  <span class="nt">&lt;h2&gt;</span>액션태그를 사용한 자바빈 객체 사용<span class="nt">&lt;/h2&gt;</span>
  <span class="nt">&lt;jsp:useBean </span><span class="na">id=</span><span class="s">"mb"</span><span class="na"> class=</span><span class="s">"com.itwillbs.member.MemberBean"</span> <span class="nt">/&gt;</span>
  <span class="nt">&lt;jsp:setProperty </span><span class="na">property=</span><span class="s">"*"</span><span class="na"> name=</span><span class="s">"mb"</span><span class="nt">/&gt;</span>
  
  <span class="nt">&lt;%=</span><span class="n">mb</span> <span class="nt">%&gt;</span>
  
  <span class="nt">&lt;%</span>
    <span class="c1">// 회원가입하는 날짜정보를 저장</span>
    <span class="c1">// 내 컴퓨터에 있는 최근 시간정보를 가져다가 Timestamp 객체 초기화 &amp; 호출</span>
    <span class="n">mb</span><span class="o">.</span><span class="na">setRegdate</span><span class="o">(</span><span class="k">new</span> <span class="nc">Timestamp</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">()));</span>
  <span class="nt">%&gt;</span>
  
  <span class="nt">&lt;%=</span><span class="n">mb</span> <span class="nt">%&gt;</span>
  <span class="c">&lt;!-- 여기까지 데이터를 전달하는 동작 --&gt;</span>
  
  <span class="nt">&lt;hr&gt;</span>
  <span class="nt">&lt;h2&gt;</span>전달된 정보(mb)를 DB에 저장<span class="nt">&lt;/h2&gt;</span>
  <span class="nt">&lt;%</span>
    <span class="c1">// 1. 드라이버 로드</span>
    <span class="nc">Class</span><span class="o">.</span><span class="na">forName</span><span class="o">(</span><span class="s">"com.mysql.cj.jdbc.Driver"</span><span class="o">);</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"드라이버 로드 성공!"</span><span class="o">);</span>
    
    <span class="c1">// 2. 디비 연결</span>
    <span class="nc">Connection</span> <span class="n">con</span> <span class="o">=</span> <span class="nc">DriverManager</span><span class="o">.</span><span class="na">getConnection</span><span class="o">(</span><span class="s">"jdbc:mysql://localhost:3306/jspdb"</span><span class="o">,</span> <span class="s">"root"</span><span class="o">,</span> <span class="s">"1234"</span><span class="o">);</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"디비 연결 성공 : "</span> <span class="o">+</span> <span class="n">con</span><span class="o">);</span>
    
    <span class="c1">// 3. sql 작성 &amp; pstmt 객체 생성</span>
    <span class="nc">String</span> <span class="n">sql</span> <span class="o">=</span> <span class="s">"insert into itwill_member(id, pass, name, age, gender, email, regdate) values(?, ?, ?, ?, ?, ?, ?)"</span><span class="o">;</span>
    <span class="nc">PreparedStatement</span> <span class="n">pstmt</span> <span class="o">=</span> <span class="n">con</span><span class="o">.</span><span class="na">prepareStatement</span><span class="o">(</span><span class="n">sql</span><span class="o">);</span>
    
    <span class="c1">// ??? </span>
    <span class="n">pstmt</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="n">mb</span><span class="o">.</span><span class="na">getId</span><span class="o">());</span>
    <span class="n">pstmt</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="mi">2</span><span class="o">,</span> <span class="n">mb</span><span class="o">.</span><span class="na">getPass</span><span class="o">());</span>
    <span class="n">pstmt</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="mi">3</span><span class="o">,</span> <span class="n">mb</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>
    <span class="n">pstmt</span><span class="o">.</span><span class="na">setInt</span><span class="o">(</span><span class="mi">4</span><span class="o">,</span> <span class="n">mb</span><span class="o">.</span><span class="na">getAge</span><span class="o">());</span>
    <span class="n">pstmt</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="mi">5</span><span class="o">,</span> <span class="n">mb</span><span class="o">.</span><span class="na">getGender</span><span class="o">());</span>
    <span class="n">pstmt</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="mi">6</span><span class="o">,</span> <span class="n">mb</span><span class="o">.</span><span class="na">getEmail</span><span class="o">());</span>
    <span class="n">pstmt</span><span class="o">.</span><span class="na">setTimestamp</span><span class="o">(</span><span class="mi">7</span><span class="o">,</span> <span class="n">mb</span><span class="o">.</span><span class="na">getRegdate</span><span class="o">());</span>
    
    <span class="c1">// 4. sql 실행</span>
    <span class="n">pstmt</span><span class="o">.</span><span class="na">executeUpdate</span><span class="o">();</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"회원 가입 완료!"</span><span class="o">);</span>
  <span class="nt">%&gt;</span>
  
  <span class="nt">&lt;script </span><span class="na">type=</span><span class="s">"text/javascript"</span><span class="nt">&gt;</span>
    <span class="nx">alert</span><span class="p">(</span><span class="dl">'</span><span class="s1">정상적으로 회원가입 완료!</span><span class="dl">'</span><span class="p">);</span>
    <span class="nx">location</span><span class="p">.</span><span class="nx">herf</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">loginForm.jsp</span><span class="dl">'</span><span class="p">;</span>
  <span class="nt">&lt;/script&gt;</span>
</code></pre></div></div>

<h2 id="자바빈을-사용한-db-관리-예제-2-로그인하는-상황">자바빈을 사용한 DB 관리 예제 2) 로그인하는 상황</h2>
<h3 id="1-정보를-저장할-클래스는-아까-만들었으니까-생략">1. 정보를 저장할 클래스는 아까 만들었으니까 생략</h3>

<h3 id="2-loginformjsp라는-이름으로-로그인용-페이지를-만든다">2. <code class="language-plaintext highlighter-rouge">loginForm.jsp</code>라는 이름으로 로그인용 페이지를 만든다.</h3>
<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="nt">&lt;form</span> <span class="na">action=</span><span class="s">"loginPro.jsp"</span> <span class="na">method=</span><span class="s">"post"</span><span class="nt">&gt;</span>
    아이디 : <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"text"</span> <span class="na">name=</span><span class="s">"id"</span><span class="nt">&gt;&lt;br&gt;</span>
    비밀번호 : <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"password"</span> <span class="na">name=</span><span class="s">"pass"</span><span class="nt">&gt;&lt;br&gt;</span>
    <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"submit"</span> <span class="na">value=</span><span class="s">"로그인"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"button"</span> <span class="na">value=</span><span class="s">"회원가입"</span> <span class="na">onclick=</span><span class="s">" location.href='insertForm.jsp'; "</span><span class="nt">&gt;</span>
  <span class="nt">&lt;/form&gt;</span>
</code></pre></div></div>

<h3 id="3-loginprojsp라는-이름으로-전달받은-정보를-db와-매칭하는-페이지를-만든다">3. <code class="language-plaintext highlighter-rouge">loginPro.jsp</code>라는 이름으로 전달받은 정보를 <code class="language-plaintext highlighter-rouge">DB</code>와 매칭하는 페이지를 만든다.</h3>
<div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="nt">&lt;%</span>
    <span class="c1">// 한글처리</span>
    <span class="n">request</span><span class="o">.</span><span class="na">setCharacterEncoding</span><span class="o">(</span><span class="s">"UTF-8"</span><span class="o">);</span>
    
    <span class="c1">// 전달받은 정보를 액션태그를 사용하여 저장</span>
  <span class="nt">%&gt;</span>
  
  <span class="nt">&lt;jsp:useBean </span><span class="na">id=</span><span class="s">"mb"</span><span class="na"> class=</span><span class="s">"com.itwillbs.member.MemberBean"</span><span class="nt">/&gt;</span>
  <span class="nt">&lt;jsp:setProperty </span><span class="na">property=</span><span class="s">"*"</span><span class="na"> name=</span><span class="s">"mb"</span><span class="nt">/&gt;</span>
  
  <span class="nt">&lt;%=</span><span class="n">mb</span> <span class="nt">%&gt;</span>
  
  <span class="nt">&lt;hr&gt;</span>
  
  <span class="nt">&lt;%</span>
    <span class="c1">// 1. 드라이버 로드</span>
    <span class="nc">Class</span><span class="o">.</span><span class="na">forName</span><span class="o">(</span><span class="s">"com.mysql.cj.jdbc.Driver"</span><span class="o">);</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"드라이버 로드 성공!"</span><span class="o">);</span>
    
    <span class="c1">// 2. 디비 연결</span>
    <span class="nc">Connection</span> <span class="n">con</span> <span class="o">=</span> <span class="nc">DriverManager</span><span class="o">.</span><span class="na">getConnection</span><span class="o">(</span><span class="s">"jdbc:mysql://localhost:3306/jspdb"</span><span class="o">,</span> <span class="s">"root"</span><span class="o">,</span> <span class="s">"1234"</span><span class="o">);</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"디비 연결 성공 : "</span> <span class="o">+</span> <span class="n">con</span><span class="o">);</span>
    
    <span class="c1">// 3. sql 작성() &amp; pstmt 생성</span>
    <span class="c1">// String sql = "select * from itwill_member where id=? and pass=?"; -</span><span class="err">&gt;</span> <span class="n">sql</span> <span class="n">인젝션이라</span> <span class="n">하는데</span> <span class="n">안</span> <span class="n">쓸</span> <span class="n">것임</span>
    
    <span class="c1">// 이 테이블에서 pass를 가져오는데 where의 조건에 해당하는 id만 가져온다.</span>
    <span class="nc">String</span> <span class="n">sql</span> <span class="o">=</span> <span class="s">"select pass from itwill_member where id=?"</span><span class="o">;</span>
    <span class="nc">PreparedStatement</span> <span class="n">pstmt</span> <span class="o">=</span> <span class="n">con</span><span class="o">.</span><span class="na">prepareStatement</span><span class="o">(</span><span class="n">sql</span><span class="o">);</span>
    
    <span class="c1">// ?</span>
    <span class="n">pstmt</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="n">mb</span><span class="o">.</span><span class="na">getId</span><span class="o">());</span>
    
    <span class="c1">// 4. sql 실행</span>
    <span class="nc">ResultSet</span> <span class="n">rs</span> <span class="o">=</span> <span class="n">pstmt</span><span class="o">.</span><span class="na">executeQuery</span><span class="o">();</span>
    
    <span class="c1">// 5. 데이터 처리</span>
    <span class="k">if</span> <span class="o">(</span><span class="n">rs</span><span class="o">.</span><span class="na">next</span><span class="o">())</span>
    <span class="o">{</span>
    	<span class="c1">// 데이터 있음 -</span><span class="err">&gt;</span> <span class="nc">DB저장</span> <span class="no">O</span> <span class="o">-</span><span class="err">&gt;</span> <span class="n">회원</span>
    	<span class="c1">// 비밀번호 체크</span>
    	<span class="k">if</span> <span class="o">(</span><span class="n">mb</span><span class="o">.</span><span class="na">getPass</span><span class="o">().</span><span class="na">equals</span><span class="o">(</span><span class="n">rs</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="s">"pass"</span><span class="o">)))</span>
    	<span class="o">{</span>
    		<span class="c1">// 회원이면서 비밀번호도 동일 -</span><span class="err">&gt;</span> <span class="n">본인</span> <span class="n">로그인</span> <span class="n">성공</span>
    		<span class="c1">// 로그인 정보를 같이 가지고 이동</span>
    		<span class="n">session</span><span class="o">.</span><span class="na">setAttribute</span><span class="o">(</span><span class="s">"id"</span><span class="o">,</span> <span class="n">mb</span><span class="o">.</span><span class="na">getId</span><span class="o">());</span>
    		
    		<span class="c1">// 메인페이지 이동</span>
    		<span class="n">response</span><span class="o">.</span><span class="na">sendRedirect</span><span class="o">(</span><span class="s">"main.jsp"</span><span class="o">);</span>
    	<span class="o">}</span>
    	<span class="k">else</span> 
    	<span class="o">{</span>
    		<span class="c1">// 회원이긴 하나 비밀번호 틀림</span>
    		<span class="nt">%&gt;</span> <span class="c">&lt;!-- 여기까지 아이디-비밀번호 확인 및 처리 과정 --&gt;</span>
    		  <span class="c">&lt;!-- html 코드 --&gt;</span>
    		  <span class="nt">&lt;script </span><span class="na">type=</span><span class="s">"text/javascript"</span><span class="nt">&gt;</span>
    		    <span class="nx">alert</span><span class="p">(</span><span class="dl">"</span><span class="s2">아이디 혹은 비밀번호 오류!</span><span class="dl">"</span><span class="p">);</span> <span class="cm">/* 아이디나 비밀번호 하나만 오류라고 알려주는 것이 보안적으로 취약해서 둘 다 오류라고 알려줌 */</span>
    		    <span class="nx">history</span><span class="p">.</span><span class="nx">back</span><span class="p">();</span>
    		  <span class="nt">&lt;/script&gt;</span>
    		<span class="nt">&lt;%</span>
    	<span class="o">}</span>
    <span class="o">}</span>
    <span class="k">else</span> 
    <span class="o">{</span>
    	<span class="c1">// 데이터 없음 -</span><span class="err">&gt;</span> <span class="nc">DB저장</span> <span class="no">X</span> <span class="o">-</span><span class="err">&gt;</span> <span class="n">비회원</span>
		<span class="nt">%&gt;</span> <span class="c">&lt;!-- 여기까지 아이디-비밀번호 확인 및 처리 과정 --&gt;</span>
		  <span class="c">&lt;!-- html 코드 --&gt;</span>
		  <span class="nt">&lt;script </span><span class="na">type=</span><span class="s">"text/javascript"</span><span class="nt">&gt;</span>
		    <span class="c1">// alert("아이디 혹은 비밀번호 오류!"); /* 아이디나 비밀번호 하나만 오류라고 알려주는 것이 보안적으로 취약해서 둘 다 오류라고 알려줌 */</span>
		    <span class="nx">confirm</span><span class="p">(</span><span class="dl">"</span><span class="s2">회원정보가 없습니다. 가입하시겠습니까?</span><span class="dl">"</span><span class="p">);</span> <span class="cm">/* yes 누르면 가입페이지로 이동/ no 누르면 다시 뒤로 이동 */</span>
		    <span class="nx">history</span><span class="p">.</span><span class="nx">back</span><span class="p">();</span>
		  <span class="nt">&lt;/script&gt;</span>
		<span class="nt">&lt;%</span>
    <span class="o">}</span>
  <span class="nt">%&gt;</span>
</code></pre></div></div>

<h2 id="로그인-후-메인-페이지로-이동하는-예제">로그인 후 메인 페이지로 이동하는 예제</h2>
<ul>
  <li><code class="language-plaintext highlighter-rouge">main.jsp</code>라는 이름으로 페이지를 만든다.</li>
</ul>

<script src="https://gist.github.com/miro7923/c5b30ef769d6e5358214ecbeb20371cd.js"></script>

<h2 id="로그인-후-회원정보를-볼-수-있는-페이지로-이동하는-예제">로그인 후 회원정보를 볼 수 있는 페이지로 이동하는 예제</h2>
<ul>
  <li><code class="language-plaintext highlighter-rouge">info.jsp</code>라는 이름으로 페이지를 만든다.</li>
</ul>

<script src="https://gist.github.com/miro7923/d6b2f347b534cf9707b8962bcc2b611f.js"></script>

<h2 id="로그아웃하는-동작-예제">로그아웃하는 동작 예제</h2>
<ul>
  <li>
    <p><code class="language-plaintext highlighter-rouge">logout.jsp</code>라는 이름으로 페이지를 만든다.
```jsp, javascript
&lt;%
  // 로그아웃 - session 초기화
  session.invalidate();
%&gt;</p>

    <script type="text/javascript">
  alert('로그아웃!');
  location.href = 'main.jsp'; 
  /* 메인페이지로 넘어갔을 때 로그인 세션 정보가 없으면 로그인 페이지로 이동되게 해 놨음 
     그래서 난 메인페이지로 이동시켰지만 세션 정보가 초기화 되었기 때문에 로그인 페이지로 이동하게 된다. */
</script>

    <p>```</p>
  </li>
</ul>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="JSP" /><category term="Database" /><category term="JSP" /><category term="JDBC" /><category term="JavaBean" /><summary type="html"><![CDATA[자바빈(JavaBean) 관련있는 데이터를 하나의 클래스에 설계해서 한 번에 관리하는 것 디자인과 비즈니스 로직을 분리하기 위해 사용한다. 자바 코드로만 입력하면 프로그래밍 언어를 모르는 디자이너가 알아보기 어렵고 그렇다고 프로그래머가 자바 코드를 안 쓸 수는 없는 일이니 중간 지점을 찾기 위해 사용한다고 보면 될 거 같다. 자바빈 설계 규약 1) 기본패키지(default)를 제외한 특정 패키지 안에 있어야 함 2) 기본 생성자가 있어야 함 3) 멤버 변수는 접근지정자 private 선언 4) 멤버 변수에 접근하기 위해서 get, set 메서드 선언(public)]]></summary></entry><entry><title type="html">Java) BOJ 2292. 벌집</title><link href="http://localhost:4000/boj/boj2292/" rel="alternate" type="text/html" title="Java) BOJ 2292. 벌집" /><published>2022-02-07T00:00:00+09:00</published><updated>2022-02-07T00:00:00+09:00</updated><id>http://localhost:4000/boj/boj2292</id><content type="html" xml:base="http://localhost:4000/boj/boj2292/"><![CDATA[<h1 id="문제-링크">문제 링크</h1>
<ul>
  <li><a href="https://www.acmicpc.net/problem/2292">https://www.acmicpc.net/problem/2292</a><br /><br /></li>
</ul>

<h1 id="문제">문제</h1>
<p><img src="https://www.acmicpc.net/JudgeOnline/upload/201009/3(2).png" class="align-center" width="400" height="500" /><br /></p>

<ul>
  <li>위의 그림과 같이 육각형으로 이루어진 벌집이 있다.</li>
  <li>그림에서 보는 바와 같이 중앙의 방 1부터 시작해서 이웃하는 방에 돌아가면서 1씩 증가하는 번호를 주소로 매길 수 있다.</li>
  <li>숫자 N이 주어졌을 때, 벌집의 중앙 1에서 N번 방까지 최소 개수의 방을 지나서 갈 때 몇 개의 방을 지나가는지(시작과 끝을 포함하여)를 계산하는 프로그램을 작성하시오.</li>
  <li>예를 들면, 13까지는 3개, 58까지는 5개를 지난다. <br /><br /></li>
</ul>

<h1 id="입력">입력</h1>
<ul>
  <li>첫째 줄에 N(1 ≤ N ≤ 1,000,000,000)이 주어진다.  <br /><br /></li>
</ul>

<h1 id="출력">출력</h1>
<ul>
  <li>입력으로 주어진 방까지 최소 개수의 방을 지나서 갈 때 몇 개의 방을 지나는지 출력한다. <br /><br /><br /></li>
</ul>

<h1 id="-풀이">👀 풀이</h1>
<ul>
  <li>중심에서부터 벌집 테두리가 하나씩 늘어날 때 마다 6, 12, 18, … 6의 배수로 늘어난다.</li>
  <li>즉 중심에서부터 벌집까지의 거리가 2인 테두리(첫번째 테두리)의 벌집 개수는 6개이고 거리가 3인 테두리는 12개, … 식으로 늘어난다.</li>
  <li>그리고 벌집의 방 번호는 1부터 시작하기 때문에 N번째 방 번호는 1 + (6<em>1) + (6</em>2) + (6<em>3) + … (6</em>N)이라는 것을 알 수 있다.</li>
  <li>
    <p>여기서 N을 구하는 것을 기본 아이디어로 잡고 시작했다.<br /><br /></p>
  </li>
  <li>문제의 조건은 1번에서 N번까지의 거리를 구하는 것이기 때문에</li>
  <li>첫번째 테두리의 가장 큰 수인 7번방까지의 거리를 구한다면 (6*1) + 1 = 7이다. 이 때 N은 1이다.</li>
  <li>그런데 처음 위치도 카운트해야 하기 때문에 1을 더해줘서 최종 정답은 2가 된다.</li>
  <li>
    <p>첫번째 테두리에 있는 가장 큰 수 까지의 거리가 2니까 같은 테두리에 있는 더 작은 숫자들까지의 거리도 2가 된다. <br /><br /></p>
  </li>
  <li>두번째 테두리의 가장 큰 수인 19까지의 거리를 구하면 (6<em>1) + (6</em>2) + 1 = 19이고 이 때의 N은 2이고 1을 더해주면 총 거리는 3이 된다.</li>
  <li>
    <p>마찬가지로 두번째 테두리의 가장 큰 수 까지의 거리가 3이니까 같은 테두리에 있는 더 작은 숫자들까지의 거리도 3이다. <br /><br /></p>
  </li>
  <li>
    <p>이 아이디어를 N번째 숫자가 될 때까지 확장시켜가면 정답을 구할 수 있다. <br /><br /></p>
  </li>
  <li>위에서 더했던 과정을 반대로 생각하면 i=1부터 1씩 증가할 때 N에서 6*i을 빼고 남은 나머지가 1보다 작거나 같다면 N은 i번째 테두리에 있다고 할 수 있다.</li>
  <li>그러면 N=i가 되는 것이고 이렇게 구한 N에다 첫 시작지점인 1을 더해주면 정답을 구할 수 있다.<br /><br /></li>
</ul>

<script src="https://gist.github.com/miro7923/b002c6e181b9342bc1384ec1a2d97bdc.js"></script>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="BOJ" /><category term="Algorithm" /><category term="BOJ" /><category term="No2292" /><category term="Math" /><category term="Java" /><summary type="html"><![CDATA[문제 링크 https://www.acmicpc.net/problem/2292]]></summary></entry><entry><title type="html">Java) BOJ 1712. 손익분기점</title><link href="http://localhost:4000/boj/boj1712/" rel="alternate" type="text/html" title="Java) BOJ 1712. 손익분기점" /><published>2022-02-07T00:00:00+09:00</published><updated>2022-02-07T00:00:00+09:00</updated><id>http://localhost:4000/boj/boj1712</id><content type="html" xml:base="http://localhost:4000/boj/boj1712/"><![CDATA[<h1 id="문제-링크">문제 링크</h1>
<ul>
  <li><a href="https://www.acmicpc.net/problem/1712">https://www.acmicpc.net/problem/1712</a><br /><br /></li>
</ul>

<h1 id="문제">문제</h1>
<ul>
  <li>월드전자는 노트북을 제조하고 판매하는 회사이다. 노트북 판매 대수에 상관없이 매년 임대료, 재산세, 보험료, 급여 등 A만원의 고정 비용이 들며,</li>
  <li>
    <p>한 대의 노트북을 생산하는 데에는 재료비와 인건비 등 총 B만원의 가변 비용이 든다고 한다.<br /><br /></p>
  </li>
  <li>
    <p>예를 들어 A=1,000, B=70이라고 하자. 이 경우 노트북을 한 대 생산하는 데는 총 1,070만원이 들며, 열 대 생산하는 데는 총 1,700만원이 든다.<br /><br /></p>
  </li>
  <li>노트북 가격이 C만원으로 책정되었다고 한다. 일반적으로 생산 대수를 늘려 가다 보면 어느 순간 총 수입(판매비용)이 총 비용(=고정비용+가변비용)보다 많아지게 된다.</li>
  <li>
    <p>최초로 총 수입이 총 비용보다 많아져 이익이 발생하는 지점을 손익분기점(BREAK-EVEN POINT)이라고 한다.<br /><br /></p>
  </li>
  <li>A, B, C가 주어졌을 때, 손익분기점을 구하는 프로그램을 작성하시오. <br /><br /></li>
</ul>

<h1 id="입력">입력</h1>
<ul>
  <li>첫째 줄에 A, B, C가 빈 칸을 사이에 두고 순서대로 주어진다. A, B, C는 21억 이하의 자연수이다.  <br /><br /></li>
</ul>

<h1 id="출력">출력</h1>
<ul>
  <li>첫 번째 줄에 손익분기점 즉 최초로 이익이 발생하는 판매량을 출력한다. 손익분기점이 존재하지 않으면 -1을 출력한다. <br /><br /><br /></li>
</ul>

<h1 id="-풀이">👀 풀이</h1>
<ul>
  <li>
    <p>반복문으로 수익이 날 때까지 개수를 늘려가면서 계산했더니 시간초과가 나서 질문게시판을 검색했다..<br /><br /></p>
  </li>
  <li>반복문이 아닌 수학적으로 접근해야 하는 문제였으며 이 문제를 풀기 위해서는 순이익이 얼마인지 알아야 한다.</li>
  <li>순이익은 (순이익 = 판매금액 C - 생산비용 B)로 구할 수 있다.</li>
  <li>
    <p>그런데 순이익이 0이거나 음수면 평생 팔아도 절대 수익이 나지 않는다. 그래서 이 경우엔 -1을 출력한다.<br /><br /></p>
  </li>
  <li>순이익이 양수라면 언젠가는 수익이 난다는 뜻이므로 정답을 구할 수 있다.</li>
  <li>순이익은 판매비용에서 생산비용을 뺀 값이므로 순이익을 계산하는 과정에서 판매비용에 대한 계산은 끝나게 된다.</li>
  <li>그럼 남은 것은 건설비용 A인데 물건을 판매할 때마다 순이익으로 건설비용 A를 갚다보면 언젠가는 남은 건설비용이 -가 될 것이다.</li>
  <li>그러므로 건설비용을 순이익으로 나눈 몫이 손해가 나지 않을 최소 금액이라는 것을 알 수 있다.</li>
  <li>그런데 문제에서 요구하는 손익분기점은 마이너스에서 최초로 이익이 발생하는 지점이므로 (건설비용 / 순이익)에다 1을 더해줘야 최초로 수익이 나는 지점이 된다.<br /><br /></li>
</ul>

<script src="https://gist.github.com/miro7923/7bd959b23dce959551b0c6c40206eadc.js"></script>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="BOJ" /><category term="Algorithm" /><category term="BOJ" /><category term="No1712" /><category term="Math" /><category term="Java" /><summary type="html"><![CDATA[문제 링크 https://www.acmicpc.net/problem/1712]]></summary></entry><entry><title type="html">Java) BOJ 9012. 괄호</title><link href="http://localhost:4000/boj/boj9012/" rel="alternate" type="text/html" title="Java) BOJ 9012. 괄호" /><published>2022-02-06T00:00:00+09:00</published><updated>2022-02-06T00:00:00+09:00</updated><id>http://localhost:4000/boj/boj9012</id><content type="html" xml:base="http://localhost:4000/boj/boj9012/"><![CDATA[<h1 id="문제-링크">문제 링크</h1>
<ul>
  <li><a href="https://www.acmicpc.net/problem/9012">https://www.acmicpc.net/problem/9012</a><br /><br /></li>
</ul>

<h1 id="문제">문제</h1>
<ul>
  <li>괄호 문자열(Parenthesis String, PS)은 두 개의 괄호 기호인 ‘(’ 와 ‘)’ 만으로 구성되어 있는 문자열이다.</li>
  <li>그 중에서 괄호의 모양이 바르게 구성된 문자열을 올바른 괄호 문자열(Valid PS, VPS)이라고 부른다.</li>
  <li>한 쌍의 괄호 기호로 된 “( )” 문자열은 기본 VPS 이라고 부른다. 만일 x 가 VPS 라면 이것을 하나의 괄호에 넣은 새로운 문자열 “(x)”도 VPS 가 된다.</li>
  <li>그리고 두 VPS x 와 y를 접합(concatenation)시킨 새로운 문자열 xy도 VPS 가 된다.</li>
  <li>예를 들어 “(())()”와 “((()))” 는 VPS 이지만 “(()(”, “(())()))” , 그리고 “(()” 는 모두 VPS 가 아닌 문자열이다.</li>
  <li>여러분은 입력으로 주어진 괄호 문자열이 VPS 인지 아닌지를 판단해서 그 결과를 YES 와 NO 로 나타내어야 한다. <br /><br /></li>
</ul>

<h1 id="입력">입력</h1>
<ul>
  <li>입력 데이터는 표준 입력을 사용한다. 입력은 T개의 테스트 데이터로 주어진다. 입력의 첫 번째 줄에는 입력 데이터의 수를 나타내는 정수 T가 주어진다.</li>
  <li>각 테스트 데이터의 첫째 줄에는 괄호 문자열이 한 줄에 주어진다. 하나의 괄호 문자열의 길이는 2 이상 50 이하이다. <br /><br /></li>
</ul>

<h1 id="출력">출력</h1>
<ul>
  <li>출력은 표준 출력을 사용한다. 만일 입력 괄호 문자열이 올바른 괄호 문자열(VPS)이면 “YES”, 아니면 “NO”를 한 줄에 하나씩 차례대로 출력해야 한다. <br /><br /><br /></li>
</ul>

<h1 id="-풀이">👀 풀이</h1>
<ul>
  <li>
    <p>처음엔 왼쪽 오른쪽 괄호 개수를 세서 같으면 정답처리하는 방식으로 짰는데 2번 테케에서 틀렸다.<br /><br /></p>
  </li>
  <li>
    <p>그래서 왼쪽 오른쪽 괄호가 나왔는지 확인하는 boolean 배열을 만들어서 확인하는 방식으로 수정했는데 사실상 1번이랑 다를 바 없었기 때문에 또 틀렸다.<br /><br /></p>
  </li>
  <li>그 다음엔 괄호의 개수를 세는데 왼쪽 괄호가 나오면 1을 더해주고 오른쪽 괄호가 나오면 1을 빼주는 방식으로 코드를 짰다.</li>
  <li>그러면 양쪽 괄호가 맞게 나오면 최종 결과값은 0일 것이고,</li>
  <li>왼쪽 괄호가 더 많다면 결과값이 양수일 것이다.</li>
  <li>오른쪽 괄호가 더 많다면 음수가 나오게 되는데 처음으로 음수가 나오는 시점부터 이 테스트케이스는 매치되지 않는다고 판단하고 탐색을 중단하고 오답처리하면 된다.</li>
  <li>
    <p>왜냐면 <code class="language-plaintext highlighter-rouge">)(</code> 같은 경우에는 끝까지 카운트하면 0이 나오게 되는데 숫자상으로 보면 정답이지만 사실 매치되지 않는 괄호쌍이기 때문에 <code class="language-plaintext highlighter-rouge">)</code>이 처음 나와서 음수가 되는 순간부터 이 문장에 있는 괄호들은 매치되지 않는다.<br /><br /></p>
  </li>
  <li>따라서 한 문장에 대한 탐색이 끝나고 난 후 결과값이 0일 때에만 <code class="language-plaintext highlighter-rouge">"YES"</code>를 출력하고 나머지 경우엔 <code class="language-plaintext highlighter-rouge">"NO"</code>를 출력하면 된다.<br /><br /></li>
</ul>

<script src="https://gist.github.com/miro7923/ddec4aae60e81f2a6e622a2acf426ec0.js"></script>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="BOJ" /><category term="Algorithm" /><category term="BOJ" /><category term="No9012" /><category term="String" /><category term="Java" /><summary type="html"><![CDATA[문제 링크 https://www.acmicpc.net/problem/9012]]></summary></entry><entry><title type="html">Java) BOJ 4949. 균형잡힌 세상</title><link href="http://localhost:4000/boj/boj4949/" rel="alternate" type="text/html" title="Java) BOJ 4949. 균형잡힌 세상" /><published>2022-02-06T00:00:00+09:00</published><updated>2022-02-06T00:00:00+09:00</updated><id>http://localhost:4000/boj/boj4949</id><content type="html" xml:base="http://localhost:4000/boj/boj4949/"><![CDATA[<h1 id="문제-링크">문제 링크</h1>
<hr />

<ul>
  <li><a href="https://www.acmicpc.net/problem/4949">https://www.acmicpc.net/problem/4949</a><br /><br /></li>
</ul>

<h1 id="문제">문제</h1>
<hr />

<ul>
  <li>
    <p>세계는 균형이 잘 잡혀있어야 한다. 양과 음, 빛과 어둠 그리고 왼쪽 괄호와 오른쪽 괄호처럼 말이다.<br /><br /></p>
  </li>
  <li>
    <p>정민이의 임무는 어떤 문자열이 주어졌을 때, 괄호들의 균형이 잘 맞춰져 있는지 판단하는 프로그램을 짜는 것이다.<br /><br /></p>
  </li>
  <li>
    <p>문자열에 포함되는 괄호는 소괄호(“()”) 와 대괄호(“[]”)로 2종류이고, 문자열이 균형을 이루는 조건은 아래와 같다.<br /><br /></p>
  </li>
  <li>모든 왼쪽 소괄호(“(“)는 오른쪽 소괄호(“)”)와만 짝을 이뤄야 한다.</li>
  <li>모든 왼쪽 대괄호(“[“)는 오른쪽 대괄호(“]”)와만 짝을 이뤄야 한다.</li>
  <li>모든 오른쪽 괄호들은 자신과 짝을 이룰 수 있는 왼쪽 괄호가 존재한다.</li>
  <li>모든 괄호들의 짝은 1:1 매칭만 가능하다. 즉, 괄호 하나가 둘 이상의 괄호와 짝지어지지 않는다.</li>
  <li>
    <p>짝을 이루는 두 괄호가 있을 때, 그 사이에 있는 문자열도 균형이 잡혀야 한다.<br /><br /></p>
  </li>
  <li>정민이를 도와 문자열이 주어졌을 때 균형잡힌 문자열인지 아닌지를 판단해보자. <br /><br /></li>
</ul>

<h1 id="입력">입력</h1>
<hr />

<ul>
  <li>하나 또는 여러줄에 걸쳐서 문자열이 주어진다.</li>
  <li>
    <p>각 문자열은 영문 알파벳, 공백, 소괄호(“( )”) 대괄호(“[ ]”)등으로 이루어져 있으며, 길이는 100글자보다 작거나 같다.<br /><br /></p>
  </li>
  <li>입력의 종료조건으로 맨 마지막에 점 하나(“.”)가 들어온다.  <br /><br /></li>
</ul>

<h1 id="출력">출력</h1>
<hr />

<ul>
  <li>각 줄마다 해당 문자열이 균형을 이루고 있으면 “yes”를, 아니면 “no”를 출력한다. <br /><br /><br /></li>
</ul>

<h1 id="-풀이">👀 풀이</h1>
<hr />

<ul>
  <li>
    <p>’(‘, ‘[’ 괄호가 나오면 스택에 넣고 ‘)’, ‘]’ 괄호가 나오면 스택에서 마지막 값을 pop해서 매치되는 괄호면 넘어가고 매치되지 않으면 오답처리하고 탐색을 중단하고 “no”를 출력하는 방식으로 짰는데…<br /><br /></p>
  </li>
  <li>문제를 제대로 안 읽어서 소문자 “yes”, “no”로 출력해야 할 것을 대문자 “YES”, “NO”로 출력해서 20%에서 계속 틀렸다 ㅠ.ㅠ</li>
  <li>문제를 제대로 읽자………….. 한시간 버렸다…….<br /><br /></li>
</ul>

<script src="https://gist.github.com/miro7923/a4b1ef77b01b458260552e3b3a1528f8.js"></script>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="BOJ" /><category term="Algorithm" /><category term="BOJ" /><category term="No4949" /><category term="String" /><category term="Java" /><summary type="html"><![CDATA[문제 링크 https://www.acmicpc.net/problem/4949]]></summary></entry><entry><title type="html">Java) BOJ 2941. 크로아티아 알파벳</title><link href="http://localhost:4000/boj/boj2941/" rel="alternate" type="text/html" title="Java) BOJ 2941. 크로아티아 알파벳" /><published>2022-02-06T00:00:00+09:00</published><updated>2022-02-06T00:00:00+09:00</updated><id>http://localhost:4000/boj/boj2941</id><content type="html" xml:base="http://localhost:4000/boj/boj2941/"><![CDATA[<h1 id="문제-링크">문제 링크</h1>
<ul>
  <li><a href="https://www.acmicpc.net/problem/2941">https://www.acmicpc.net/problem/2941</a><br /><br /></li>
</ul>

<h1 id="문제">문제</h1>
<ul>
  <li>예전에는 운영체제에서 크로아티아 알파벳을 입력할 수가 없었다. 따라서, 다음과 같이 크로아티아 알파벳을 변경해서 입력했다.</li>
  <li>예를 들어, ljes=njak은 크로아티아 알파벳 6개(lj, e, š, nj, a, k)로 이루어져 있다.</li>
  <li>단어가 주어졌을 때, 몇 개의 크로아티아 알파벳으로 이루어져 있는지 출력한다.</li>
  <li>dž는 무조건 하나의 알파벳으로 쓰이고, d와 ž가 분리된 것으로 보지 않는다. lj와 nj도 마찬가지이다. 위 목록에 없는 알파벳은 한 글자씩 센다.<br /><br /></li>
</ul>

<h1 id="입력">입력</h1>
<ul>
  <li>첫째 줄에 최대 100글자의 단어가 주어진다. 알파벳 소문자와 ‘-‘, ‘=’로만 이루어져 있다.</li>
  <li>단어는 크로아티아 알파벳으로 이루어져 있다. 문제 설명의 표에 나와있는 알파벳은 변경된 형태로 입력된다. <br /><br /></li>
</ul>

<h1 id="출력">출력</h1>
<ul>
  <li>입력으로 주어진 단어가 몇 개의 크로아티아 알파벳으로 이루어져 있는지 출력한다.<br /><br /><br /></li>
</ul>

<h1 id="-풀이">👀 풀이</h1>
<ul>
  <li>특정 크로아티아 문자들 (“c=”, “c-“, “dz=”, “d-“, “lj”, “nj”, “s=”, “z=”)의 첫글자가 나오면 다음에 연속되는 문자를 검사해서 지정된 크로아티아 문자이면 그 길이만큼 반복문의 반복자를 증가시키고 아니면 반복자를 1씩 증가시키면서 글자수를 셌다.</li>
  <li>이러한 조건문을 작성할 때 처음에는 반복자의 범위에 대한 예외처리를 해주지 않아서 제출하니까 <code class="language-plaintext highlighter-rouge">string index out of bounds</code>가 떴다.</li>
  <li>배열을 다룰 때엔 항상 인덱스 범위를 잘 지키는 것에 유의하자.<br /><br /></li>
</ul>

<script src="https://gist.github.com/miro7923/a797dc761e39b833f0a761d1978bf6c8.js"></script>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="BOJ" /><category term="Algorithm" /><category term="BOJ" /><category term="No2941" /><category term="String" /><category term="Java" /><summary type="html"><![CDATA[문제 링크 https://www.acmicpc.net/problem/2941]]></summary></entry><entry><title type="html">Java) BOJ 1316. 그룹 단어 체커</title><link href="http://localhost:4000/boj/boj1316/" rel="alternate" type="text/html" title="Java) BOJ 1316. 그룹 단어 체커" /><published>2022-02-06T00:00:00+09:00</published><updated>2022-02-06T00:00:00+09:00</updated><id>http://localhost:4000/boj/boj1316</id><content type="html" xml:base="http://localhost:4000/boj/boj1316/"><![CDATA[<h1 id="문제-링크">문제 링크</h1>
<ul>
  <li><a href="https://www.acmicpc.net/problem/1316">https://www.acmicpc.net/problem/1316</a><br /><br /></li>
</ul>

<h1 id="문제">문제</h1>
<ul>
  <li>그룹 단어란 단어에 존재하는 모든 문자에 대해서, 각 문자가 연속해서 나타나는 경우만을 말한다.</li>
  <li>예를 들면, ccazzzzbb는 c, a, z, b가 모두 연속해서 나타나고, kin도 k, i, n이 연속해서 나타나기 때문에 그룹 단어이지만,</li>
  <li>aabbbccb는 b가 떨어져서 나타나기 때문에 그룹 단어가 아니다.</li>
  <li>단어 N개를 입력으로 받아 그룹 단어의 개수를 출력하는 프로그램을 작성하시오.<br /><br /></li>
</ul>

<h1 id="입력">입력</h1>
<ul>
  <li>첫째 줄에 단어의 개수 N이 들어온다. N은 100보다 작거나 같은 자연수이다. 둘째 줄부터 N개의 줄에 단어가 들어온다.</li>
  <li>단어는 알파벳 소문자로만 되어있고 중복되지 않으며, 길이는 최대 100이다. <br /><br /></li>
</ul>

<h1 id="출력">출력</h1>
<ul>
  <li>첫째 줄에 그룹 단어의 개수를 출력한다.<br /><br /><br /></li>
</ul>

<h1 id="-풀이">👀 풀이</h1>
<ul>
  <li>
    <p>문제 이해가 잘 되지 않아서 질문게시판의 문제 해설을 참고했다.<br /><br /></p>
  </li>
  <li>
    <ol>
      <li>현재 문자가 이미 나온 적이 있고</li>
    </ol>
  </li>
  <li>
    <ol>
      <li>바로 이전 문자가 아니면</li>
    </ol>
  </li>
  <li>
    <p>-&gt; 그 단어는 그룹 단어가 아니다.<br /><br /></p>
  </li>
  <li>이 흐름에 따라 알파벳이 등장했는지 확인할 boolean 배열을 만들어 알파벳이 이전에 나왔는지 확인한 후</li>
  <li>나온 적이 없고 바로 앞 문자와 같으면 그룹단어로 카운트하였고</li>
  <li>나온 적이 있는데 바로 앞 문자와 같지 않으면 더 이상 확인을 중단하고 다음 문자를 확인하는 방식으로 코드를 짰다.<br /><br /></li>
</ul>

<script src="https://gist.github.com/miro7923/64c6fbcb9681289f77807122ffbdf303.js"></script>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="BOJ" /><category term="Algorithm" /><category term="BOJ" /><category term="No1316" /><category term="String" /><category term="Java" /><summary type="html"><![CDATA[문제 링크 https://www.acmicpc.net/problem/1316]]></summary></entry><entry><title type="html">Java) BOJ 1259. 팰린드롬수</title><link href="http://localhost:4000/boj/boj1259/" rel="alternate" type="text/html" title="Java) BOJ 1259. 팰린드롬수" /><published>2022-02-06T00:00:00+09:00</published><updated>2022-02-06T00:00:00+09:00</updated><id>http://localhost:4000/boj/boj1259</id><content type="html" xml:base="http://localhost:4000/boj/boj1259/"><![CDATA[<h1 id="문제-링크">문제 링크</h1>
<hr />

<ul>
  <li><a href="https://www.acmicpc.net/problem/1259">https://www.acmicpc.net/problem/1259</a><br /><br /></li>
</ul>

<h1 id="문제">문제</h1>
<hr />

<ul>
  <li>
    <p>어떤 단어를 뒤에서부터 읽어도 똑같다면 그 단어를 팰린드롬이라고 한다. ‘radar’, ‘sees’는 팰린드롬이다.<br /><br /></p>
  </li>
  <li>수도 팰린드롬으로 취급할 수 있다. 수의 숫자들을 뒤에서부터 읽어도 같다면 그 수는 팰린드롬수다. 121, 12421 등은 팰린드롬수다.</li>
  <li>123, 1231은 뒤에서부터 읽으면 다르므로 팰린드롬수가 아니다.</li>
  <li>또한 10도 팰린드롬수가 아닌데, 앞에 무의미한 0이 올 수 있다면 010이 되어 팰린드롬수로 취급할 수도 있지만,</li>
  <li>특별히 이번 문제에서는 무의미한 0이 앞에 올 수 없다고 하자. <br /><br /></li>
</ul>

<h1 id="입력">입력</h1>
<hr />

<ul>
  <li>입력은 여러 개의 테스트 케이스로 이루어져 있으며, 각 줄마다 1 이상 99999 이하의 정수가 주어진다.</li>
  <li>입력의 마지막 줄에는 0이 주어지며, 이 줄은 문제에 포함되지 않는다.  <br /><br /></li>
</ul>

<h1 id="출력">출력</h1>
<hr />

<ul>
  <li>각 줄마다 주어진 수가 팰린드롬수면 ‘yes’, 아니면 ‘no’를 출력한다. <br /><br /><br /></li>
</ul>

<h1 id="-풀이">👀 풀이</h1>
<hr />

<ul>
  <li>예제의 팰린드롬수를 보면 수의 개수가 짝수개일 땐 절반으로 나눈 앞뒤가 같아야 하고</li>
  <li>
    <p>홀수개일 땐 가운데 숫자를 제외한 나머지 앞뒤가 같아야 한다.<br /><br /></p>
  </li>
  <li>그래서 반복문으로 반복자는 문자열 길이의 절반까지만 반복하며</li>
  <li>첫 글자와 맨 뒤 글자를 비교하면서 첫 글자를 가리키는 반복자는 증가시키고 끝 글자를 가리키는 반복자는 감소시켜가면서</li>
  <li>두 반복자간의 거리를 좁히면서 검사하면 해당 수가 팰린드롬인지 아닌지 쉽게 확인할 수 있다.<br /><br /></li>
</ul>

<script src="https://gist.github.com/miro7923/f713c3925b8bc32bcf05f5e75d0cceaa.js"></script>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="BOJ" /><category term="Algorithm" /><category term="BOJ" /><category term="No1259" /><category term="String" /><category term="Java" /><summary type="html"><![CDATA[문제 링크 https://www.acmicpc.net/problem/1259]]></summary></entry></feed>