<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2022-04-01T08:41:59+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Yujin Dev Log</title><subtitle>개발 공부하는 블로그</subtitle><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><entry><title type="html">Python) 이것이 취업을 위한 코딩테스트다 07 실전문제 2. 부품 찾기</title><link href="http://localhost:4000/boj/CodingTestBook-07-5-py/" rel="alternate" type="text/html" title="Python) 이것이 취업을 위한 코딩테스트다 07 실전문제 2. 부품 찾기" /><published>2022-04-01T00:00:00+09:00</published><updated>2022-04-01T00:00:00+09:00</updated><id>http://localhost:4000/boj/CodingTestBook-07-5-py</id><content type="html" xml:base="http://localhost:4000/boj/CodingTestBook-07-5-py/"><![CDATA[<h1 id="문제-출처">문제 출처</h1>
<hr />

<ul>
  <li>이것이 취업을 위한 코딩테스트다 with 파이썬</li>
  <li>Chapter 07 - 실전문제 2. 부품 찾기<br /><br /></li>
</ul>

<h1 id="제한">제한</h1>
<hr />

<ul>
  <li>시간 제한 : 1 초</li>
  <li>메모리 제한 : 128 MB<br /><br /></li>
</ul>

<h1 id="문제">문제</h1>
<hr />

<ul>
  <li>동빈이네 전자 매장에는 부품이 N개 있다. 각 부품은 정수 형태의 고유한 번호가 있다. 어느 날 손님이 M개 종류의 부품을 대량으로 구매하겠다며 당일 날 견적서를 요청했다. 동빈이는 때를 놓치지 않고 손님이 문의한 부품 M개 종류를 모두 확인해서 견적서를 작성해야 한다. 이때 가게 안에 부품이 모두 있는지 확인하는 프로그램을 작성해보자.</li>
  <li>손님이 요청한 부품 번호의 순서대로 부품을 확인해 부품이 있으면 yes를, 없으면 no를 출력한다. 구분은 공백으로 한다.<br /><br /></li>
</ul>

<h1 id="입력">입력</h1>
<hr />

<ul>
  <li>첫째 줄에 정수 N이 주어진다. (1 &lt;= N &lt;= 1,000,000)</li>
  <li>둘째 줄에는 공백으로 구분하여 N개의 정수가 주어진다. 이때 정수는 1보다 크고 1,000,000 이하이다.</li>
  <li>셋째 줄에는 정수 M이 주어진다. (1 &lt;= M &lt;= 100,000)</li>
  <li>넷째 줄에는 공백으로 구분하여 M개의 정수가 주어진다. 이때 정수는 1보다 크고 1,000,000 이하이다.<br /><br /></li>
</ul>

<h1 id="출력">출력</h1>
<hr />

<ul>
  <li>첫째 줄에 공백으로 구분하여 각 부품이 존재하면 yes를, 없으면 no를 출력한다.<br /><br /><br /></li>
</ul>

<h1 id="-풀이">👀 풀이</h1>
<hr />

<ul>
  <li>이진탐색으로 풀 수 있는 문제이지만 책에는 이진탐색 외에도 두 가지 방법을 더 사용해 푸는 방법이 나와 있어서 모두 연습해 보았다.</li>
  <li>이진탐색으로 풀 경우에는 가게에 있는 부품 배열을 먼저 오름차순으로 정렬한 후에 손님 배열의 원소를 하나씩 이진탐색으로 찾는다.<br /><br /></li>
</ul>

<h1 id="코드">코드</h1>
<hr />

<ul>
  <li>이진탐색 코드</li>
</ul>

<script src="https://gist.github.com/miro7923/c1027fffb78b83143e2238e337f9fd37.js"></script>

<ul>
  <li>계수정렬을 사용한 코드</li>
</ul>

<script src="https://gist.github.com/miro7923/cac49cf2696f190a80f965bd68662e02.js"></script>

<ul>
  <li>집합 자료형을 사용한 코드</li>
</ul>

<script src="https://gist.github.com/miro7923/71c4854afe7c44680d6208f1caabab6a.js"></script>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="BOJ" /><category term="Algorithm" /><category term="BinarySearch" /><category term="Python" /><summary type="html"><![CDATA[문제 출처 이것이 취업을 위한 코딩테스트다 with 파이썬 Chapter 07 - 실전문제 2. 부품 찾기 제한 시간 제한 : 1 초 메모리 제한 : 128 MB]]></summary></entry><entry><title type="html">프로젝트) Cafe(웹 사이트) 만들기 20 - 파일업로드 기능 추가</title><link href="http://localhost:4000/project%20log/cafe-project-20/" rel="alternate" type="text/html" title="프로젝트) Cafe(웹 사이트) 만들기 20 - 파일업로드 기능 추가" /><published>2022-03-31T00:00:00+09:00</published><updated>2022-03-31T00:00:00+09:00</updated><id>http://localhost:4000/project%20log/cafe-project-20</id><content type="html" xml:base="http://localhost:4000/project%20log/cafe-project-20/"><![CDATA[<h1 id="개발환경">개발환경</h1>
<ul>
  <li>MacBook Air (M1, 2020)</li>
  <li>OpenJDK 8</li>
  <li>Eclipse 2021-12</li>
  <li>tomcat 8.5</li>
  <li>MySQL Workbench 8.0.19<br /><br /><br /></li>
</ul>

<h1 id="시작">시작</h1>
<ul>
  <li>2022.3.4 ~ <br /><br /><br /></li>
</ul>

<h1 id="주제">주제</h1>
<ul>
  <li>웹 백엔드 수업 중 중간 과제로 개인 프로젝트를 진행하게 되었다.</li>
  <li>회원가입/로그인/탈퇴 등 기본적인 회원관리 시스템을 가진 웹 사이트를 만드는 것이다. 주어진 기한은 <code class="language-plaintext highlighter-rouge">한 달</code></li>
  <li>나는 <code class="language-plaintext highlighter-rouge">다음 카페</code>를 소규모로 만들어 보기로 했다. 평소 자주 이용하기도 했고 과제의 평가 기준에서 요구하는 기능들을 다 담고 있기도 했기 때문에 이번 기회에 구현해 보면 그동안 배운 것들을 활용하기에 좋을 거 같았다.</li>
  <li>평가 기준에 사이트의 디자인 구현(HTML/CSS 등 프론트엔드)은 포함되지 않기 때문에 본인이 쓰고 싶은 HTML/CSS 템플릿을 구한 뒤 회원 관리 기능을 구현하면 된다.<br /><br /><br /></li>
</ul>

<h1 id="진행상황">진행상황</h1>
<ul>
  <li>파일업로드 기능을 추가했다.</li>
  <li><code class="language-plaintext highlighter-rouge">COS</code> 라이브러리를 사용했다.</li>
</ul>

<h2 id="cos-라이브러리-다운로드-및-설치">COS 라이브러리 다운로드 및 설치</h2>
<ul>
  <li><a href="http://www.servlets.com/cos/">http://www.servlets.com/</a></li>
  <li>위 사이트에 접속해서 하단에 <code class="language-plaintext highlighter-rouge">Download</code> 탭에 있는 압축파일을 다운로드 한다.</li>
  <li>다운받은 파일 압축을 푼 후 <code class="language-plaintext highlighter-rouge">cos.jar</code> 파일을 <code class="language-plaintext highlighter-rouge">WEB-INF/lib</code> 폴더에 넣는다.</li>
</ul>

<h2 id="boardwritejsp">boardWrite.jsp</h2>

<div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;section</span> <span class="na">class=</span><span class="s">"MOD_SUBNAVIGATION1"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;div</span> <span class="na">data-layout=</span><span class="s">"_r"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;jsp:include </span><span class="na">page=</span><span class="s">"../inc/leftNav.jsp"</span><span class="nt">&gt;&lt;/jsp:include&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">data-layout=</span><span class="s">"al-o1 de-o2 de10"</span> <span class="na">class=</span><span class="s">"MOD_SUBNAVIGATION1_Page"</span><span class="nt">&gt;</span>
    	<span class="nt">&lt;h2&gt;</span>게시글 작성<span class="nt">&lt;/h2&gt;</span>
    	<span class="nt">&lt;form</span> <span class="na">name=</span><span class="s">"write"</span> <span class="na">action=</span><span class="s">"./BoardWriteAction.bo"</span> <span class="na">method=</span><span class="s">"post"</span> <span class="na">enctype=</span><span class="s">"multipart/form-data"</span> <span class="na">onsubmit=</span><span class="s">"return finalCheck();"</span><span class="nt">&gt;</span>
    	<span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"hidden"</span> <span class="na">name=</span><span class="s">"id"</span> <span class="na">value=</span><span class="s">"</span><span class="nt">&lt;%=</span><span class="n">id</span><span class="nt">%&gt;</span><span class="s">"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"formRow"</span><span class="nt">&gt;</span>
          <span class="nt">&lt;label</span> <span class="na">for=</span><span class="s">"MOD_TEXTFORM_NameField"</span><span class="nt">&gt;</span>제목 <span class="nt">&lt;/label&gt;&lt;input</span> <span class="na">type=</span><span class="s">"text"</span> <span class="na">name=</span><span class="s">"title"</span> <span class="na">id=</span><span class="s">"title"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;/div&gt;</span>
        <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"formRow"</span><span class="nt">&gt;</span>
          <span class="nt">&lt;label</span> <span class="na">for=</span><span class="s">"MOD_TEXTFORM_MsgField"</span><span class="nt">&gt;</span>내용 <span class="nt">&lt;/label&gt;</span>
          <span class="nt">&lt;textarea</span> <span class="na">id=</span><span class="s">"MOD_TEXTFORM_MsgField"</span> <span class="na">name=</span><span class="s">"content"</span><span class="nt">&gt;&lt;/textarea&gt;</span>
        <span class="nt">&lt;/div&gt;</span>
        <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"formRow"</span><span class="nt">&gt;</span>
          <span class="nt">&lt;label</span> <span class="na">for=</span><span class="s">"MOD_TEXTFORM_NameField"</span><span class="nt">&gt;</span>파일 등록 <span class="nt">&lt;/label&gt;&lt;input</span> <span class="na">type=</span><span class="s">"file"</span> <span class="na">name=</span><span class="s">"file"</span> <span class="na">id=</span><span class="s">"file"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;/div&gt;</span>
        <span class="nt">&lt;button</span> <span class="na">type=</span><span class="s">"submit"</span> <span class="na">class=</span><span class="s">"btn"</span><span class="nt">&gt;</span>글 등록<span class="nt">&lt;/button&gt;</span>
      <span class="nt">&lt;/form&gt;</span>
      <span class="nt">&lt;/div&gt;</span>
  <span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/section&gt;</span>
</code></pre></div></div>

<ul>
  <li>기존에 글을 작성하던 페이지에 업로드 할 파일을 등록하는 태그를 추가했다.</li>
  <li>사용자가 선택한 파일 객체가 전송될 수 있도록 인코딩 타입을 <code class="language-plaintext highlighter-rouge">multipart/form-data</code>로 지정해 주었다.</li>
</ul>

<h2 id="boardwriteactionjava">BoardWriteAction.java</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.project.cafe.board.action</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.servlet.ServletContext</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletRequest</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletResponse</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">com.oreilly.servlet.MultipartRequest</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.oreilly.servlet.multipart.DefaultFileRenamePolicy</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.project.cafe.action.Action</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.project.cafe.action.ActionForward</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.project.cafe.board.db.BoardDAO</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.project.cafe.board.db.BoardDTO</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">BoardWriteAction</span> <span class="kd">implements</span> <span class="nc">Action</span> 
<span class="o">{</span>
    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="nc">ActionForward</span> <span class="nf">execute</span><span class="o">(</span><span class="nc">HttpServletRequest</span> <span class="n">request</span><span class="o">,</span> <span class="nc">HttpServletResponse</span> <span class="n">response</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">Exception</span> 
    <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"M : BoardWriteAction - execute() 호출"</span><span class="o">);</span>
		
        <span class="c1">// 한글처리</span>
        <span class="n">request</span><span class="o">.</span><span class="na">setCharacterEncoding</span><span class="o">(</span><span class="s">"UTF-8"</span><span class="o">);</span>
		
        <span class="c1">// 파일 업로드 먼저 하기</span>
        <span class="c1">// 1. 저장경로 생성</span>
        <span class="nc">ServletContext</span> <span class="n">ctx</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getServletContext</span><span class="o">();</span>
        <span class="nc">String</span> <span class="n">realPath</span> <span class="o">=</span> <span class="n">ctx</span><span class="o">.</span><span class="na">getRealPath</span><span class="o">(</span><span class="s">"/upload"</span><span class="o">);</span>
		
        <span class="c1">// 2. 파일의 저장크기</span>
        <span class="kt">int</span> <span class="n">maxSize</span> <span class="o">=</span> <span class="mi">10</span> <span class="o">*</span> <span class="mi">1024</span> <span class="o">*</span> <span class="mi">1024</span><span class="o">;</span> <span class="c1">// 10MB</span>
		
        <span class="c1">// 3. 파일업로드(객체 생성)</span>
        <span class="nc">MultipartRequest</span> <span class="n">multi</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">MultipartRequest</span><span class="o">(</span>
                <span class="n">request</span><span class="o">,</span> 
                <span class="n">realPath</span><span class="o">,</span>
                <span class="n">maxSize</span><span class="o">,</span>
                <span class="s">"utf-8"</span><span class="o">,</span>
                <span class="k">new</span> <span class="nf">DefaultFileRenamePolicy</span><span class="o">()</span>
                <span class="o">);</span>
		
        <span class="c1">// 파라메터를 DTO에 저장</span>
        <span class="c1">// MultipartRequest 객체 안에 들은 파라미터 정보에 접근해야 한다.</span>
        <span class="nc">BoardDTO</span> <span class="n">dto</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BoardDTO</span><span class="o">();</span>
        <span class="n">dto</span><span class="o">.</span><span class="na">setContent</span><span class="o">(</span><span class="n">multi</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"content"</span><span class="o">));</span>
        <span class="n">dto</span><span class="o">.</span><span class="na">setId</span><span class="o">(</span><span class="n">multi</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"id"</span><span class="o">));</span>
        <span class="n">dto</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="n">multi</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"title"</span><span class="o">));</span>
        
        <span class="c1">// 파일이름에 접근할 때엔 getFilesystemName() 메소드 사용</span>
        <span class="n">dto</span><span class="o">.</span><span class="na">setFile</span><span class="o">(</span><span class="n">multi</span><span class="o">.</span><span class="na">getFilesystemName</span><span class="o">(</span><span class="s">"file"</span><span class="o">));</span>
		
        <span class="c1">// 사용자 ip주소 저장</span>
        <span class="n">dto</span><span class="o">.</span><span class="na">setIp</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getRemoteAddr</span><span class="o">());</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"M : "</span><span class="o">+</span><span class="n">dto</span><span class="o">);</span>
		
        <span class="c1">// DB에 DTO 보내서 저장</span>
        <span class="nc">BoardDAO</span> <span class="n">dao</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BoardDAO</span><span class="o">();</span>
        <span class="n">dao</span><span class="o">.</span><span class="na">insertPost</span><span class="o">(</span><span class="n">dto</span><span class="o">);</span>
		
        <span class="c1">// 완료되면 글 목록 페이지로 이동</span>
        <span class="nc">ActionForward</span> <span class="n">forward</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ActionForward</span><span class="o">();</span>
        <span class="n">forward</span><span class="o">.</span><span class="na">setPath</span><span class="o">(</span><span class="s">"./BoardList.bo"</span><span class="o">);</span>
        <span class="n">forward</span><span class="o">.</span><span class="na">setRedirect</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
		
        <span class="k">return</span> <span class="n">forward</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h2 id="boarddao---insertpostdto">BoardDAO - insertPost(dto)</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kt">void</span> <span class="nf">insertPost</span><span class="o">(</span><span class="nc">BoardDTO</span> <span class="n">dto</span><span class="o">)</span>
<span class="o">{</span>
    <span class="kt">int</span> <span class="n">postNum</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> 
		
    <span class="k">try</span> <span class="o">{</span>
        <span class="c1">// 1.2. DB 연결</span>
        <span class="n">con</span> <span class="o">=</span> <span class="n">getCon</span><span class="o">();</span>
			
        <span class="c1">// 3. sql 작성 &amp; pstmt 객체</span>
        <span class="c1">// 이번 차례에 DB에 저장될 글번호 계산</span>
        <span class="n">sql</span> <span class="o">=</span> <span class="s">"select max(num) from cafe_board"</span><span class="o">;</span>
        <span class="n">pstmt</span> <span class="o">=</span> <span class="n">con</span><span class="o">.</span><span class="na">prepareStatement</span><span class="o">(</span><span class="n">sql</span><span class="o">);</span>
			
        <span class="n">rs</span> <span class="o">=</span> <span class="n">pstmt</span><span class="o">.</span><span class="na">executeQuery</span><span class="o">();</span>
			
        <span class="k">if</span> <span class="o">(</span><span class="n">rs</span><span class="o">.</span><span class="na">next</span><span class="o">())</span>
            <span class="n">postNum</span> <span class="o">=</span> <span class="n">rs</span><span class="o">.</span><span class="na">getInt</span><span class="o">(</span><span class="mi">1</span><span class="o">)</span> <span class="o">+</span> <span class="mi">1</span><span class="o">;</span>
			
        <span class="c1">// 3. 데이터 삽입용 sql 작성 &amp; pstmt 설정</span>
        <span class="n">sql</span> <span class="o">=</span> <span class="s">"insert into cafe_board(num, id, title, content, readcount, re_ref, re_lev, re_seq, date, ip, file) "</span>
                <span class="o">+</span> <span class="s">"values(?,?,?,?,?,?,?,?,now(),?,?)"</span><span class="o">;</span>
        <span class="n">pstmt</span> <span class="o">=</span> <span class="n">con</span><span class="o">.</span><span class="na">prepareStatement</span><span class="o">(</span><span class="n">sql</span><span class="o">);</span>
			
        <span class="c1">// ? 채우기</span>
        <span class="n">pstmt</span><span class="o">.</span><span class="na">setInt</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="n">postNum</span><span class="o">);</span>
        <span class="n">pstmt</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="mi">2</span><span class="o">,</span> <span class="n">dto</span><span class="o">.</span><span class="na">getId</span><span class="o">());</span>
        <span class="n">pstmt</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="mi">3</span><span class="o">,</span> <span class="n">dto</span><span class="o">.</span><span class="na">getTitle</span><span class="o">());</span>
        <span class="n">pstmt</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="mi">4</span><span class="o">,</span> <span class="n">dto</span><span class="o">.</span><span class="na">getContent</span><span class="o">());</span>
        <span class="n">pstmt</span><span class="o">.</span><span class="na">setInt</span><span class="o">(</span><span class="mi">5</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span> <span class="c1">// 처음에 조회수 0</span>
        <span class="n">pstmt</span><span class="o">.</span><span class="na">setInt</span><span class="o">(</span><span class="mi">6</span><span class="o">,</span> <span class="n">postNum</span><span class="o">);</span> <span class="c1">// 답글의 그룹. 일반글의 글번호와 동일하게 만듦</span>
        <span class="n">pstmt</span><span class="o">.</span><span class="na">setInt</span><span class="o">(</span><span class="mi">7</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span> <span class="c1">// 답글의 레벨. 처음엔 들여쓰기 없음</span>
        <span class="n">pstmt</span><span class="o">.</span><span class="na">setInt</span><span class="o">(</span><span class="mi">8</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span> <span class="c1">// 답글의 순서. 처음엔 가장 최상단</span>
        <span class="n">pstmt</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="mi">9</span><span class="o">,</span> <span class="n">dto</span><span class="o">.</span><span class="na">getIp</span><span class="o">());</span>
			
        <span class="k">if</span> <span class="o">(</span><span class="n">dto</span><span class="o">.</span><span class="na">getFile</span><span class="o">()</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span>
            <span class="n">pstmt</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="mi">10</span><span class="o">,</span> <span class="s">"없음"</span><span class="o">);</span>
        <span class="k">else</span> 
            <span class="n">pstmt</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="mi">10</span><span class="o">,</span> <span class="n">dto</span><span class="o">.</span><span class="na">getFile</span><span class="o">());</span>
			
        <span class="c1">// 4. sql 실행</span>
        <span class="n">pstmt</span><span class="o">.</span><span class="na">executeUpdate</span><span class="o">();</span>
			
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"DAO : 게시글 DB 삽입 완료"</span><span class="o">);</span>
    <span class="o">}</span>
    <span class="k">catch</span> <span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
    <span class="o">}</span>
    <span class="k">finally</span> <span class="o">{</span>
        <span class="n">closeDB</span><span class="o">();</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>기존에 새 게시글을 <code class="language-plaintext highlighter-rouge">DB</code> 삽입하는 동작을 수행하던 <code class="language-plaintext highlighter-rouge">BoardWriteAction</code>과 <code class="language-plaintext highlighter-rouge">insertPost()</code> 메소드를 약간 수정했다.</li>
</ul>

<h2 id="boardcontentjsp">boardContent.jsp</h2>

<div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;tbody&gt;</span>
  <span class="nt">&lt;tr&gt;</span>
    <span class="nt">&lt;td</span> <span class="na">colspan=</span><span class="s">"5"</span> <span class="na">style=</span><span class="s">"white-space:pre-wrap; word-wrap:break-word; word-break: break-all;"</span><span class="nt">&gt;&lt;%=</span><span class="n">dto</span><span class="o">.</span><span class="na">getContent</span><span class="o">()</span> <span class="nt">%&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/td&gt;</span>
  <span class="nt">&lt;/tr&gt;</span>
  <span class="nt">&lt;tr&gt;</span>
    <span class="nt">&lt;td</span> <span class="na">colspan=</span><span class="s">"2"</span><span class="nt">&gt;</span>첨부파일<span class="nt">&lt;/td&gt;</span>
    <span class="nt">&lt;td</span> <span class="na">colspan=</span><span class="s">"3"</span><span class="nt">&gt;</span>
    <span class="c">&lt;!-- 첨부파일이 있을 때에만 하이퍼링크 연결 --&gt;</span>
      <span class="nt">&lt;%</span> <span class="k">if</span> <span class="o">(</span><span class="n">dto</span><span class="o">.</span><span class="na">getFile</span><span class="o">()</span> <span class="o">==</span> <span class="kc">null</span> <span class="o">||</span> <span class="n">dto</span><span class="o">.</span><span class="na">getFile</span><span class="o">().</span><span class="na">equals</span><span class="o">(</span><span class="s">"없음"</span><span class="o">))</span> <span class="o">{</span> <span class="nt">%&gt;</span>
        <span class="nt">&lt;%=</span><span class="n">dto</span><span class="o">.</span><span class="na">getFile</span><span class="o">()</span> <span class="nt">%&gt;</span>
      <span class="nt">&lt;%</span> <span class="o">}</span>
        <span class="k">else</span> <span class="o">{</span> <span class="nt">%&gt;</span>
        <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"./BoardFileDownloadAction.bo?file_name=</span><span class="nt">&lt;%=</span><span class="n">dto</span><span class="o">.</span><span class="na">getFile</span><span class="o">()</span> <span class="nt">%&gt;</span><span class="s">"</span><span class="nt">&gt;&lt;%=</span><span class="n">dto</span><span class="o">.</span><span class="na">getFile</span><span class="o">()</span> <span class="nt">%&gt;&lt;/a&gt;</span>
      <span class="nt">&lt;%</span> <span class="o">}</span> <span class="nt">%&gt;</span>
    <span class="nt">&lt;/td&gt;</span>
  <span class="nt">&lt;/tr&gt;</span>
<span class="nt">&lt;/tbody&gt;</span>
</code></pre></div></div>

<ul>
  <li>게시글 내용을 보여주는 페이지에서는 첨부파일이 있을 때에만 하이퍼링크를 연결하도록 했다.</li>
</ul>

<p align="center"><img src="../../assets/images/fileDownload.png" width="500" /></p>
<p align="center"><img src="../../assets/images/fileDownloadNull.png" width="500" /></p>

<ul>
  <li>여기까지 하면 파일 유무에 따라서 하이퍼링크 연결까지 된다.</li>
</ul>

<h2 id="boardfiledownloadactionjava">BoardFileDownloadAction.java</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.project.cafe.board.action</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.io.FileInputStream</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.net.URLEncoder</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.servlet.ServletContext</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.ServletOutputStream</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletRequest</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletResponse</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">com.project.cafe.action.Action</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.project.cafe.action.ActionForward</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">BoardFileDownloadAction</span> <span class="kd">implements</span> <span class="nc">Action</span> 
<span class="o">{</span>
    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="nc">ActionForward</span> <span class="nf">execute</span><span class="o">(</span><span class="nc">HttpServletRequest</span> <span class="n">request</span><span class="o">,</span> <span class="nc">HttpServletResponse</span> <span class="n">response</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">Exception</span> 
    <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"M : BoardFileDownloadAction - execute() 호출"</span><span class="o">);</span>
		
        <span class="c1">// 전달된 파일 이름 저장</span>
        <span class="nc">String</span> <span class="n">fileName</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"file_name"</span><span class="o">);</span>
		
        <span class="c1">// 서버에 업로드 된 폴더 찾기</span>
        <span class="nc">String</span> <span class="n">savePath</span> <span class="o">=</span> <span class="s">"upload"</span><span class="o">;</span>
		
        <span class="c1">// 서버에 업로드 된 파일의 위치 계산(물리적 경로)</span>
        <span class="nc">ServletContext</span> <span class="n">ctx</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getServletContext</span><span class="o">();</span>
        <span class="nc">String</span> <span class="n">downloadPath</span> <span class="o">=</span> <span class="n">ctx</span><span class="o">.</span><span class="na">getRealPath</span><span class="o">(</span><span class="n">savePath</span><span class="o">);</span>
		
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"downloadPath : "</span><span class="o">+</span><span class="n">downloadPath</span><span class="o">);</span>
		
        <span class="c1">// 다운로드 할 파일의 전체 경로 계산</span>
        <span class="c1">// 사용자 OS에 따라 연결문자 구분</span>
        <span class="nc">String</span> <span class="n">filePath</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
        <span class="nc">String</span> <span class="n">agent</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getHeader</span><span class="o">(</span><span class="s">"User-Agent"</span><span class="o">);</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"agent: "</span><span class="o">+</span><span class="n">agent</span><span class="o">);</span>
		
        <span class="k">if</span> <span class="o">(</span><span class="n">agent</span><span class="o">.</span><span class="na">indexOf</span><span class="o">(</span><span class="s">"Windows"</span><span class="o">)</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="o">)</span>
            <span class="n">filePath</span> <span class="o">=</span> <span class="n">downloadPath</span> <span class="o">+</span> <span class="s">"\\"</span> <span class="o">+</span> <span class="n">fileName</span><span class="o">;</span>
        <span class="k">else</span>
            <span class="n">filePath</span> <span class="o">=</span> <span class="n">downloadPath</span> <span class="o">+</span> <span class="s">"/"</span> <span class="o">+</span> <span class="n">fileName</span><span class="o">;</span>
		
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"filePath : "</span><span class="o">+</span><span class="n">filePath</span><span class="o">);</span>
		
        <span class="c1">///////////////////////////////////////////</span>
		
        <span class="c1">// 파일을 저장하는 배열(버퍼)</span>
        <span class="kt">byte</span><span class="o">[]</span> <span class="n">b</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">byte</span><span class="o">[</span><span class="mi">4096</span><span class="o">];</span> <span class="c1">// 4kb</span>
		
        <span class="c1">// 데이터를 주고받을 수 있는 통로 만들기</span>
        <span class="nc">FileInputStream</span> <span class="n">fis</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">FileInputStream</span><span class="o">(</span><span class="n">filePath</span><span class="o">);</span>
		
        <span class="c1">// MIME 타입 얻어오기</span>
        <span class="nc">String</span> <span class="n">mimeType</span> <span class="o">=</span> <span class="n">ctx</span><span class="o">.</span><span class="na">getMimeType</span><span class="o">(</span><span class="n">filePath</span><span class="o">);</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"mimeType: "</span><span class="o">+</span><span class="n">mimeType</span><span class="o">);</span>
		
        <span class="c1">// MIME 타입 정보가 없는 경우</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">mimeType</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span>
        <span class="o">{</span>
            <span class="c1">// 실제로 잘 알려지지 않은 이진파일을 의미하며, 브라우저가 자동 실행하지 않고 실행여부를 질문한다.</span>
            <span class="n">mimeType</span> <span class="o">=</span> <span class="s">"application/octet-stream"</span><span class="o">;</span>
        <span class="o">}</span>
		
        <span class="c1">// 브라우저가 전달받은 MIME 타입으로 응답정보 설정</span>
        <span class="n">response</span><span class="o">.</span><span class="na">setContentType</span><span class="o">(</span><span class="n">mimeType</span><span class="o">);</span>
		
        <span class="c1">// IE / 그 외 나머지 브라우저 구분</span>
        <span class="kt">boolean</span> <span class="n">ieBrowser</span> <span class="o">=</span> <span class="o">(</span><span class="n">agent</span><span class="o">.</span><span class="na">indexOf</span><span class="o">(</span><span class="s">"MISE"</span><span class="o">)</span> <span class="o">&gt;</span> <span class="o">-</span><span class="mi">1</span> <span class="o">||</span> <span class="n">agent</span><span class="o">.</span><span class="na">indexOf</span><span class="o">(</span><span class="s">"Trident"</span><span class="o">)</span> <span class="o">&gt;</span> <span class="o">-</span><span class="mi">1</span><span class="o">);</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">ieBrowser</span><span class="o">)</span>
        <span class="o">{</span>
            <span class="c1">// 인터넷 익스플로러일 때</span>
            <span class="c1">// 인터넷 익스플로러에서는 한글 다운로드시 한글 인코딩이 깨져서 utf-8로 바꿔준다.</span>
            <span class="c1">// 인터넷 익스플로러에서는 공백문자 표시가 [+]라서 [%20]으로 바꿔준다.</span>
            <span class="n">fileName</span> <span class="o">=</span> <span class="nc">URLEncoder</span><span class="o">.</span><span class="na">encode</span><span class="o">(</span><span class="n">fileName</span><span class="o">,</span> <span class="s">"utf-8"</span><span class="o">).</span><span class="na">replaceAll</span><span class="o">(</span><span class="s">"\\+"</span><span class="o">,</span> <span class="s">"%20"</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="k">else</span>
        <span class="o">{</span>
            <span class="c1">// 그 외 브라우저</span>
            <span class="c1">// 브라우저 다운로드시 한글 깨짐 처리</span>
            <span class="c1">// 8859-1 &lt; EUC-KR &lt; MS949 &lt; UTF-8</span>
            <span class="c1">// -&gt; 방향으로 갈수록 인코딩 범위가 커짐 (한글처리할 수 있는 범위가 늘어남)</span>
            <span class="n">fileName</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">String</span><span class="o">(</span><span class="n">fileName</span><span class="o">.</span><span class="na">getBytes</span><span class="o">(</span><span class="s">"utf-8"</span><span class="o">),</span> <span class="s">"iso-8859-1"</span><span class="o">);</span>
        <span class="o">}</span>
		
        <span class="c1">// 브라우저에서 해석되는(미리보기 형태로 바로 볼 수 있는) 파일도 다운로드 형태로 처리가능하게 변경</span>
        <span class="n">response</span><span class="o">.</span><span class="na">setHeader</span><span class="o">(</span><span class="s">"Content-Disposition"</span><span class="o">,</span> <span class="s">"attachment; filename="</span> <span class="o">+</span> <span class="n">fileName</span><span class="o">);</span>
		
        <span class="c1">// 다운로드할 파일 출력</span>
        <span class="nc">ServletOutputStream</span> <span class="n">out</span> <span class="o">=</span> <span class="n">response</span><span class="o">.</span><span class="na">getOutputStream</span><span class="o">();</span>
		
        <span class="kt">int</span> <span class="n">data</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="c1">// 데이터를 배열을 사용해 배열의 길이만큼 잘라서 data에 저장한다. EOF가 아닐 때까지</span>
        <span class="k">while</span> <span class="o">((</span><span class="n">data</span> <span class="o">=</span> <span class="n">fis</span><span class="o">.</span><span class="na">read</span><span class="o">(</span><span class="n">b</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">b</span><span class="o">.</span><span class="na">length</span><span class="o">))</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="o">)</span>
        <span class="o">{</span>
            <span class="c1">// 가져온 data 길이만큼 출력</span>
            <span class="n">out</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">b</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">data</span><span class="o">);</span>
        <span class="o">}</span>
		
        <span class="c1">// ServletOutputStream은 버퍼의 길이가 다 찼을 때에만 데이터를 전달하기 때문에 </span>
        <span class="c1">// flush로 버퍼의 빈 공간을 채워서 전송함</span>
        <span class="n">out</span><span class="o">.</span><span class="na">flush</span><span class="o">();</span>
		
        <span class="n">out</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
        <span class="n">fis</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
		
        <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>업로드 된 파일을 클릭하면 파일 다운로드를 처리하는 서블릿으로 이동한다.</li>
  <li>다운로드 할 파일의 경로를 설정할 때 <code class="language-plaintext highlighter-rouge">Mac OS</code>에서는 파일 경로 구분자를 <code class="language-plaintext highlighter-rouge">"/"</code>를 사용하는데 <code class="language-plaintext highlighter-rouge">Windows OS</code>에서는 <code class="language-plaintext highlighter-rouge">"\"</code>를 사용하기 때문에 <code class="language-plaintext highlighter-rouge">filePath</code>를 설정하는 부분에서 <code class="language-plaintext highlighter-rouge">"\\"</code>만 쓰면 맥에서 경로를 제대로 못 찾는다.(난 맥북을 쓰는데 수업은 윈도우 기반이라서 처음에 윈도우 버전으로 따라하면서 <code class="language-plaintext highlighter-rouge">"\\"</code> 쓰니까 안 되서 헤멨었음)</li>
  <li>
    <p>그래서 사용자의 OS에 따라 다르게 처리하는 부분을 추가했다.</p>
  </li>
  <li>여기까지 하면 다운로드도 잘 된다.<br /><br /><br /></li>
</ul>

<h1 id="마감까지">마감까지</h1>
<ul>
  <li><code class="language-plaintext highlighter-rouge">D-4</code></li>
</ul>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="Project Log" /><category term="Project" /><category term="Cafe" /><category term="Log" /><summary type="html"><![CDATA[개발환경 MacBook Air (M1, 2020) OpenJDK 8 Eclipse 2021-12 tomcat 8.5 MySQL Workbench 8.0.19]]></summary></entry><entry><title type="html">Python) 이것이 취업을 위한 코딩테스트다 06 실전문제 4. 두 배열의 원소 교체</title><link href="http://localhost:4000/boj/CodingTestBook-06-12-py/" rel="alternate" type="text/html" title="Python) 이것이 취업을 위한 코딩테스트다 06 실전문제 4. 두 배열의 원소 교체" /><published>2022-03-31T00:00:00+09:00</published><updated>2022-03-31T00:00:00+09:00</updated><id>http://localhost:4000/boj/CodingTestBook-06-12-py</id><content type="html" xml:base="http://localhost:4000/boj/CodingTestBook-06-12-py/"><![CDATA[<h1 id="문제-출처">문제 출처</h1>
<hr />

<ul>
  <li>이것이 취업을 위한 코딩테스트다 with 파이썬</li>
  <li>Chapter 06 - 실전문제 4. 두 배열의 원소 교체<br /><br /></li>
</ul>

<h1 id="제한">제한</h1>
<hr />

<ul>
  <li>시간 제한 : 2 초</li>
  <li>메모리 제한 : 128 MB<br /><br /></li>
</ul>

<h1 id="문제">문제</h1>
<hr />

<ul>
  <li>동빈이는 두 개의 배열 A와 B를 가지고 있다. 두 배열은 N개의 원소로 구성되어 있으며, 배열의 원소는 모두 자연수이다. 동빈이는 최대 K번의 바꿔치기 연산을 수행할 수 있는데, 바꿔치기 연산이란 배열 A에 있는 원소 하나와 배열 B에 있는 원소 하나를 골라서 두 원소를 서로 바꾸는 것을 말한다. 동빈이의 최종 목표는 배열 A의 모든 원소의 합이 최대가 되도록 하는 것이며, 여러분은 동빈이를 도와야 한다.</li>
  <li>N, K, 그리고 배열 A와 B의 정보가 주어졌을 때, 최대 K번의 바꿔치기 연산을 수행하여 만들 수 있는 배열 A의 모든 원소의 합의 최댓값을 출력하는 프로그램을 작성하시오.<br /><br /></li>
</ul>

<h1 id="입력">입력</h1>
<hr />

<ul>
  <li>첫째 줄에 N, K가 공백으로 구분되어 입력된다. (1 &lt;= N &lt;= 100,000,0 &lt;= K &lt;= N)</li>
  <li>두 번째 줄에 배열 A의 원소들이 공백으로 구분되어 입력된다. 모든 원소는 10,000,000보다 작은 자연수이다.</li>
  <li>세 번째 줄에 배열 B의 원소들이 공백으로 구분되어 입력된다. 모든 원소는 10,000,000보다 작은 자연수이다.<br /><br /></li>
</ul>

<h1 id="출력">출력</h1>
<hr />

<ul>
  <li>최대 K번의 바꿔치기 연산을 수행하여 만들 수 있는 배열 A의 모든 원소의 합의 최댓값을 출력한다.<br /><br /><br /></li>
</ul>

<h1 id="-풀이">👀 풀이</h1>
<hr />

<ul>
  <li><code class="language-plaintext highlighter-rouge">배열 A</code>의 <code class="language-plaintext highlighter-rouge">최솟값</code>을 <code class="language-plaintext highlighter-rouge">배열 B</code>의 <code class="language-plaintext highlighter-rouge">최댓값</code>과 <code class="language-plaintext highlighter-rouge">K</code>번만큼 바꿔가면 된다.</li>
  <li>그럴려면 <code class="language-plaintext highlighter-rouge">배열 A는 오름차순 정렬</code>, <code class="language-plaintext highlighter-rouge">배열 B는 내림차순 정렬</code>을 해야 한다.</li>
  <li>그 후 <code class="language-plaintext highlighter-rouge">0</code>번째부터 <code class="language-plaintext highlighter-rouge">K - 1</code>번째 원소까지 두 배열의 원소를 바꿔주면 되는데 <code class="language-plaintext highlighter-rouge">배열 A</code>의 <code class="language-plaintext highlighter-rouge">i</code>번째 원소가 <code class="language-plaintext highlighter-rouge">배열 B</code>의 <code class="language-plaintext highlighter-rouge">i</code>번째 원소보다 작을 때에만 바꿔준다. 만약 <code class="language-plaintext highlighter-rouge">배열 A</code>의 <code class="language-plaintext highlighter-rouge">i</code>번째 원소가 <code class="language-plaintext highlighter-rouge">배열 B</code>의 <code class="language-plaintext highlighter-rouge">i</code>번째 원소보다 크다면 거기부터는 <code class="language-plaintext highlighter-rouge">배열 B</code>의 원소가 항상 작은 것이기 때문에 남은 <code class="language-plaintext highlighter-rouge">K</code>번만큼 계속 바꾸면 오답을 받게 될 것이다.<br /><br /></li>
</ul>

<h1 id="코드">코드</h1>
<hr />

<script src="https://gist.github.com/miro7923/e0b6d22501b86b0f97b9e17a7ea0c974.js"></script>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="BOJ" /><category term="Algorithm" /><category term="BFS" /><category term="Python" /><summary type="html"><![CDATA[문제 출처 이것이 취업을 위한 코딩테스트다 with 파이썬 Chapter 06 - 실전문제 4. 두 배열의 원소 교체 제한 시간 제한 : 2 초 메모리 제한 : 128 MB]]></summary></entry><entry><title type="html">프로젝트) Cafe(웹 사이트) 만들기 19 - 메일 보내기 기능 추가</title><link href="http://localhost:4000/project%20log/cafe-project-19/" rel="alternate" type="text/html" title="프로젝트) Cafe(웹 사이트) 만들기 19 - 메일 보내기 기능 추가" /><published>2022-03-30T00:00:00+09:00</published><updated>2022-03-30T00:00:00+09:00</updated><id>http://localhost:4000/project%20log/cafe-project-19</id><content type="html" xml:base="http://localhost:4000/project%20log/cafe-project-19/"><![CDATA[<h1 id="개발환경">개발환경</h1>
<ul>
  <li>MacBook Air (M1, 2020)</li>
  <li>OpenJDK 8</li>
  <li>Eclipse 2021-12</li>
  <li>tomcat 8.5</li>
  <li>MySQL Workbench 8.0.19<br /><br /><br /></li>
</ul>

<h1 id="시작">시작</h1>
<ul>
  <li>2022.3.4 ~ <br /><br /><br /></li>
</ul>

<h1 id="주제">주제</h1>
<ul>
  <li>웹 백엔드 수업 중 중간 과제로 개인 프로젝트를 진행하게 되었다.</li>
  <li>회원가입/로그인/탈퇴 등 기본적인 회원관리 시스템을 가진 웹 사이트를 만드는 것이다. 주어진 기한은 <code class="language-plaintext highlighter-rouge">한 달</code></li>
  <li>나는 <code class="language-plaintext highlighter-rouge">다음 카페</code>를 소규모로 만들어 보기로 했다. 평소 자주 이용하기도 했고 과제의 평가 기준에서 요구하는 기능들을 다 담고 있기도 했기 때문에 이번 기회에 구현해 보면 그동안 배운 것들을 활용하기에 좋을 거 같았다.</li>
  <li>평가 기준에 사이트의 디자인 구현(HTML/CSS 등 프론트엔드)은 포함되지 않기 때문에 본인이 쓰고 싶은 HTML/CSS 템플릿을 구한 뒤 회원 관리 기능을 구현하면 된다.<br /><br /><br /></li>
</ul>

<h1 id="진행상황">진행상황</h1>
<ul>
  <li>사이트 관리자에게 메일을 보낼 수 있는 기능을 만들었다.</li>
  <li>자바 메일 <code class="language-plaintext highlighter-rouge">API</code>를 사용했다.</li>
  <li><code class="language-plaintext highlighter-rouge">JSP 2.3 &amp; Servlet 3.1</code> 책을 참고했다.</li>
</ul>

<h2 id="자바-메일-api-추가">자바 메일 API 추가</h2>
<ul>
  <li><a href="https://javaee.github.io/javamail/">javax.mail.jar</a> - <code class="language-plaintext highlighter-rouge">javax.mail.jar</code>만 다운로드 후 <code class="language-plaintext highlighter-rouge">WEB-INF/lib</code>에 넣으면 된다.</li>
  <li><a href="https://www.oracle.com/java/technologies/java-archive-downloads-java-plat-downloads.html#jaf-1.1.1-fcs-oth-JPR">actication.jar</a> - 여기서 <code class="language-plaintext highlighter-rouge">jaf-1_1_1.zip</code> 다운로드 후 압축 풀어서 <code class="language-plaintext highlighter-rouge">activation.jar</code> 파일만 <code class="language-plaintext highlighter-rouge">WEB-INF/lib</code>에 넣으면 된다.</li>
</ul>

<h2 id="contactusjsp">contactUs.jsp</h2>

<div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;%@ page </span><span class="na">language=</span><span class="s">"java"</span><span class="na"> contentType=</span><span class="s">"text/html; charset=UTF-8"</span><span class="na">
    pageEncoding=</span><span class="s">"UTF-8"</span><span class="nt">%&gt;</span>
<span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="nt">&lt;html</span> <span class="na">lang=</span><span class="s">"en"</span><span class="nt">&gt;</span>

<span class="c">&lt;!-- Start Head --&gt;</span>
  <span class="nt">&lt;jsp:include </span><span class="na">page=</span><span class="s">"../inc/top.jsp"</span><span class="nt">&gt;&lt;/jsp:include&gt;</span>
  <span class="nt">&lt;script </span><span class="na">src=</span><span class="s">"${pageContext.request.contextPath }/js/contactUs.js"</span><span class="nt">&gt;&lt;/script&gt;</span>
<span class="c">&lt;!-- End Head --&gt;</span>

<span class="nt">&lt;body</span> <span class="na">class=</span><span class="s">"modern"</span><span class="nt">&gt;</span>

<span class="c">&lt;!--
START MODULE AREA 2: Menu 1
--&gt;</span>
  <span class="nt">&lt;jsp:include </span><span class="na">page=</span><span class="s">"../inc/subTop.jsp"</span><span class="nt">&gt;&lt;/jsp:include&gt;</span>
<span class="c">&lt;!--
END MODULE AREA 2: Menu 1
--&gt;</span>

<span class="c">&lt;!--
START MODULE AREA 3: Sub Navigation 1
--&gt;</span>
<span class="nt">&lt;section&gt;</span>
  <span class="nt">&lt;div</span> <span class="na">data-layout=</span><span class="s">"_r"</span><span class="nt">&gt;</span>
    <span class="c">&lt;!-- &lt;div data-layout="de6 ec5 ec-n3"&gt;
      &lt;p&gt;&lt;/p&gt;
    &lt;/div&gt; --&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">data-layout=</span><span class="s">"de10 ec-half"</span><span class="nt">&gt;</span>
      <span class="nt">&lt;h3&gt;</span>Contact us<span class="nt">&lt;/h3&gt;</span>
      <span class="nt">&lt;form</span> <span class="na">name=</span><span class="s">"mail"</span> <span class="na">action=</span><span class="s">"./SendMailAction.bo"</span> <span class="na">method=</span><span class="s">"post"</span> <span class="na">onsubmit=</span><span class="s">"return finalCheck();"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"formRow"</span><span class="nt">&gt;</span>
          <span class="nt">&lt;label</span> <span class="na">for=</span><span class="s">"MOD_TEXTFORM_NameField"</span><span class="nt">&gt;</span>이름 <span class="nt">&lt;/label&gt;&lt;input</span> <span class="na">id=</span><span class="s">"MOD_TEXTFORM_NameField"</span> <span class="na">type=</span><span class="s">"text"</span> <span class="na">name=</span><span class="s">"name"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;/div&gt;</span>
        <span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">"nameMsg"</span><span class="nt">&gt;&lt;/div&gt;</span>
        <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"formRow"</span><span class="nt">&gt;</span>
          <span class="nt">&lt;label</span> <span class="na">for=</span><span class="s">"MOD_TEXTFORM_EmailField"</span><span class="nt">&gt;</span>답변 받을 이메일 <span class="nt">&lt;/label&gt;&lt;input</span> <span class="na">id=</span><span class="s">"MOD_TEXTFORM_EmailField"</span> <span class="na">type=</span><span class="s">"email"</span> <span class="na">name=</span><span class="s">"email"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;/div&gt;</span>
        <span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">"emailMsg"</span><span class="nt">&gt;&lt;/div&gt;</span>
        <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"formRow"</span><span class="nt">&gt;</span>
          <span class="nt">&lt;label</span> <span class="na">for=</span><span class="s">"MOD_TEXTFORM_TelField"</span><span class="nt">&gt;</span>제목 <span class="nt">&lt;/label&gt;&lt;input</span> <span class="na">id=</span><span class="s">"MOD_TEXTFORM_TelField"</span> <span class="na">type=</span><span class="s">"tel"</span> <span class="na">name=</span><span class="s">"title"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;/div&gt;</span>
        <span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">"titleMsg"</span><span class="nt">&gt;&lt;/div&gt;</span>
        <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"formRow"</span><span class="nt">&gt;</span>
          <span class="nt">&lt;label</span> <span class="na">for=</span><span class="s">"MOD_TEXTFORM_MsgField"</span><span class="nt">&gt;</span>내용 <span class="nt">&lt;/label&gt;&lt;textarea</span> <span class="na">id=</span><span class="s">"MOD_TEXTFORM_MsgField"</span> <span class="na">placeholder=</span><span class="s">"내용을 입력하세요..."</span> <span class="na">name=</span><span class="s">"content"</span><span class="nt">&gt;&lt;/textarea&gt;</span>
        <span class="nt">&lt;/div&gt;</span>
        <span class="nt">&lt;div</span> <span class="na">id</span><span class="nt">&gt;&lt;/div&gt;</span>
        <span class="nt">&lt;button</span> <span class="na">type=</span><span class="s">"submit"</span> <span class="na">class=</span><span class="s">"btn"</span><span class="nt">&gt;</span>보내기<span class="nt">&lt;/button&gt;</span>
      <span class="nt">&lt;/form&gt;</span>
    <span class="nt">&lt;/div&gt;</span>
  <span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/section&gt;</span>
<span class="c">&lt;!--
END MODULE AREA 3: Sub Navigation 1
--&gt;</span>

<span class="c">&lt;!--
START MODULE AREA 5: Footer 2
--&gt;</span>
  <span class="nt">&lt;jsp:include </span><span class="na">page=</span><span class="s">"../inc/bottom.jsp"</span><span class="nt">&gt;&lt;/jsp:include&gt;</span>
<span class="c">&lt;!--
END MODULE AREA 5: Footer 2
--&gt;</span>

<span class="nt">&lt;script </span><span class="na">src=</span><span class="s">"${pageContext.request.contextPath }/js/index.js"</span><span class="nt">&gt;&lt;/script&gt;</span>
<span class="nt">&lt;/body&gt;</span>

<span class="nt">&lt;/html&gt;</span>
</code></pre></div></div>

<ul>
  <li>폼태그를 이용해 입력한 정보들을 서블릿으로 전송한다.</li>
</ul>

<h2 id="contactusjs">contactUs.js</h2>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nx">finalCheck</span><span class="p">()</span>
<span class="p">{</span>
    <span class="kd">var</span> <span class="nx">mail</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">mail</span><span class="p">;</span>
	
    <span class="k">if</span> <span class="p">(</span><span class="nx">mail</span><span class="p">.</span><span class="nx">name</span><span class="p">.</span><span class="nx">value</span><span class="p">.</span><span class="nx">length</span> <span class="o">&lt;=</span> <span class="mi">0</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nx">alert</span><span class="p">(</span><span class="dl">'</span><span class="s1">이름을 입력하세요!</span><span class="dl">'</span><span class="p">);</span>
        <span class="nx">mail</span><span class="p">.</span><span class="nx">name</span><span class="p">.</span><span class="nx">focus</span><span class="p">();</span>
        <span class="k">return</span> <span class="kc">false</span><span class="p">;</span>
    <span class="p">}</span>
	
    <span class="k">if</span> <span class="p">(</span><span class="nx">mail</span><span class="p">.</span><span class="nx">email</span><span class="p">.</span><span class="nx">value</span><span class="p">.</span><span class="nx">length</span> <span class="o">&lt;=</span> <span class="mi">0</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nx">alert</span><span class="p">(</span><span class="dl">'</span><span class="s1">연락 받을 이메일을 입력하세요!</span><span class="dl">'</span><span class="p">);</span>
        <span class="nx">mail</span><span class="p">.</span><span class="nx">email</span><span class="p">.</span><span class="nx">focus</span><span class="p">();</span>
        <span class="k">return</span> <span class="kc">false</span><span class="p">;</span>
    <span class="p">}</span>
	
    <span class="k">if</span> <span class="p">(</span><span class="nx">mail</span><span class="p">.</span><span class="nx">title</span><span class="p">.</span><span class="nx">value</span><span class="p">.</span><span class="nx">length</span> <span class="o">&lt;=</span> <span class="mi">0</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nx">alert</span><span class="p">(</span><span class="dl">'</span><span class="s1">제목을 입력하세요!</span><span class="dl">'</span><span class="p">);</span>
        <span class="nx">mail</span><span class="p">.</span><span class="nx">title</span><span class="p">.</span><span class="nx">focus</span><span class="p">();</span>
        <span class="k">return</span> <span class="kc">false</span><span class="p">;</span>
    <span class="p">}</span>
	
    <span class="k">if</span> <span class="p">(</span><span class="nx">mail</span><span class="p">.</span><span class="nx">content</span><span class="p">.</span><span class="nx">value</span><span class="p">.</span><span class="nx">length</span> <span class="o">&lt;=</span> <span class="mi">0</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nx">alert</span><span class="p">(</span><span class="dl">'</span><span class="s1">내용을 입력하세요!</span><span class="dl">'</span><span class="p">);</span>
        <span class="nx">mail</span><span class="p">.</span><span class="nx">content</span><span class="p">.</span><span class="nx">focus</span><span class="p">();</span>
        <span class="k">return</span> <span class="kc">false</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<ul>
  <li>메일을 보내기 전 모든 필드가 입력되었는지 확인 후 모든 분기가 <code class="language-plaintext highlighter-rouge">true</code>일 때에만 서블릿으로 이동한다.</li>
</ul>

<h2 id="boardfrontcontrollerjava">BoardFrontController.java</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.project.cafe.board.action</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.servlet.RequestDispatcher</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.ServletException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServlet</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletRequest</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletResponse</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">com.project.cafe.action.Action</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.project.cafe.action.ActionForward</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">BoardFrontController</span> <span class="kd">extends</span> <span class="nc">HttpServlet</span>
<span class="o">{</span>
    <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">doProcess</span><span class="o">(</span><span class="nc">HttpServletRequest</span> <span class="n">request</span><span class="o">,</span> <span class="nc">HttpServletResponse</span> <span class="n">response</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">ServletException</span><span class="o">,</span> <span class="nc">IOException</span> 
    <span class="o">{</span>
        <span class="c1">// 1. 전달되는 가상주소 계산</span>
        <span class="c1">// .. 생략</span>
		
        <span class="c1">// 2. 가상주소 매핑</span>
        <span class="nc">Action</span> <span class="n">action</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
        <span class="nc">ActionForward</span> <span class="n">forward</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
		
        <span class="c1">// .. 생략</span>
        <span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="n">command</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"/SendMailAction.bo"</span><span class="o">))</span>
        <span class="o">{</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"C : /SendMailAction.bo 호출"</span><span class="o">);</span>
			
            <span class="n">action</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SendMailAction</span><span class="o">();</span>
			
            <span class="k">try</span> <span class="o">{</span>
                <span class="n">forward</span> <span class="o">=</span> <span class="n">action</span><span class="o">.</span><span class="na">execute</span><span class="o">(</span><span class="n">request</span><span class="o">,</span> <span class="n">response</span><span class="o">);</span>
            <span class="o">}</span>
            <span class="k">catch</span> <span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="c1">// .. 생략</span>
		
        <span class="c1">// 3. 페이지 이동</span>
        <span class="c1">// .. 생략</span>
    <span class="o">}</span>
 
    <span class="c1">// .. 생략</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">컨트롤러</code>에서 메일 전송 동작을 수행할 서블릿으로 연결한다.</li>
</ul>

<h2 id="sendmailactionjava">SendMailAction.java</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.project.cafe.board.action</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.io.PrintWriter</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Date</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Properties</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.mail.Address</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.mail.Authenticator</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.mail.Message</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.mail.Session</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.mail.Transport</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.mail.internet.InternetAddress</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.mail.internet.MimeMessage</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletRequest</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletResponse</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">com.project.cafe.action.Action</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.project.cafe.action.ActionForward</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">SendMailAction</span> <span class="kd">implements</span> <span class="nc">Action</span> 
<span class="o">{</span>
    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="nc">ActionForward</span> <span class="nf">execute</span><span class="o">(</span><span class="nc">HttpServletRequest</span> <span class="n">request</span><span class="o">,</span> <span class="nc">HttpServletResponse</span> <span class="n">response</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">Exception</span> 
    <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"M : SendMailAction - execute() 호출"</span><span class="o">);</span>
		
        <span class="c1">// 한글처리</span>
        <span class="n">request</span><span class="o">.</span><span class="na">setCharacterEncoding</span><span class="o">(</span><span class="s">"utf-8"</span><span class="o">);</span>
		
        <span class="c1">// 파라미터 저장</span>
        <span class="nc">String</span> <span class="n">sender</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"email"</span><span class="o">);</span>
        <span class="nc">String</span> <span class="n">receiver</span> <span class="o">=</span> <span class="s">"메일을 받는데 사용할 관리자 메일주소"</span><span class="o">;</span>
        <span class="nc">String</span> <span class="n">title</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"title"</span><span class="o">);</span>
        <span class="nc">String</span> <span class="n">content</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"content"</span><span class="o">);</span>
        <span class="nc">String</span> <span class="n">name</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"name"</span><span class="o">);</span>
		
        <span class="nc">StringBuilder</span> <span class="n">sb</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringBuilder</span><span class="o">();</span>
        <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"이름 : "</span><span class="o">);</span>
        <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">name</span><span class="o">);</span>
        <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"&lt;br&gt;"</span><span class="o">);</span>
        <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"메일주소 : "</span><span class="o">);</span>
        <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">sender</span><span class="o">);</span>
        <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"&lt;br&gt;"</span><span class="o">);</span>
        <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"내용 : "</span><span class="o">);</span>
        <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">content</span><span class="o">);</span>
		
        <span class="c1">// 메일 보내는 동작 수행</span>
        <span class="n">response</span><span class="o">.</span><span class="na">setContentType</span><span class="o">(</span><span class="s">"text/html; charset=utf-8"</span><span class="o">);</span>
        <span class="nc">PrintWriter</span> <span class="n">out</span> <span class="o">=</span> <span class="n">response</span><span class="o">.</span><span class="na">getWriter</span><span class="o">();</span>
		
        <span class="k">try</span> <span class="o">{</span>
            <span class="c1">// 서버 정보를 Properies 객체에 저장</span>
            <span class="nc">Properties</span> <span class="n">properties</span> <span class="o">=</span> <span class="nc">System</span><span class="o">.</span><span class="na">getProperties</span><span class="o">();</span>
			
            <span class="c1">// Starttls Command를 사용할 수 있게 설정</span>
            <span class="n">properties</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"mail.smtp.starttls.enable"</span><span class="o">,</span> <span class="s">"true"</span><span class="o">);</span>
			
            <span class="c1">// SMTP 서버를 지정</span>
            <span class="n">properties</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"mail.smtp.host"</span><span class="o">,</span> <span class="s">"smtp.gmail.com"</span><span class="o">);</span>
			
            <span class="c1">// AUTH command를 사용하여 사용자 인증을 할 수 있게 하는 설정 부분</span>
            <span class="n">properties</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"mail.smtp.auth"</span><span class="o">,</span> <span class="s">"true"</span><span class="o">);</span>
			
            <span class="c1">// 서버 포트를 지정하는 부분</span>
            <span class="n">properties</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"mail.smtp.port"</span><span class="o">,</span> <span class="s">"587"</span><span class="o">);</span>
			
            <span class="c1">// 인증 정보 생성</span>
            <span class="nc">Authenticator</span> <span class="n">auth</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">GoogleAuthentication</span><span class="o">();</span>
			
            <span class="c1">// 메일을 전송하는 역할을 하는 단위인 Session 객체 생성</span>
            <span class="nc">Session</span> <span class="n">s</span> <span class="o">=</span> <span class="nc">Session</span><span class="o">.</span><span class="na">getDefaultInstance</span><span class="o">(</span><span class="n">properties</span><span class="o">,</span> <span class="n">auth</span><span class="o">);</span>
			
            <span class="c1">// 생성한 Session 객체를 사용하여 전송할 Message 객체 생성</span>
            <span class="nc">Message</span> <span class="n">message</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">MimeMessage</span><span class="o">(</span><span class="n">s</span><span class="o">);</span>
			
            <span class="c1">// 메일을 송신할 송신 주소 생성</span>
            <span class="nc">Address</span> <span class="n">senderAddr</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">InternetAddress</span><span class="o">(</span><span class="n">sender</span><span class="o">);</span>
			
            <span class="c1">// 메일을 수신할 수신 주소 생성</span>
            <span class="nc">Address</span> <span class="n">receiverAddr</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">InternetAddress</span><span class="o">(</span><span class="n">receiver</span><span class="o">);</span>
			
            <span class="c1">// 메일 전송에 필요한 값들 설정</span>
            <span class="n">message</span><span class="o">.</span><span class="na">setHeader</span><span class="o">(</span><span class="s">"content-type"</span><span class="o">,</span> <span class="s">"text/html; charset=utf-8"</span><span class="o">);</span>
            <span class="n">message</span><span class="o">.</span><span class="na">setFrom</span><span class="o">(</span><span class="n">senderAddr</span><span class="o">);</span>
            <span class="n">message</span><span class="o">.</span><span class="na">addRecipient</span><span class="o">(</span><span class="nc">Message</span><span class="o">.</span><span class="na">RecipientType</span><span class="o">.</span><span class="na">TO</span><span class="o">,</span> <span class="n">receiverAddr</span><span class="o">);</span>
            <span class="n">message</span><span class="o">.</span><span class="na">setSubject</span><span class="o">(</span><span class="n">title</span><span class="o">);</span>
            <span class="n">message</span><span class="o">.</span><span class="na">setContent</span><span class="o">(</span><span class="n">sb</span><span class="o">.</span><span class="na">toString</span><span class="o">(),</span> <span class="s">"text/html; charset=utf-8"</span><span class="o">);</span>
            <span class="n">message</span><span class="o">.</span><span class="na">setSentDate</span><span class="o">(</span><span class="k">new</span> <span class="nc">Date</span><span class="o">());</span>
			
            <span class="c1">// 메시지를 메일로 전송</span>
            <span class="nc">Transport</span><span class="o">.</span><span class="na">send</span><span class="o">(</span><span class="n">message</span><span class="o">);</span>
			
            <span class="n">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="s">"&lt;script&gt;"</span><span class="o">);</span>
            <span class="n">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="s">"alert('메일이 정상적으로 전송되었습니다.');"</span><span class="o">);</span>
            <span class="n">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="s">"location.href='./Contact.bo';"</span><span class="o">);</span>
            <span class="n">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="s">"&lt;/script&gt;"</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="k">catch</span> <span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="s">"SMTP 서버가 잘못 설정되었거나 서비스에 문제가 있습니다."</span><span class="o">);</span>
            <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
        <span class="o">}</span>
		
        <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>받은 메일을 열어볼 때 줄을 바꿔서 보여주기 위해서 <code class="language-plaintext highlighter-rouge">&lt;br&gt;</code> 태그를 추가했다.</li>
  <li>처음엔 <code class="language-plaintext highlighter-rouge">\n</code>과 <code class="language-plaintext highlighter-rouge">System.lineSeparator()</code> 등 자바에서 줄을 바꾸는 코드를 썼는데 메일을 받으면 줄이 바뀌지 않아서 한참 찾아 헤멨다.</li>
  <li>알고보니 메일이 출력되는 필드도 <code class="language-plaintext highlighter-rouge">HTML</code>이라 <code class="language-plaintext highlighter-rouge">HTML</code>태그로 줄바꿈을 작성해야 했다. <code class="language-plaintext highlighter-rouge">message.setContent(sb.toString(), "text/html; charset=utf-8");</code>이 구문의 <code class="language-plaintext highlighter-rouge">"text/html; charset=utf-8"</code>이 힌트였다…</li>
  <li><a href="https://m.blog.naver.com/PostView.naver?isHttpsRedirect=true&amp;blogId=deeperain&amp;logNo=221387794478">참고글</a></li>
</ul>

<h2 id="googleauthenticationjava">GoogleAuthentication.java</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.project.cafe.board.action</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.mail.Authenticator</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.mail.PasswordAuthentication</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">GoogleAuthentication</span> <span class="kd">extends</span> <span class="nc">Authenticator</span> 
<span class="o">{</span>
    <span class="nc">PasswordAuthentication</span> <span class="n">passAuth</span><span class="o">;</span>
	
    <span class="kd">public</span> <span class="nf">GoogleAuthentication</span><span class="o">()</span>
    <span class="o">{</span>
        <span class="c1">// 첫번째 인자는 구글 아이디, 두번째는 비밀번호</span>
        <span class="n">passAuth</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">PasswordAuthentication</span><span class="o">(</span><span class="s">"구글아이디"</span><span class="o">,</span> <span class="s">"앱 비밀번호"</span><span class="o">);</span>
    <span class="o">}</span>
	
    <span class="kd">public</span> <span class="nc">PasswordAuthentication</span> <span class="nf">getPasswordAuthentication</span><span class="o">()</span> <span class="o">{</span><span class="k">return</span> <span class="n">passAuth</span><span class="o">;}</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">구글 SMTP</code>를 사용할 것이기 때문에 구글 계정 인증 정보를 받아오는 클래스를 만들었다.</li>
  <li>앱 비밀번호는 <a href="https://myaccount.google.com/apppasswords?rapt=AEjHL4NLJqxIzXCjpOREZBAtKSdJowWSk6Hl9qx59piLBQz_fNsRxBDDi02cYrIZw8GPr-zDU_3xzV4uoyYm_F6zLxRmucszuQ">앱 비밀번호 설정</a> 페이지에서 설정할 수 있다.</li>
</ul>

<p align="center"><img src="../../assets/images/mailTest.png" width="400" /></p>

<ul>
  <li>이제 메일을 보내보면 작성한 대로 잘 간다! 👏<br /><br /><br /></li>
</ul>

<h1 id="마감까지">마감까지</h1>
<ul>
  <li><code class="language-plaintext highlighter-rouge">D-5</code></li>
</ul>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="Project Log" /><category term="Project" /><category term="Cafe" /><category term="Log" /><summary type="html"><![CDATA[개발환경 MacBook Air (M1, 2020) OpenJDK 8 Eclipse 2021-12 tomcat 8.5 MySQL Workbench 8.0.19]]></summary></entry><entry><title type="html">Python) 이것이 취업을 위한 코딩테스트다 05 실전문제 4. 미로 탈출</title><link href="http://localhost:4000/boj/CodingTestBook-05-11-py/" rel="alternate" type="text/html" title="Python) 이것이 취업을 위한 코딩테스트다 05 실전문제 4. 미로 탈출" /><published>2022-03-30T00:00:00+09:00</published><updated>2022-03-30T00:00:00+09:00</updated><id>http://localhost:4000/boj/CodingTestBook-05-11-py</id><content type="html" xml:base="http://localhost:4000/boj/CodingTestBook-05-11-py/"><![CDATA[<h1 id="문제-출처">문제 출처</h1>
<hr />

<ul>
  <li>이것이 취업을 위한 코딩테스트다 with 파이썬</li>
  <li>Chapter 05 - 실전문제 4. 미로 탈출<br /><br /></li>
</ul>

<h1 id="제한">제한</h1>
<hr />

<ul>
  <li>시간 제한 : 1 초</li>
  <li>메모리 제한 : 128 MB<br /><br /></li>
</ul>

<h1 id="문제">문제</h1>
<hr />

<ul>
  <li>동빈이는 N X M 크기의 직사각형 형태의 미로에 갇혀 있다. 미로에는 여러 마리의 괴물이 있어 이를 피해 탈출해야 한다. 동빈이의 위치는 (1, 1)이고 미로의 출구는 (N, M)의 위치에 존재하며 한 번에 한 칸씩 이동할 수 있다. 이때 괴물이 있는 부분은 0으로, 괴물이 없는 부분은 1로 표시되어 있다. 미로는 반드시 탈출할 수 있는 형태로 제시된다. 이때 동빈이가 탈출하기 위해 움직여야 하는 최소 칸의 개수를 구하시오. 칸을 셀 때는 시작 칸과 마지막 칸을 모두 포함하여 계산한다.<br /><br /></li>
</ul>

<h1 id="입력">입력</h1>
<hr />

<ul>
  <li>첫째 줄에 두 정수 N, M(4 &lt;= N, M &lt;= 200)이 주어진다. 다음 N개의 줄에는 각각 M개의 정수(0 혹은 1)로 미로의 정보가 주어진다. 각각의 수들은 공백 없이 붙어서 입력으로 제시된다. 또한 시작 칸과 마지막 칸은 항상 1이다.<br /><br /></li>
</ul>

<h1 id="출력">출력</h1>
<hr />

<ul>
  <li>첫째 줄에 최소 이동 칸의 개수를 출력한다.<br /><br /><br /></li>
</ul>

<h1 id="-풀이">👀 풀이</h1>
<hr />

<ul>
  <li><code class="language-plaintext highlighter-rouge">BFS</code>로 상하좌우에 이동 가능한 칸을 탐색하면서 현재 칸에서 이동 가능한 다음 칸은 현재 칸의 숫자 + 1을 해 주었다.</li>
  <li><code class="language-plaintext highlighter-rouge">BFS</code> 탐색이 끝나면 (N - 1, M - 1) 위치의 숫자를 출력한다.<br /><br /></li>
</ul>

<h1 id="코드">코드</h1>
<hr />

<script src="https://gist.github.com/miro7923/222e59253392b30c3a44446b470f4da8.js"></script>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="BOJ" /><category term="Algorithm" /><category term="BFS" /><category term="Python" /><summary type="html"><![CDATA[문제 출처 이것이 취업을 위한 코딩테스트다 with 파이썬 Chapter 05 - 실전문제 4. 미로 탈출 제한 시간 제한 : 1 초 메모리 제한 : 128 MB]]></summary></entry><entry><title type="html">프로젝트) Cafe(웹 사이트) 만들기 18 - 우편번호 검색 기능 추가</title><link href="http://localhost:4000/project%20log/cafe-project-18/" rel="alternate" type="text/html" title="프로젝트) Cafe(웹 사이트) 만들기 18 - 우편번호 검색 기능 추가" /><published>2022-03-30T00:00:00+09:00</published><updated>2022-03-30T00:00:00+09:00</updated><id>http://localhost:4000/project%20log/cafe-project-18</id><content type="html" xml:base="http://localhost:4000/project%20log/cafe-project-18/"><![CDATA[<h1 id="개발환경">개발환경</h1>
<ul>
  <li>MacBook Air (M1, 2020)</li>
  <li>OpenJDK 8</li>
  <li>Eclipse 2021-12</li>
  <li>tomcat 8.5</li>
  <li>MySQL Workbench 8.0.19<br /><br /><br /></li>
</ul>

<h1 id="시작">시작</h1>
<ul>
  <li>2022.3.4 ~ <br /><br /><br /></li>
</ul>

<h1 id="주제">주제</h1>
<ul>
  <li>웹 백엔드 수업 중 중간 과제로 개인 프로젝트를 진행하게 되었다.</li>
  <li>회원가입/로그인/탈퇴 등 기본적인 회원관리 시스템을 가진 웹 사이트를 만드는 것이다. 주어진 기한은 <code class="language-plaintext highlighter-rouge">한 달</code></li>
  <li>나는 <code class="language-plaintext highlighter-rouge">다음 카페</code>를 소규모로 만들어 보기로 했다. 평소 자주 이용하기도 했고 과제의 평가 기준에서 요구하는 기능들을 다 담고 있기도 했기 때문에 이번 기회에 구현해 보면 그동안 배운 것들을 활용하기에 좋을 거 같았다.</li>
  <li>평가 기준에 사이트의 디자인 구현(HTML/CSS 등 프론트엔드)은 포함되지 않기 때문에 본인이 쓰고 싶은 HTML/CSS 템플릿을 구한 뒤 회원 관리 기능을 구현하면 된다.<br /><br /><br /></li>
</ul>

<h1 id="진행상황">진행상황</h1>
<ul>
  <li>다음 우편번호 서비스 API를 이용해 회원가입 시 우편번호와 주소를 검색하는 기능을 추가했다.</li>
  <li><a href="https://postcode.map.daum.net/guide">다음 우편번호 서비스</a></li>
</ul>

<h2 id="joinjsp">join.jsp</h2>

<div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"formRow"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;label</span> <span class="na">for=</span><span class="s">"MOD_TEXTFORM_NameField"</span><span class="nt">&gt;</span>우편번호 <span class="nt">&lt;/label&gt;</span>
  <span class="nt">&lt;label</span> <span class="na">class=</span><span class="s">"phone"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"text"</span> <span class="na">name=</span><span class="s">"postalcode"</span> <span class="na">id=</span><span class="s">"postalcode"</span> <span class="na">placeholder=</span><span class="s">"우편번호"</span> <span class="na">readonly</span><span class="nt">&gt;</span>
    <span class="nt">&lt;button</span> <span class="na">id=</span><span class="s">"postalBtn"</span> <span class="na">class=</span><span class="s">"btn"</span> <span class="na">name=</span><span class="s">"postalBtn"</span> <span class="na">onclick=</span><span class="s">"execDaumPostcode()"</span><span class="nt">&gt;</span>우편번호 찾기<span class="nt">&lt;/button&gt;&lt;br&gt;</span>
  <span class="nt">&lt;/label&gt;</span>
<span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">"postalCodeMsg"</span><span class="nt">&gt;&lt;/div&gt;</span>
<span class="nt">&lt;span</span> <span class="na">id=</span><span class="s">"guide"</span> <span class="na">style=</span><span class="s">"color:#999;display:none"</span><span class="nt">&gt;&lt;/span&gt;</span>
<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"formRow"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;label</span> <span class="na">for=</span><span class="s">"MOD_TEXTFORM_NameField"</span><span class="nt">&gt;</span>도로명 주소 <span class="nt">&lt;/label&gt;</span>
  <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"text"</span> <span class="na">id=</span><span class="s">"roadAddress"</span> <span class="na">name=</span><span class="s">"roadAddress"</span> <span class="na">placeholder=</span><span class="s">"도로명주소"</span> <span class="na">readonly</span><span class="nt">&gt;</span>
<span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"formRow"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;label</span> <span class="na">for=</span><span class="s">"MOD_TEXTFORM_NameField"</span><span class="nt">&gt;</span>상세 주소 <span class="nt">&lt;/label&gt;</span>
  <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"text"</span> <span class="na">id=</span><span class="s">"detailAddress"</span> <span class="na">name=</span><span class="s">"detailAddress"</span> <span class="na">placeholder=</span><span class="s">"상세주소"</span><span class="nt">&gt;</span>
<span class="nt">&lt;/div&gt;</span>

<span class="nt">&lt;script </span><span class="na">src=</span><span class="s">"//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js"</span><span class="nt">&gt;&lt;/script&gt;</span>
<span class="nt">&lt;script&gt;</span>
<span class="kd">function</span> <span class="nx">execDaumPostcode</span><span class="p">()</span> <span class="p">{</span>
    <span class="k">new</span> <span class="nx">daum</span><span class="p">.</span><span class="nx">Postcode</span><span class="p">({</span>
        <span class="na">oncomplete</span><span class="p">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">data</span><span class="p">)</span> <span class="p">{</span>
            <span class="c1">// 팝업에서 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분.</span>

            <span class="c1">// 도로명 주소의 노출 규칙에 따라 주소를 표시한다.</span>
            <span class="c1">// 내려오는 변수가 값이 없는 경우엔 공백('')값을 가지므로, 이를 참고하여 분기 한다.</span>
            <span class="kd">var</span> <span class="nx">roadAddr</span> <span class="o">=</span> <span class="nx">data</span><span class="p">.</span><span class="nx">roadAddress</span><span class="p">;</span> <span class="c1">// 도로명 주소 변수</span>
            <span class="kd">var</span> <span class="nx">extraRoadAddr</span> <span class="o">=</span> <span class="dl">''</span><span class="p">;</span> <span class="c1">// 참고 항목 변수</span>

            <span class="c1">// 법정동명이 있을 경우 추가한다. (법정리는 제외)</span>
            <span class="c1">// 법정동의 경우 마지막 문자가 "동/로/가"로 끝난다.</span>
            <span class="k">if</span><span class="p">(</span><span class="nx">data</span><span class="p">.</span><span class="nx">bname</span> <span class="o">!==</span> <span class="dl">''</span> <span class="o">&amp;&amp;</span> <span class="sr">/</span><span class="se">[</span><span class="sr">동|로|가</span><span class="se">]</span><span class="sr">$/g</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">data</span><span class="p">.</span><span class="nx">bname</span><span class="p">)){</span>
                <span class="nx">extraRoadAddr</span> <span class="o">+=</span> <span class="nx">data</span><span class="p">.</span><span class="nx">bname</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="c1">// 건물명이 있고, 공동주택일 경우 추가한다.</span>
            <span class="k">if</span><span class="p">(</span><span class="nx">data</span><span class="p">.</span><span class="nx">buildingName</span> <span class="o">!==</span> <span class="dl">''</span> <span class="o">&amp;&amp;</span> <span class="nx">data</span><span class="p">.</span><span class="nx">apartment</span> <span class="o">===</span> <span class="dl">'</span><span class="s1">Y</span><span class="dl">'</span><span class="p">){</span>
               <span class="nx">extraRoadAddr</span> <span class="o">+=</span> <span class="p">(</span><span class="nx">extraRoadAddr</span> <span class="o">!==</span> <span class="dl">''</span> <span class="p">?</span> <span class="dl">'</span><span class="s1">, </span><span class="dl">'</span> <span class="o">+</span> <span class="nx">data</span><span class="p">.</span><span class="nx">buildingName</span> <span class="p">:</span> <span class="nx">data</span><span class="p">.</span><span class="nx">buildingName</span><span class="p">);</span>
            <span class="p">}</span>
            <span class="c1">// 표시할 참고항목이 있을 경우, 괄호까지 추가한 최종 문자열을 만든다.</span>
            <span class="k">if</span><span class="p">(</span><span class="nx">extraRoadAddr</span> <span class="o">!==</span> <span class="dl">''</span><span class="p">){</span>
                <span class="nx">extraRoadAddr</span> <span class="o">=</span> <span class="dl">'</span><span class="s1"> (</span><span class="dl">'</span> <span class="o">+</span> <span class="nx">extraRoadAddr</span> <span class="o">+</span> <span class="dl">'</span><span class="s1">)</span><span class="dl">'</span><span class="p">;</span>
            <span class="p">}</span>

            <span class="c1">// 우편번호와 주소 정보를 해당 필드에 넣는다.</span>
            <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="dl">'</span><span class="s1">postalcode</span><span class="dl">'</span><span class="p">).</span><span class="nx">value</span> <span class="o">=</span> <span class="nx">data</span><span class="p">.</span><span class="nx">zonecode</span><span class="p">;</span>
            <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="dl">"</span><span class="s2">roadAddress</span><span class="dl">"</span><span class="p">).</span><span class="nx">value</span> <span class="o">=</span> <span class="nx">roadAddr</span><span class="p">;</span>
            <span class="c1">// document.getElementById("sample4_jibunAddress").value = data.jibunAddress;</span>
                
            <span class="c1">// 참고항목 문자열이 있을 경우 해당 필드에 넣는다.</span>
            <span class="cm">/*if(roadAddr !== ''){
                document.getElementById("sample4_extraAddress").value = extraRoadAddr;
            } else {
                document.getElementById("sample4_extraAddress").value = '';
            }*/</span>

            <span class="kd">var</span> <span class="nx">guideTextBox</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="dl">"</span><span class="s2">guide</span><span class="dl">"</span><span class="p">);</span>
            <span class="c1">// 사용자가 '선택 안함'을 클릭한 경우, 예상 주소라는 표시를 해준다.</span>
            <span class="k">if</span><span class="p">(</span><span class="nx">data</span><span class="p">.</span><span class="nx">autoRoadAddress</span><span class="p">)</span> <span class="p">{</span>
                <span class="kd">var</span> <span class="nx">expRoadAddr</span> <span class="o">=</span> <span class="nx">data</span><span class="p">.</span><span class="nx">autoRoadAddress</span> <span class="o">+</span> <span class="nx">extraRoadAddr</span><span class="p">;</span>
                <span class="nx">guideTextBox</span><span class="p">.</span><span class="nx">innerHTML</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">(예상 도로명 주소 : </span><span class="dl">'</span> <span class="o">+</span> <span class="nx">expRoadAddr</span> <span class="o">+</span> <span class="dl">'</span><span class="s1">)</span><span class="dl">'</span><span class="p">;</span>
                <span class="nx">guideTextBox</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">block</span><span class="dl">'</span><span class="p">;</span>

            <span class="p">}</span> <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">data</span><span class="p">.</span><span class="nx">autoJibunAddress</span><span class="p">)</span> <span class="p">{</span>
                <span class="kd">var</span> <span class="nx">expJibunAddr</span> <span class="o">=</span> <span class="nx">data</span><span class="p">.</span><span class="nx">autoJibunAddress</span><span class="p">;</span>
                <span class="nx">guideTextBox</span><span class="p">.</span><span class="nx">innerHTML</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">(예상 지번 주소 : </span><span class="dl">'</span> <span class="o">+</span> <span class="nx">expJibunAddr</span> <span class="o">+</span> <span class="dl">'</span><span class="s1">)</span><span class="dl">'</span><span class="p">;</span>
                <span class="nx">guideTextBox</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">block</span><span class="dl">'</span><span class="p">;</span>
            <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
                <span class="nx">guideTextBox</span><span class="p">.</span><span class="nx">innerHTML</span> <span class="o">=</span> <span class="dl">''</span><span class="p">;</span>
                <span class="nx">guideTextBox</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">none</span><span class="dl">'</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}).</span><span class="nx">open</span><span class="p">();</span>
<span class="p">}</span>
<span class="nt">&lt;/script&gt;</span> 
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">API</code> 안내 페이지에 나와 있는대로 추가하고 나에게 맞게 조금만 수정하니까 아주 쉽게 추가가 되었다.</li>
</ul>

<h2 id="memberjoinactionjava">MemberJoinAction.java</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.project.cafe.member.action</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.io.PrintWriter</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.sql.Date</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.sql.Timestamp</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Calendar</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletRequest</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletResponse</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">com.project.cafe.action.Action</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.project.cafe.action.ActionForward</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.project.cafe.member.db.MemberDAO</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.project.cafe.member.db.MemberDTO</span><span class="o">;</span>

<span class="c1">// 회원가입 처리동작 수행</span>
<span class="c1">// model 객체로 pro 페이지 역할을 한다.</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">MemberJoinAction</span> <span class="kd">implements</span> <span class="nc">Action</span>
<span class="o">{</span>
    <span class="kd">private</span> <span class="kt">int</span> <span class="nf">getAge</span><span class="o">(</span><span class="nc">String</span> <span class="n">birth</span><span class="o">)</span>
    <span class="o">{</span>
        <span class="kt">int</span> <span class="n">year</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">birth</span><span class="o">.</span><span class="na">split</span><span class="o">(</span><span class="s">"-"</span><span class="o">)[</span><span class="mi">0</span><span class="o">]);</span>
        <span class="kt">int</span> <span class="n">curYear</span> <span class="o">=</span> <span class="nc">Calendar</span><span class="o">.</span><span class="na">getInstance</span><span class="o">().</span><span class="na">get</span><span class="o">(</span><span class="nc">Calendar</span><span class="o">.</span><span class="na">YEAR</span><span class="o">);</span>
		
        <span class="k">return</span> <span class="n">curYear</span> <span class="o">-</span> <span class="n">year</span><span class="o">;</span>
    <span class="o">}</span>
	
    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="nc">ActionForward</span> <span class="nf">execute</span><span class="o">(</span><span class="nc">HttpServletRequest</span> <span class="n">request</span><span class="o">,</span> <span class="nc">HttpServletResponse</span> <span class="n">response</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">Exception</span> 
    <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"M : MemberJoinAction - execute() 호출"</span><span class="o">);</span>
		
        <span class="c1">// 한글처리</span>
        <span class="n">request</span><span class="o">.</span><span class="na">setCharacterEncoding</span><span class="o">(</span><span class="s">"UTF-8"</span><span class="o">);</span>
		
        <span class="c1">// 전달받은 파라미터 저장 (JSP 페이지가 아니므로 액션태그는 쓸 수 없고 setter를 이용해 저장한다)</span>
        <span class="nc">MemberDTO</span> <span class="n">dto</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">MemberDTO</span><span class="o">();</span>
        <span class="n">dto</span><span class="o">.</span><span class="na">setId</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"id"</span><span class="o">));</span>
        <span class="n">dto</span><span class="o">.</span><span class="na">setPass</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"pass"</span><span class="o">));</span>
        <span class="n">dto</span><span class="o">.</span><span class="na">setName</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"name"</span><span class="o">));</span>
        <span class="n">dto</span><span class="o">.</span><span class="na">setBirth</span><span class="o">(</span><span class="nc">Date</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"birth"</span><span class="o">)));</span>
        <span class="n">dto</span><span class="o">.</span><span class="na">setEmail</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"email"</span><span class="o">));</span>
        <span class="n">dto</span><span class="o">.</span><span class="na">setGender</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"gender"</span><span class="o">));</span>
		
        <span class="c1">// 입력받은 생년월일로 나이 계산</span>
        <span class="kt">int</span> <span class="n">age</span> <span class="o">=</span> <span class="n">getAge</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"birth"</span><span class="o">));</span>
        <span class="n">dto</span><span class="o">.</span><span class="na">setAge</span><span class="o">(</span><span class="n">age</span><span class="o">);</span>
		
        <span class="c1">// 우편번호 저장</span>
        <span class="n">dto</span><span class="o">.</span><span class="na">setPostalcode</span><span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"postalcode"</span><span class="o">)));</span>
		
        <span class="c1">// 주소 필드 합친 후 저장</span>
        <span class="nc">String</span> <span class="n">roadAddress</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"roadAddress"</span><span class="o">);</span>
        <span class="nc">String</span> <span class="n">detailAddress</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"detailAddress"</span><span class="o">);</span>
        <span class="n">dto</span><span class="o">.</span><span class="na">setAddress</span><span class="o">(</span><span class="n">roadAddress</span> <span class="o">+</span> <span class="s">" "</span> <span class="o">+</span> <span class="n">detailAddress</span><span class="o">);</span>
		
        <span class="c1">// 폰번호 3개 필드 합친 후 저장</span>
        <span class="nc">StringBuilder</span> <span class="n">sb</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringBuilder</span><span class="o">();</span>
        <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"phone1"</span><span class="o">));</span>
        <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"phone2"</span><span class="o">));</span>
        <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"phone3"</span><span class="o">));</span>
        <span class="n">dto</span><span class="o">.</span><span class="na">setPhone</span><span class="o">(</span><span class="n">sb</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
		
        <span class="c1">// 날짜 정보 추가 저장</span>
        <span class="n">dto</span><span class="o">.</span><span class="na">setRegdate</span><span class="o">(</span><span class="k">new</span> <span class="nc">Timestamp</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">()));</span>
		
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"M : 전달된 회원 정보 저장"</span><span class="o">);</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"M : "</span> <span class="o">+</span> <span class="n">dto</span><span class="o">);</span>
		
        <span class="c1">// DAO 객체 생성</span>
        <span class="nc">MemberDAO</span> <span class="n">dao</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">MemberDAO</span><span class="o">();</span>
		
        <span class="c1">// 회원가입 메서드 호출</span>
        <span class="n">dao</span><span class="o">.</span><span class="na">insertMember</span><span class="o">(</span><span class="n">dto</span><span class="o">);</span>
		
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"M : 회원가입 완료"</span><span class="o">);</span>
		
        <span class="c1">// 페이지 이동 (로그인 페이지로 - ./login.me)		</span>
        <span class="n">response</span><span class="o">.</span><span class="na">setContentType</span><span class="o">(</span><span class="s">"text/html; charset=utf-8"</span><span class="o">);</span>
        <span class="nc">PrintWriter</span> <span class="n">out</span> <span class="o">=</span> <span class="n">response</span><span class="o">.</span><span class="na">getWriter</span><span class="o">();</span>
        <span class="n">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="s">"&lt;script&gt;"</span><span class="o">);</span>
        <span class="n">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="s">"alert('회원가입이 완료되었습니다!');"</span><span class="o">);</span>
        <span class="n">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="s">"location.href='./login.me';"</span><span class="o">);</span>
        <span class="n">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="s">"&lt;/script&gt;"</span><span class="o">);</span>
		
        <span class="n">out</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
		
        <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>우편번호 필드가 추가되었기 때문에 회원가입처리를 하는 부분도 수정해 주었다.</li>
  <li><code class="language-plaintext highlighter-rouge">DB</code> 테이블에 우편번호를 저장할 컬럼도 추가해 주었다.<br /><br /><br /></li>
</ul>

<h1 id="마감까지">마감까지</h1>
<ul>
  <li><code class="language-plaintext highlighter-rouge">D-5</code></li>
</ul>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="Project Log" /><category term="Project" /><category term="Cafe" /><category term="Log" /><summary type="html"><![CDATA[개발환경 MacBook Air (M1, 2020) OpenJDK 8 Eclipse 2021-12 tomcat 8.5 MySQL Workbench 8.0.19]]></summary></entry><entry><title type="html">프로젝트) Cafe(웹 사이트) 만들기 17 - 메인 화면에서 최신글 미리보기 기능 추가</title><link href="http://localhost:4000/project%20log/cafe-project-17/" rel="alternate" type="text/html" title="프로젝트) Cafe(웹 사이트) 만들기 17 - 메인 화면에서 최신글 미리보기 기능 추가" /><published>2022-03-28T00:00:00+09:00</published><updated>2022-03-28T00:00:00+09:00</updated><id>http://localhost:4000/project%20log/cafe-project-17</id><content type="html" xml:base="http://localhost:4000/project%20log/cafe-project-17/"><![CDATA[<h1 id="개발환경">개발환경</h1>
<ul>
  <li>MacBook Air (M1, 2020)</li>
  <li>OpenJDK 8</li>
  <li>Eclipse 2021-12</li>
  <li>tomcat 8.5</li>
  <li>MySQL Workbench 8.0.19<br /><br /><br /></li>
</ul>

<h1 id="시작">시작</h1>
<ul>
  <li>2022.3.4 ~ <br /><br /><br /></li>
</ul>

<h1 id="주제">주제</h1>
<ul>
  <li>웹 백엔드 수업 중 중간 과제로 개인 프로젝트를 진행하게 되었다.</li>
  <li>회원가입/로그인/탈퇴 등 기본적인 회원관리 시스템을 가진 웹 사이트를 만드는 것이다. 주어진 기한은 <code class="language-plaintext highlighter-rouge">한 달</code></li>
  <li>나는 <code class="language-plaintext highlighter-rouge">다음 카페</code>를 소규모로 만들어 보기로 했다. 평소 자주 이용하기도 했고 과제의 평가 기준에서 요구하는 기능들을 다 담고 있기도 했기 때문에 이번 기회에 구현해 보면 그동안 배운 것들을 활용하기에 좋을 거 같았다.</li>
  <li>평가 기준에 사이트의 디자인 구현(HTML/CSS 등 프론트엔드)은 포함되지 않기 때문에 본인이 쓰고 싶은 HTML/CSS 템플릿을 구한 뒤 회원 관리 기능을 구현하면 된다.<br /><br /><br /></li>
</ul>

<h1 id="진행상황">진행상황</h1>
<ul>
  <li>원래는 파일 업로드 기능을 만들려고 했으나 수업 진도가 생각보다 늦어져서 다른 기능을 먼저 추가하기로 했다.</li>
  <li>오늘은 <code class="language-plaintext highlighter-rouge">ajax</code>를 이용해 비동기 방식으로 메인 페이지에서 최신글 몇 개를 미리 볼 수 있는 기능을 만들었다.</li>
</ul>

<p align="center"><img src="../../assets/images/newFeeds.png" /></p>

<h2 id="mainjsp">main.jsp</h2>

<div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!-- Start Head --&gt;</span>
  <span class="nt">&lt;jsp:include </span><span class="na">page=</span><span class="s">"../inc/top.jsp"</span><span class="nt">&gt;&lt;/jsp:include&gt;</span>
  <span class="nt">&lt;script </span><span class="na">src=</span><span class="s">"${pageContext.request.contextPath }/js/main.js"</span><span class="nt">&gt;&lt;/script&gt;</span>
<span class="c">&lt;!-- End Head --&gt;</span>

<span class="nt">&lt;section</span> <span class="na">data-theme=</span><span class="s">"_bgp"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;div</span> <span class="na">data-layout=</span><span class="s">"_r"</span> <span class="na">class=</span><span class="s">"MOD_ARTICLEBLOCKS1"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">data-layout=</span><span class="s">"al16 ec8"</span> <span class="na">class=</span><span class="s">"MOD_ARTICLEBLOCKS1_Cont"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;h2&gt;</span>최신글<span class="nt">&lt;/h2&gt;</span>
      <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">""</span> <span class="na">class=</span><span class="s">"MOD_ARTICLEBLOCKS1_BlockLarge"</span> <span class="na">id=</span><span class="s">"mainHref1"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;div</span> <span class="na">style=</span><span class="s">"background-image:url(https://s3-us-west-2.amazonaws.com/s.cdpn.io/96252/aperitif-large-object1-luca-bravo.jpg)"</span> <span class="na">class=</span><span class="s">"MOD_ARTICLEBLOCKS1_Img"</span> <span class="na">role=</span><span class="s">"img"</span> <span class="na">aria-label=</span><span class="s">"alt text"</span><span class="nt">&gt;&lt;/div&gt;</span>
        <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"MOD_ARTICLEBLOCKS1_Txt"</span><span class="nt">&gt;</span>
          <span class="nt">&lt;h3</span> <span class="na">class=</span><span class="s">"MOD_ARTICLEBLOCKS1_Title"</span> <span class="na">id=</span><span class="s">"mainTitle1"</span><span class="nt">&gt;</span>Article Title<span class="nt">&lt;/h3&gt;</span>
          <span class="nt">&lt;p</span> <span class="na">class=</span><span class="s">"MOD_ARTICLEBLOCKS1_Category"</span> <span class="na">id=</span><span class="s">"mainContent1"</span><span class="nt">&gt;</span>Category<span class="nt">&lt;/p&gt;</span>
        <span class="nt">&lt;/div&gt;</span>
      <span class="nt">&lt;/a&gt;</span>
    <span class="nt">&lt;/div&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">data-layout=</span><span class="s">"al16 ch8 ec4"</span> <span class="na">class=</span><span class="s">"MOD_ARTICLEBLOCKS1_Cont"</span><span class="nt">&gt;</span>
      <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">""</span> <span class="na">class=</span><span class="s">"MOD_ARTICLEBLOCKS1_BlockSmall"</span> <span class="na">id=</span><span class="s">"mainHref2"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;div</span> <span class="na">style=</span><span class="s">"background-image:url(https://s3-us-west-2.amazonaws.com/s.cdpn.io/96252/aperitif-large-object1-luca-bravo.jpg)"</span> <span class="na">class=</span><span class="s">"MOD_ARTICLEBLOCKS1_Img"</span> <span class="na">role=</span><span class="s">"img"</span> <span class="na">aria-label=</span><span class="s">"alt text"</span><span class="nt">&gt;&lt;/div&gt;</span>

        <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"MOD_ARTICLEBLOCKS1_Txt"</span><span class="nt">&gt;</span>
          <span class="nt">&lt;h3</span> <span class="na">class=</span><span class="s">"MOD_ARTICLEBLOCKS1_Title"</span> <span class="na">id=</span><span class="s">"mainTitle2"</span><span class="nt">&gt;</span>Article Title<span class="nt">&lt;/h3&gt;</span>
          <span class="nt">&lt;p</span> <span class="na">class=</span><span class="s">"MOD_ARTICLEBLOCKS1_Category"</span> <span class="na">id=</span><span class="s">"mainContent2"</span><span class="nt">&gt;</span>Category<span class="nt">&lt;/p&gt;</span>
        <span class="nt">&lt;/div&gt;</span>
      <span class="nt">&lt;/a&gt;</span>
    <span class="nt">&lt;/div&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">data-layout=</span><span class="s">"al16 ch8 ec4"</span> <span class="na">class=</span><span class="s">"MOD_ARTICLEBLOCKS1_Cont"</span><span class="nt">&gt;</span>
      <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">""</span> <span class="na">class=</span><span class="s">"MOD_ARTICLEBLOCKS1_BlockSmall"</span> <span class="na">id=</span><span class="s">"mainHref3"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;div</span> <span class="na">style=</span><span class="s">"background-image:url(https://s3-us-west-2.amazonaws.com/s.cdpn.io/96252/aperitif-large-object1-luca-bravo.jpg)"</span> <span class="na">class=</span><span class="s">"MOD_ARTICLEBLOCKS1_Img"</span> <span class="na">role=</span><span class="s">"img"</span> <span class="na">aria-label=</span><span class="s">"alt text"</span><span class="nt">&gt;&lt;/div&gt;</span>

        <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"MOD_ARTICLEBLOCKS1_Txt"</span><span class="nt">&gt;</span>
          <span class="nt">&lt;h3</span> <span class="na">class=</span><span class="s">"MOD_ARTICLEBLOCKS1_Title"</span> <span class="na">id=</span><span class="s">"mainTitle3"</span><span class="nt">&gt;</span>Article Title<span class="nt">&lt;/h3&gt;</span>
          <span class="nt">&lt;p</span> <span class="na">class=</span><span class="s">"MOD_ARTICLEBLOCKS1_Category"</span> <span class="na">id=</span><span class="s">"mainContent3"</span><span class="nt">&gt;</span>Category<span class="nt">&lt;/p&gt;</span>
        <span class="nt">&lt;/div&gt;</span>
      <span class="nt">&lt;/a&gt;</span>
    <span class="nt">&lt;/div&gt;</span>
  <span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/section&gt;</span>
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">Article Title</code>과 <code class="language-plaintext highlighter-rouge">Category</code> 부분에 각각 글 제목과 내용 일부를 출력할 것이다.</li>
  <li>직접 만든 것은 아니고 다운 받은 템플릿을 약간 변형해서 만들었다.</li>
</ul>

<h2 id="mainjs">main.js</h2>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">$</span><span class="p">(</span><span class="nb">document</span><span class="p">).</span><span class="nx">ready</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span>
<span class="p">{</span>
    <span class="nx">getFeeds</span><span class="p">();</span>
<span class="p">});</span>

<span class="kd">function</span> <span class="nx">getFeeds</span><span class="p">()</span>
<span class="p">{</span>
    <span class="nx">$</span><span class="p">.</span><span class="nx">ajax</span><span class="p">({</span>
        <span class="na">type</span><span class="p">:</span> <span class="dl">'</span><span class="s1">POST</span><span class="dl">'</span><span class="p">,</span>
        <span class="na">async</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
        <span class="na">url</span><span class="p">:</span> <span class="dl">'</span><span class="s1">./GetFeed.bo</span><span class="dl">'</span><span class="p">,</span>
        <span class="na">dataType</span><span class="p">:</span> <span class="dl">'</span><span class="s1">json</span><span class="dl">'</span><span class="p">,</span>
        <span class="na">data</span><span class="p">:</span> <span class="p">{</span>
            <span class="dl">'</span><span class="s1">cnt</span><span class="dl">'</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span>
            <span class="dl">'</span><span class="s1">len</span><span class="dl">'</span><span class="p">:</span> <span class="mi">70</span>
        <span class="p">},</span>
        <span class="na">success</span><span class="p">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">data</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">if</span> <span class="p">(</span><span class="nx">data</span> <span class="o">!=</span> <span class="kc">null</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">data</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span>
                <span class="p">{</span>
                    <span class="kd">var</span> <span class="nx">titleId</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">#mainTitle</span><span class="dl">'</span><span class="p">;</span>
                    <span class="nx">titleId</span> <span class="o">+=</span> <span class="p">(</span><span class="nx">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">);</span>
                    <span class="nx">$</span><span class="p">(</span><span class="nx">titleId</span><span class="p">).</span><span class="nx">html</span><span class="p">(</span><span class="nx">data</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">title</span><span class="p">);</span>

                    <span class="kd">var</span> <span class="nx">contentId</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">#mainContent</span><span class="dl">'</span><span class="p">;</span>
                    <span class="nx">contentId</span> <span class="o">+=</span> <span class="p">(</span><span class="nx">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">);</span>
                    <span class="nx">$</span><span class="p">(</span><span class="nx">contentId</span><span class="p">).</span><span class="nx">html</span><span class="p">(</span><span class="nx">data</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">content</span><span class="p">);</span>

                    <span class="kd">var</span> <span class="nx">hrefId</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">#mainHref</span><span class="dl">'</span><span class="p">;</span>
                    <span class="nx">hrefId</span> <span class="o">+=</span> <span class="p">(</span><span class="nx">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">);</span>
                    <span class="nx">$</span><span class="p">(</span><span class="nx">hrefId</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="dl">'</span><span class="s1">href</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">./BoardContent.bo?num=</span><span class="dl">'</span><span class="o">+</span><span class="nx">data</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">num</span><span class="o">+</span><span class="dl">'</span><span class="s1">&amp;pageNum=1</span><span class="dl">'</span><span class="p">);</span>
                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">});</span>
<span class="p">}</span>
</code></pre></div></div>

<ul>
  <li>메인 화면이 로드되었을 때 다른 페이지 이동 없이 보여져야 하니까 <code class="language-plaintext highlighter-rouge">ajax</code>를 이용해 비동기 방식으로 보여줄 것이다.</li>
  <li>최대 <code class="language-plaintext highlighter-rouge">cnt</code>의 수만큼 게시물을 가져오되 내용물은 <code class="language-plaintext highlighter-rouge">len</code> 길이만큼만 가져오도록 했다.</li>
  <li>태그의 아이디는 맨 뒤에 숫자만 바껴서 <code class="language-plaintext highlighter-rouge">i</code> 값에 따라 변경되도록 했다.</li>
  <li>각 게시물마다 다른 글번호를 가진 페이지로 연결되어야 하기 때문에 게시글 하나를 불러올 때마다 해당 게시글의 <code class="language-plaintext highlighter-rouge">a</code> 태그의 <code class="language-plaintext highlighter-rouge">href</code>를 바꿔주었다.</li>
  <li>최신글 3개만 보여주기 때문에 페이지 번호는 1번으로 고정한다.</li>
</ul>

<h2 id="boardfrontcontrollerjava">BoardFrontController.java</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.project.cafe.board.action</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.servlet.RequestDispatcher</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.ServletException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServlet</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletRequest</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletResponse</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">com.project.cafe.action.Action</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.project.cafe.action.ActionForward</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">BoardFrontController</span> <span class="kd">extends</span> <span class="nc">HttpServlet</span>
<span class="o">{</span>
    <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">doProcess</span><span class="o">(</span><span class="nc">HttpServletRequest</span> <span class="n">request</span><span class="o">,</span> <span class="nc">HttpServletResponse</span> <span class="n">response</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">ServletException</span><span class="o">,</span> <span class="nc">IOException</span> 
    <span class="o">{</span>
        <span class="c1">// 1. 전달되는 가상주소 계산</span>
        <span class="c1">// .. 생략</span>
		
        <span class="c1">// 2. 가상주소 매핑</span>
        <span class="nc">Action</span> <span class="n">action</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
        <span class="nc">ActionForward</span> <span class="n">forward</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
		
        <span class="c1">// .. 생략</span>
        <span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="n">command</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"/GetFeed.bo"</span><span class="o">))</span>
        <span class="o">{</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"C : /GetFeed.bo 호출"</span><span class="o">);</span>
			
            <span class="n">action</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">GetFeed</span><span class="o">();</span>
			
            <span class="k">try</span> <span class="o">{</span>
                <span class="n">forward</span> <span class="o">=</span> <span class="n">action</span><span class="o">.</span><span class="na">execute</span><span class="o">(</span><span class="n">request</span><span class="o">,</span> <span class="n">response</span><span class="o">);</span>
            <span class="o">}</span>
            <span class="k">catch</span> <span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
            <span class="o">}</span>
        <span class="o">}</span>
		
        <span class="c1">// 3. 페이지 이동</span>
        <span class="c1">// .. 생략</span>
	<span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">컨트롤러</code>에서 <code class="language-plaintext highlighter-rouge">DB</code>에 접속해서 작업을 수행할 서블릿과 연결한다.</li>
</ul>

<h2 id="getfeedjava">GetFeed.java</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.project.cafe.board.action</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletRequest</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletResponse</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">org.json.simple.JSONArray</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.json.simple.JSONObject</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">com.project.cafe.action.Action</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.project.cafe.action.ActionForward</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.project.cafe.board.db.BoardDAO</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.project.cafe.board.db.BoardDTO</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">GetFeed</span> <span class="kd">implements</span> <span class="nc">Action</span> 
<span class="o">{</span>
    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="nc">ActionForward</span> <span class="nf">execute</span><span class="o">(</span><span class="nc">HttpServletRequest</span> <span class="n">request</span><span class="o">,</span> <span class="nc">HttpServletResponse</span> <span class="n">response</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">Exception</span> 
    <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"ajax 시작_GetFeed - execute() 호출"</span><span class="o">);</span>
		
        <span class="nc">BoardDAO</span> <span class="n">dao</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BoardDAO</span><span class="o">();</span>
        <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">BoardDTO</span><span class="o">&gt;</span> <span class="n">list</span> <span class="o">=</span> <span class="n">dao</span><span class="o">.</span><span class="na">getPosts</span>
                <span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"cnt"</span><span class="o">)),</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"len"</span><span class="o">)));</span>
		
        <span class="c1">// DB에서 가져온 데이터들을 json에 저장</span>
        <span class="nc">JSONArray</span> <span class="n">feedList</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">JSONArray</span><span class="o">();</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">list</span><span class="o">.</span><span class="na">size</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span>
        <span class="o">{</span>
            <span class="nc">JSONObject</span> <span class="n">feed</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">JSONObject</span><span class="o">();</span>
            <span class="n">feed</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"num"</span><span class="o">,</span> <span class="n">list</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">).</span><span class="na">getNum</span><span class="o">());</span>
            <span class="n">feed</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"title"</span><span class="o">,</span> <span class="n">list</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">).</span><span class="na">getTitle</span><span class="o">());</span>
            <span class="n">feed</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"content"</span><span class="o">,</span> <span class="n">list</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">).</span><span class="na">getContent</span><span class="o">());</span>
			
            <span class="n">feedList</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">feed</span><span class="o">);</span>
        <span class="o">}</span>
		
        <span class="c1">// 클라이언트에게 데이터 보내기</span>
        <span class="c1">// 한글처리</span>
        <span class="n">response</span><span class="o">.</span><span class="na">setCharacterEncoding</span><span class="o">(</span><span class="s">"UTF-8"</span><span class="o">);</span>
        <span class="c1">// json 데이터 넘김</span>
        <span class="n">response</span><span class="o">.</span><span class="na">getWriter</span><span class="o">().</span><span class="na">print</span><span class="o">(</span><span class="n">feedList</span><span class="o">.</span><span class="na">toJSONString</span><span class="o">());</span>
        <span class="n">response</span><span class="o">.</span><span class="na">getWriter</span><span class="o">().</span><span class="na">close</span><span class="o">();</span>
		
        <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>서블릿으로 연결해서 게시글들을 가져온다.</li>
  <li>데이터는 <code class="language-plaintext highlighter-rouge">json</code>에 담아서 보낸다.</li>
</ul>

<h2 id="boarddao---getpostscnt-len">BoardDAO - getPosts(cnt, len)</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">BoardDTO</span><span class="o">&gt;</span> <span class="nf">getPosts</span><span class="o">(</span><span class="kt">int</span> <span class="n">cnt</span><span class="o">,</span> <span class="kt">int</span> <span class="n">len</span><span class="o">)</span>
<span class="o">{</span>
    <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">BoardDTO</span><span class="o">&gt;</span> <span class="n">list</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">BoardDTO</span><span class="o">&gt;();</span>
		
    <span class="k">try</span> <span class="o">{</span>
        <span class="n">con</span> <span class="o">=</span> <span class="n">getCon</span><span class="o">();</span>
			
        <span class="n">sql</span> <span class="o">=</span> <span class="s">"select title, content from cafe_board order by num desc limit ?"</span><span class="o">;</span>
        <span class="n">pstmt</span> <span class="o">=</span> <span class="n">con</span><span class="o">.</span><span class="na">prepareStatement</span><span class="o">(</span><span class="n">sql</span><span class="o">);</span>
			
        <span class="n">pstmt</span><span class="o">.</span><span class="na">setInt</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="n">cnt</span><span class="o">);</span>
			
        <span class="n">rs</span> <span class="o">=</span> <span class="n">pstmt</span><span class="o">.</span><span class="na">executeQuery</span><span class="o">();</span>
			
        <span class="k">while</span> <span class="o">(</span><span class="n">rs</span><span class="o">.</span><span class="na">next</span><span class="o">())</span>
        <span class="o">{</span>
            <span class="nc">BoardDTO</span> <span class="n">dto</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BoardDTO</span><span class="o">();</span>
            <span class="n">dto</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="n">rs</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="s">"title"</span><span class="o">));</span>
				
            <span class="c1">// 문자열 일부만 저장</span>
            <span class="nc">String</span> <span class="n">content</span> <span class="o">=</span> <span class="n">rs</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="s">"content"</span><span class="o">);</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">len</span> <span class="o">&gt;</span> <span class="n">content</span><span class="o">.</span><span class="na">length</span><span class="o">())</span>
                <span class="n">content</span> <span class="o">=</span> <span class="n">content</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="n">content</span><span class="o">.</span><span class="na">length</span><span class="o">()</span> <span class="o">-</span> <span class="mi">1</span><span class="o">);</span>
            <span class="k">else</span>
            <span class="o">{</span>
                <span class="n">content</span> <span class="o">=</span> <span class="n">content</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="n">len</span><span class="o">);</span>
                <span class="n">content</span> <span class="o">=</span> <span class="n">content</span><span class="o">.</span><span class="na">concat</span><span class="o">(</span><span class="s">"..."</span><span class="o">);</span>
            <span class="o">}</span>
				
            <span class="n">dto</span><span class="o">.</span><span class="na">setContent</span><span class="o">(</span><span class="n">content</span><span class="o">);</span>
				
            <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">dto</span><span class="o">);</span>
        <span class="o">}</span>
			
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"DAO : 글 "</span><span class="o">+</span><span class="n">list</span><span class="o">.</span><span class="na">size</span><span class="o">()+</span><span class="s">"개 저장 완료"</span><span class="o">);</span>
    <span class="o">}</span>
    <span class="k">catch</span> <span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
    <span class="o">}</span>
    <span class="k">finally</span> <span class="o">{</span>
        <span class="n">closeDB</span><span class="o">();</span>
    <span class="o">}</span>
		
    <span class="k">return</span> <span class="n">list</span><span class="o">;</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>네이버 블로그 메인 페이지의 <code class="language-plaintext highlighter-rouge">html</code> 소스를 보니까 각 포스트별 미리보기 창에서 텍스트 자체는 일정 글자수 만큼만 출력하고 이상은 … 이 붙은 형태로 되어 있어서 이렇게 구현해 보았다.</li>
  <li>일단 구현한 후 학원 선생님한테 여쭤보니까 이런 방식으로 구현하면 된다고 하셔서 이대로 고정하기로 했다. 😄<br /><br /><br /></li>
</ul>

<h1 id="마감까지">마감까지</h1>
<ul>
  <li><code class="language-plaintext highlighter-rouge">D-7</code></li>
</ul>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="Project Log" /><category term="Project" /><category term="Cafe" /><category term="Log" /><summary type="html"><![CDATA[개발환경 MacBook Air (M1, 2020) OpenJDK 8 Eclipse 2021-12 tomcat 8.5 MySQL Workbench 8.0.19]]></summary></entry><entry><title type="html">Python) 이것이 취업을 위한 코딩테스트다 04 실전문제 3. 게임 개발</title><link href="http://localhost:4000/boj/CodingTestBook-04-h4-py/" rel="alternate" type="text/html" title="Python) 이것이 취업을 위한 코딩테스트다 04 실전문제 3. 게임 개발" /><published>2022-03-28T00:00:00+09:00</published><updated>2022-03-28T00:00:00+09:00</updated><id>http://localhost:4000/boj/CodingTestBook-04-h4-py</id><content type="html" xml:base="http://localhost:4000/boj/CodingTestBook-04-h4-py/"><![CDATA[<h1 id="문제-출처">문제 출처</h1>
<hr />

<ul>
  <li>이것이 취업을 위한 코딩테스트다 with 파이썬</li>
  <li>Chapter 04 - 실전문제 3. 게임 개발<br /><br /></li>
</ul>

<h1 id="제한">제한</h1>
<hr />

<ul>
  <li>시간 제한 : 1 초</li>
  <li>메모리 제한 : 128 MB<br /><br /></li>
</ul>

<h1 id="문제">문제</h1>
<hr />

<ul>
  <li>현민이는 게임 캐릭터가 맵 안에서 움직이는 시스템을 개발 중이다. 캐릭터가 있는 장소는 1 X 1 크기의 정사각형으로 이뤄진 N X M 크기의 직사각형으로, 각각의 칸은 육지 또는 바다이다. 캐릭터는 동서남북 중 한 곳을 바라본다.</li>
  <li>맵의 각 칸은 (A, B)로 나타낼 수 있고, A는 북쪽으로부터 떨어진 칸의 개수, B는 서쪽으로부터 떨어진 칸의 개수이다. 캐릭터는 상하좌우로 움직일 수 있고, 바다로 되어 있는 공간에는 갈 수 없다. 캐릭터의 움직임을 설정하기 위해 정해 놓은 매뉴얼은 이러하다.</li>
</ul>

<ol>
  <li>현재 위치에서 현재 방향을 기준으로 왼쪽 방향(반시계 방향으로 90도 회전한 방향)부터 차례대로 갈 곳을 정한다.</li>
  <li>캐릭터의 바로 왼쪽 방향에 아직 가보지 않은 곳이 존재한다면, 왼쪽 방향으로 회전한 다음 왼쪽으로 한 칸을 전진한다. 왼쪽 방향에 가보지 않은 칸이 있다면, 왼쪽 방향으로 회전만 수행하고 1단계로 돌아간다.</li>
  <li>만약 네 방향 모두 이미 가본 칸이거나 바다로 되어 있는 경우에는, 바라보는 방향을 유지한 채로 한 칸 뒤로 가고 1단계로 돌아간다. 단, 이때 뒤쪽 방향이 바다인 칸이라 뒤로 갈 수 없는 경우에는 움직임을 멈춘다.</li>
</ol>

<ul>
  <li>현민이는 위 과정을 반복적으로 수행하면서 캐릭터의 움직임에 이상이 있는지 테스트하려고 한다. 매뉴얼에 따라 캐릭터를 이동시킨 뒤에, 캐릭터가 방문한 칸의 수를 출력하는 프로그램을 만드시오.<br /><br /></li>
</ul>

<h1 id="입력">입력</h1>
<hr />

<ul>
  <li>첫째 줄에 맵의 세로 크기 N과 가로 크기 M을 공백으로 구분하여 입력한다. (3 &lt;= N, M &lt;= 50)</li>
  <li>둘째 줄에 게임 캐릭터가 있는 칸의 좌표 (A, B)와 바라보는 방향 d가 각각 서로 공백으로 구분하여 주어진다. 방향 d의 값으로는 다음과 같이 4가지가 존재한다.
    <ul>
      <li>0 : 북쪽</li>
      <li>1 : 동쪽</li>
      <li>2 : 남쪽</li>
      <li>3 : 서쪽</li>
    </ul>
  </li>
  <li>셋째 줄부터 맵이 육지인지 바다인지에 대한 정보가 주어진다. N개의 줄에 맵의 상태가 북쪽부터 남쪽 순서대로, 각 줄의 데이터는 서쪽부터 동쪽 순서대로 주어진다. 맵의 외곽은 항상 바다로 되어 있다.
    <ul>
      <li>0 : 육지</li>
      <li>1 : 바다</li>
    </ul>
  </li>
  <li>처음에 게임 캐릭터가 위치한 칸의 상태는 항상 육지이다.<br /><br /></li>
</ul>

<h1 id="출력">출력</h1>
<hr />

<ul>
  <li>첫째 줄에 이동을 마친 후 캐릭터가 방문한 칸의 수를 출력한다.<br /><br /><br /></li>
</ul>

<h1 id="-풀이">👀 풀이</h1>
<hr />

<ul>
  <li>캐릭터가 이동하기 전에 왼쪽으로 회전시킨 다음 이동할 수 있는 위치가 바다가 아니거나 아직 방문하지 않은 곳이라면 이동시킨다. (방문표시 배열 필요)</li>
  <li>이동할 수 없다면 회전 횟수를 증가시킨다. 회전 횟수가 4가 되면 4방향 다 돌았는데도 이동할 수 있는 곳이 없었던 것이다.</li>
  <li>4방향 다 이동할 수 없다면 뒤로 한 칸 이동시키는데, 만약 뒤에도 바다가 있어서 이동할 수 없다면 이동을 중단한다.<br /><br /></li>
</ul>

<h1 id="코드">코드</h1>
<hr />

<script src="https://gist.github.com/miro7923/1abe9f07235485a3c96a9a8e347df8f5.js"></script>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="BOJ" /><category term="Algorithm" /><category term="Implementation" /><category term="Python" /><summary type="html"><![CDATA[문제 출처 이것이 취업을 위한 코딩테스트다 with 파이썬 Chapter 04 - 실전문제 3. 게임 개발 제한 시간 제한 : 1 초 메모리 제한 : 128 MB]]></summary></entry><entry><title type="html">컴퓨터 네트워크) REST</title><link href="http://localhost:4000/computer%20network/computer-network-restful/" rel="alternate" type="text/html" title="컴퓨터 네트워크) REST" /><published>2022-03-27T00:00:00+09:00</published><updated>2022-03-27T00:00:00+09:00</updated><id>http://localhost:4000/computer%20network/computer-network-restful</id><content type="html" xml:base="http://localhost:4000/computer%20network/computer-network-restful/"><![CDATA[<h1 id="-rest">👀 REST?</h1>
<ul>
  <li>서버가 클라이언트의 상태 정보를 가지고 있지 않는 것</li>
  <li><code class="language-plaintext highlighter-rouge">HTTP</code>를 통한 서버 클라이언트 모델에서 서버가 클라이언트의 위치와 같은 현재 상태를 유지하는 정보를 가지고 있으면 오버헤드가 크다.</li>
  <li>그래서 클라이언트의 상태 정보를 서버에 저장하지 않고 서버와 클라이언트 간에 주고받는 <code class="language-plaintext highlighter-rouge">HTTP</code> 메세지 안에 클라이언트의 상태 정보를 담고 그것을 해석할 수 있는 방법까지 담는다.</li>
  <li>서버는 특정 클라이언트에 대한 정보를 저장하고 있지 않아도 <code class="language-plaintext highlighter-rouge">HTTP request</code> 메세지만 보고 클라이언트의 상태를 알 수 있고 클라이언트는 <code class="language-plaintext highlighter-rouge">HTTP response</code> 메세지를 받으면 어떤 방식으로 메세지를 가져와야 할 지 알 수 있다.</li>
  <li>이런 아키텍처를 따르는 서비스를 <code class="language-plaintext highlighter-rouge">RESTful</code>이라 한다.<br /><br /></li>
</ul>

<h1 id="rest-요구사항">REST 요구사항</h1>
<ul>
  <li><code class="language-plaintext highlighter-rouge">클라이언트-서버</code> 구조로 이루어져야 한다.</li>
  <li><code class="language-plaintext highlighter-rouge">HTTP</code> 메세지 안에 모든 정보가 들어있어야 한다. (다른 데이터 스토리지 사용 X)</li>
  <li>서버의 response가 클라이언트 쪽 또는 어떤 웹 캐시에 저장할 수 있어야 한다.</li>
  <li>클라이언트가 웹 서버에 바로 연결되었든 다른 중간 지점을 거쳐서 연결이 되었든 클라이언트 입장에서는 서비스를 받는 데에 차이가 없어야 한다.</li>
  <li>자바스크립트와 같이 어떤 코드가 클라이언트 기기에 다운로드 되었을 때 클라이언트 기기에 그 코드를 해석할 수 있는 방법이 없어도 그것을 실행할 수 있게 해 주는 응용프로그램을 전달해야 한다.</li>
  <li>특정한 컴퓨터 아키텍처에 상관없이 어디서든 실행할 수 있어야 한다.<br /><br /><br /></li>
</ul>

<h1 id="출처">출처</h1>
<ul>
  <li><a href="http://www.kmooc.kr/courses/course-v1:PNUk+CN_C01+2021_KM_013/video">컴퓨터 네트워킹 - 부산대학교 K-MOOC 공개강의</a></li>
</ul>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="Computer Network" /><category term="CS" /><category term="Network" /><category term="Application" /><summary type="html"><![CDATA[👀 REST? 서버가 클라이언트의 상태 정보를 가지고 있지 않는 것 HTTP를 통한 서버 클라이언트 모델에서 서버가 클라이언트의 위치와 같은 현재 상태를 유지하는 정보를 가지고 있으면 오버헤드가 크다. 그래서 클라이언트의 상태 정보를 서버에 저장하지 않고 서버와 클라이언트 간에 주고받는 HTTP 메세지 안에 클라이언트의 상태 정보를 담고 그것을 해석할 수 있는 방법까지 담는다. 서버는 특정 클라이언트에 대한 정보를 저장하고 있지 않아도 HTTP request 메세지만 보고 클라이언트의 상태를 알 수 있고 클라이언트는 HTTP response 메세지를 받으면 어떤 방식으로 메세지를 가져와야 할 지 알 수 있다. 이런 아키텍처를 따르는 서비스를 RESTful이라 한다.]]></summary></entry><entry><title type="html">Python) 이것이 취업을 위한 코딩테스트다 04 실전문제 2. 왕실의 나이트</title><link href="http://localhost:4000/boj/CodingTestBook-04-h3-py/" rel="alternate" type="text/html" title="Python) 이것이 취업을 위한 코딩테스트다 04 실전문제 2. 왕실의 나이트" /><published>2022-03-27T00:00:00+09:00</published><updated>2022-03-27T00:00:00+09:00</updated><id>http://localhost:4000/boj/CodingTestBook-04-h3-py</id><content type="html" xml:base="http://localhost:4000/boj/CodingTestBook-04-h3-py/"><![CDATA[<h1 id="문제-출처">문제 출처</h1>
<hr />

<ul>
  <li>이것이 취업을 위한 코딩테스트다 with 파이썬</li>
  <li>Chapter 04 - 실전문제 2. 왕실의 나이트<br /><br /></li>
</ul>

<h1 id="제한">제한</h1>
<hr />

<ul>
  <li>시간 제한 : 1 초</li>
  <li>메모리 제한 : 128 MB<br /><br /></li>
</ul>

<h1 id="문제">문제</h1>
<hr />

<ul>
  <li>행복 왕국의 왕실 정원은 체스판과 같은 8 X 8 좌표 평면이다. 왕실 정원의 특정한 한 칸에 나이트가 서 있다. 나이트는 매우 충성스러운 신하로서 매일 무술을 연마한다.</li>
  <li>나이트는 말을 타고 있기 때문에 이동을 할 때는 L자 형태로만 이동할 수 있으며 정원 밖으로는 나갈 수 없다. 나이트는 특정한 위치에서 다음과 같은 2가지 경우로 이동할 수 있다.</li>
</ul>

<ol>
  <li>수평으로 두 칸 이동한 뒤에 수직으로 한 칸 이동하기</li>
  <li>수직으로 두 칸 이동한 뒤에 수평으로 한 칸 이동하기</li>
</ol>

<ul>
  <li>8 X 8 좌표 평면상에서 나이트의 위치가 주어졌을 때 나이트가 이동할 수 있는 경우의 수를 출력하는 프로그램을 작성하시오. 이때 왕실의 정원에서 행 위치를 표현할 때는 1부터 8로 표현하며, 열 위치를 표현할 때는 a부터 h로 표현한다.<br /><br /></li>
</ul>

<h1 id="입력">입력</h1>
<hr />

<ul>
  <li>첫째 줄에 8 X 8 좌표 평면상에서 현재 나이트가 위치한 곳의 좌표를 나타내는 두 문자로 구성된 문자열이 입력된다. 입력 문자는 a1처럼 열과 행으로 이뤄진다.<br /><br /></li>
</ul>

<h1 id="출력">출력</h1>
<hr />

<ul>
  <li>첫째 줄에 나이트가 이동할 수 있는 경우의 수를 출력하시오.<br /><br /><br /></li>
</ul>

<h1 id="-풀이">👀 풀이</h1>
<hr />

<ul>
  <li>나이트가 이동할 수 있는 모든 방향 쌍을 배열에 저장한 다음 반복문을 돌려 그 방향으로 이동했을 때 체스판 안 인지 확인해서 체스판 안일 때에만 경우의 수를 증가시키면 된다.</li>
  <li>입력 중 열은 a1과 같이 알파벳으로 주어지기 때문에 이걸 숫자로 바꿔주는 것이 계산하기 편하다.<br /><br /></li>
</ul>

<h1 id="코드">코드</h1>
<hr />

<script src="https://gist.github.com/miro7923/13a3a9a7105a54df2f0dd5bcbb99cdbe.js"></script>]]></content><author><name>Yujin Hwang</name><email>miro7923@gmail.com</email></author><category term="BOJ" /><category term="Algorithm" /><category term="Implementation" /><category term="Python" /><summary type="html"><![CDATA[문제 출처 이것이 취업을 위한 코딩테스트다 with 파이썬 Chapter 04 - 실전문제 2. 왕실의 나이트 제한 시간 제한 : 1 초 메모리 제한 : 128 MB]]></summary></entry></feed>